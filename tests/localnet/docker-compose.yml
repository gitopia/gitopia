services:
  gitopiad:
    image: gitopia/gitopiad-e2e
    build:
      context: ../../
      dockerfile: Dockerfile
    volumes:
      - ./scripts/setup_chain.sh:/gitopia/setup.sh
      - ./data/gitopia/:/gitopia/.gitopia/
      - gitopiad-binary:/gitopia/bin  # New volume to share the binary
    entrypoint:
      - /gitopia/setup.sh
    environment:
      - HOME=/gitopia
      - CHAIN_ID=localgitopia
    ports:
      - 1317:1317
      - 9090:9090
      - 26657:26657
    expose:
      - 9090
      - 26657
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:26657/status"]
      interval: 10s
      timeout: 5s
      retries: 5

  git-server:
    image: gitopia/git-server
    ports:
      - 5001:5000
    volumes:
      - ./data/repos:/var/repos
      - ./data/attachments:/var/attachments

  faucet:
    image: gitopia/faucet
    ports:
      - 4500:4500
    volumes:
      - gitopiad-binary:/usr/local/gitopia/bin:ro  # Share the binary with the faucet
    environment:
      - PATH=/usr/local/gitopia/bin:$PATH
    depends_on:
      gitopiad:
        condition: service_healthy

  rewards:
    image: gitopia/rewards
    ports:
      - 10500:10500
    expose:
      - 10500
    environment:
      - PATH=/usr/local/gitopia/bin:$PATH
      - ENV=dev
    volumes:
      - gitopiad-binary:/usr/local/gitopia/bin:ro  # Share the binary with the rewards service

  ipfs:
    image: ipfs/go-ipfs:v0.10.0
    ports:
      - '5002:5001'
    volumes:
      - ./data/ipfs:/data/ipfs

  postgres:
    image: postgres
    ports:
      - '5432:5432'
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements"
      ]
    environment:
      POSTGRES_USER: graph-node
      POSTGRES_PASSWORD: let-me-in
      POSTGRES_DB: graph-node
      PGDATA: "/data/postgres"
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data

  graph-node:
    image: graphprotocol/graph-node:v0.31.0
    ports:
      - '8000:8000'
      - '8001:8001'
      - '8020:8020'
      - '8030:8030'
      - '8040:8040'
    depends_on:
      ipfs:
        condition: service_started
      postgres:
        condition: service_started
      firehose:
        condition: service_healthy
    extra_hosts:
      - host.docker.internal:host-gateway
    environment:
      GRAPH_NODE_CONFIG: /etc/config.toml
      postgres_host: postgres
      postgres_user: graph-node
      postgres_pass: let-me-in
      postgres_db: graph-node
      ipfs: 'ipfs:5001'
      ethereum: 'mainnet:http://host.docker.internal:8545'
      GRAPH_LOG: debug
      GRAPH_ALLOW_NON_DETERMINISTIC_FULLTEXT_SEARCH: 'true'
      GRAPH_ALLOW_NON_DETERMINISTIC_IPFS: 'true'
    volumes:
      - ./scripts/config.toml:/etc/config.toml

  firehose:
    image: gitopia/gitopiad-firehose:latest
    volumes:
      - ./data/gitopia-node:/root/.gitopia
      - ./scripts/setup_firehose.sh:/gitopia/setup.sh
      - ./data/firehose:/data
      - ./scripts/firehose.yaml:/app/firehose.yaml
    entrypoint: /gitopia/setup.sh
    environment:
      - CHAIN_ID=localgitopia
    ports:
      - 9030:9030
      - 26658:26657
    expose:
      - 9030
    depends_on:
      gitopiad:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:26657/status"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  gitopiad-binary:
