// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gitopia/gitopia/storage/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// MsgRegisterProvider defines a message for registering as a storage provider
type MsgRegisterProvider struct {
	Creator                  string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ApiUrl                   string     `protobuf:"bytes,2,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	Moniker                  string     `protobuf:"bytes,3,opt,name=moniker,proto3" json:"moniker,omitempty"`
	Stake                    types.Coin `protobuf:"bytes,4,opt,name=stake,proto3" json:"stake"`
	IpfsClusterPeerMultiaddr string     `protobuf:"bytes,5,opt,name=ipfs_cluster_peer_multiaddr,json=ipfsClusterPeerMultiaddr,proto3" json:"ipfs_cluster_peer_multiaddr,omitempty"`
}

func (m *MsgRegisterProvider) Reset()         { *m = MsgRegisterProvider{} }
func (m *MsgRegisterProvider) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterProvider) ProtoMessage()    {}
func (*MsgRegisterProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{0}
}
func (m *MsgRegisterProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterProvider.Merge(m, src)
}
func (m *MsgRegisterProvider) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterProvider.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterProvider proto.InternalMessageInfo

func (m *MsgRegisterProvider) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRegisterProvider) GetApiUrl() string {
	if m != nil {
		return m.ApiUrl
	}
	return ""
}

func (m *MsgRegisterProvider) GetMoniker() string {
	if m != nil {
		return m.Moniker
	}
	return ""
}

func (m *MsgRegisterProvider) GetStake() types.Coin {
	if m != nil {
		return m.Stake
	}
	return types.Coin{}
}

func (m *MsgRegisterProvider) GetIpfsClusterPeerMultiaddr() string {
	if m != nil {
		return m.IpfsClusterPeerMultiaddr
	}
	return ""
}

type MsgRegisterProviderResponse struct {
}

func (m *MsgRegisterProviderResponse) Reset()         { *m = MsgRegisterProviderResponse{} }
func (m *MsgRegisterProviderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRegisterProviderResponse) ProtoMessage()    {}
func (*MsgRegisterProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{1}
}
func (m *MsgRegisterProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRegisterProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRegisterProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRegisterProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRegisterProviderResponse.Merge(m, src)
}
func (m *MsgRegisterProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRegisterProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRegisterProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRegisterProviderResponse proto.InternalMessageInfo

// MsgUpdateProvider defines a message for updating a storage provider
type MsgUpdateProvider struct {
	Creator                  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ApiUrl                   string `protobuf:"bytes,2,opt,name=api_url,json=apiUrl,proto3" json:"api_url,omitempty"`
	Moniker                  string `protobuf:"bytes,3,opt,name=moniker,proto3" json:"moniker,omitempty"`
	IpfsClusterPeerMultiaddr string `protobuf:"bytes,4,opt,name=ipfs_cluster_peer_multiaddr,json=ipfsClusterPeerMultiaddr,proto3" json:"ipfs_cluster_peer_multiaddr,omitempty"`
}

func (m *MsgUpdateProvider) Reset()         { *m = MsgUpdateProvider{} }
func (m *MsgUpdateProvider) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProvider) ProtoMessage()    {}
func (*MsgUpdateProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{2}
}
func (m *MsgUpdateProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProvider.Merge(m, src)
}
func (m *MsgUpdateProvider) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProvider.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProvider proto.InternalMessageInfo

func (m *MsgUpdateProvider) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateProvider) GetApiUrl() string {
	if m != nil {
		return m.ApiUrl
	}
	return ""
}

func (m *MsgUpdateProvider) GetMoniker() string {
	if m != nil {
		return m.Moniker
	}
	return ""
}

func (m *MsgUpdateProvider) GetIpfsClusterPeerMultiaddr() string {
	if m != nil {
		return m.IpfsClusterPeerMultiaddr
	}
	return ""
}

type MsgUpdateProviderResponse struct {
}

func (m *MsgUpdateProviderResponse) Reset()         { *m = MsgUpdateProviderResponse{} }
func (m *MsgUpdateProviderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateProviderResponse) ProtoMessage()    {}
func (*MsgUpdateProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{3}
}
func (m *MsgUpdateProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateProviderResponse.Merge(m, src)
}
func (m *MsgUpdateProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateProviderResponse proto.InternalMessageInfo

// MsgUpdateRepositoryPackfile defines a message for updating repository packfile
type MsgUpdateRepositoryPackfile struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Name         string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Cid          string `protobuf:"bytes,4,opt,name=cid,proto3" json:"cid,omitempty"`
	RootHash     []byte `protobuf:"bytes,5,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	Size_        uint64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
}

func (m *MsgUpdateRepositoryPackfile) Reset()         { *m = MsgUpdateRepositoryPackfile{} }
func (m *MsgUpdateRepositoryPackfile) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryPackfile) ProtoMessage()    {}
func (*MsgUpdateRepositoryPackfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{4}
}
func (m *MsgUpdateRepositoryPackfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryPackfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryPackfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryPackfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryPackfile.Merge(m, src)
}
func (m *MsgUpdateRepositoryPackfile) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryPackfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryPackfile.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryPackfile proto.InternalMessageInfo

func (m *MsgUpdateRepositoryPackfile) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRepositoryPackfile) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdateRepositoryPackfile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateRepositoryPackfile) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *MsgUpdateRepositoryPackfile) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

func (m *MsgUpdateRepositoryPackfile) GetSize_() uint64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

type MsgUpdateRepositoryPackfileResponse struct {
}

func (m *MsgUpdateRepositoryPackfileResponse) Reset()         { *m = MsgUpdateRepositoryPackfileResponse{} }
func (m *MsgUpdateRepositoryPackfileResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryPackfileResponse) ProtoMessage()    {}
func (*MsgUpdateRepositoryPackfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{5}
}
func (m *MsgUpdateRepositoryPackfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryPackfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryPackfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryPackfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryPackfileResponse.Merge(m, src)
}
func (m *MsgUpdateRepositoryPackfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryPackfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryPackfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryPackfileResponse proto.InternalMessageInfo

// MsgDeleteRepositoryPackfile defines a message for deleting repository packfile
type MsgDeleteRepositoryPackfile struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	OwnerId      string `protobuf:"bytes,3,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (m *MsgDeleteRepositoryPackfile) Reset()         { *m = MsgDeleteRepositoryPackfile{} }
func (m *MsgDeleteRepositoryPackfile) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRepositoryPackfile) ProtoMessage()    {}
func (*MsgDeleteRepositoryPackfile) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{6}
}
func (m *MsgDeleteRepositoryPackfile) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRepositoryPackfile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRepositoryPackfile.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRepositoryPackfile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRepositoryPackfile.Merge(m, src)
}
func (m *MsgDeleteRepositoryPackfile) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRepositoryPackfile) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRepositoryPackfile.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRepositoryPackfile proto.InternalMessageInfo

func (m *MsgDeleteRepositoryPackfile) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteRepositoryPackfile) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgDeleteRepositoryPackfile) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

type MsgDeleteRepositoryPackfileResponse struct {
}

func (m *MsgDeleteRepositoryPackfileResponse) Reset()         { *m = MsgDeleteRepositoryPackfileResponse{} }
func (m *MsgDeleteRepositoryPackfileResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRepositoryPackfileResponse) ProtoMessage()    {}
func (*MsgDeleteRepositoryPackfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{7}
}
func (m *MsgDeleteRepositoryPackfileResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRepositoryPackfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRepositoryPackfileResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRepositoryPackfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRepositoryPackfileResponse.Merge(m, src)
}
func (m *MsgDeleteRepositoryPackfileResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRepositoryPackfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRepositoryPackfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRepositoryPackfileResponse proto.InternalMessageInfo

// MsgUpdateReleaseAsset defines a message for updating release asset
type MsgUpdateReleaseAsset struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Tag          string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Cid          string `protobuf:"bytes,5,opt,name=cid,proto3" json:"cid,omitempty"`
	RootHash     []byte `protobuf:"bytes,6,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
	Size_        uint64 `protobuf:"varint,7,opt,name=size,proto3" json:"size,omitempty"`
	Sha256       string `protobuf:"bytes,8,opt,name=sha256,proto3" json:"sha256,omitempty"`
}

func (m *MsgUpdateReleaseAsset) Reset()         { *m = MsgUpdateReleaseAsset{} }
func (m *MsgUpdateReleaseAsset) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReleaseAsset) ProtoMessage()    {}
func (*MsgUpdateReleaseAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{8}
}
func (m *MsgUpdateReleaseAsset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReleaseAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReleaseAsset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReleaseAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReleaseAsset.Merge(m, src)
}
func (m *MsgUpdateReleaseAsset) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReleaseAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReleaseAsset.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReleaseAsset proto.InternalMessageInfo

func (m *MsgUpdateReleaseAsset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateReleaseAsset) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdateReleaseAsset) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *MsgUpdateReleaseAsset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateReleaseAsset) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *MsgUpdateReleaseAsset) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

func (m *MsgUpdateReleaseAsset) GetSize_() uint64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *MsgUpdateReleaseAsset) GetSha256() string {
	if m != nil {
		return m.Sha256
	}
	return ""
}

type MsgUpdateReleaseAssetResponse struct {
}

func (m *MsgUpdateReleaseAssetResponse) Reset()         { *m = MsgUpdateReleaseAssetResponse{} }
func (m *MsgUpdateReleaseAssetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReleaseAssetResponse) ProtoMessage()    {}
func (*MsgUpdateReleaseAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{9}
}
func (m *MsgUpdateReleaseAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReleaseAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReleaseAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReleaseAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReleaseAssetResponse.Merge(m, src)
}
func (m *MsgUpdateReleaseAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReleaseAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReleaseAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReleaseAssetResponse proto.InternalMessageInfo

// MsgDeleteReleaseAsset defines a message for deleting release asset
type MsgDeleteReleaseAsset struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Tag          string `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
	Name         string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	OwnerId      string `protobuf:"bytes,5,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (m *MsgDeleteReleaseAsset) Reset()         { *m = MsgDeleteReleaseAsset{} }
func (m *MsgDeleteReleaseAsset) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReleaseAsset) ProtoMessage()    {}
func (*MsgDeleteReleaseAsset) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{10}
}
func (m *MsgDeleteReleaseAsset) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReleaseAsset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReleaseAsset.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReleaseAsset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReleaseAsset.Merge(m, src)
}
func (m *MsgDeleteReleaseAsset) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReleaseAsset) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReleaseAsset.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReleaseAsset proto.InternalMessageInfo

func (m *MsgDeleteReleaseAsset) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteReleaseAsset) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgDeleteReleaseAsset) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *MsgDeleteReleaseAsset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgDeleteReleaseAsset) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

type MsgDeleteReleaseAssetResponse struct {
}

func (m *MsgDeleteReleaseAssetResponse) Reset()         { *m = MsgDeleteReleaseAssetResponse{} }
func (m *MsgDeleteReleaseAssetResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReleaseAssetResponse) ProtoMessage()    {}
func (*MsgDeleteReleaseAssetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{11}
}
func (m *MsgDeleteReleaseAssetResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReleaseAssetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReleaseAssetResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReleaseAssetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReleaseAssetResponse.Merge(m, src)
}
func (m *MsgDeleteReleaseAssetResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReleaseAssetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReleaseAssetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReleaseAssetResponse proto.InternalMessageInfo

// MsgSubmitChallengeResponse defines a message for submitting challenge response
type MsgSubmitChallengeResponse struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	ChallengeId uint64 `protobuf:"varint,2,opt,name=challenge_id,json=challengeId,proto3" json:"challenge_id,omitempty"`
	Data        []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Proof       *Proof `protobuf:"bytes,4,opt,name=proof,proto3" json:"proof,omitempty"`
}

func (m *MsgSubmitChallengeResponse) Reset()         { *m = MsgSubmitChallengeResponse{} }
func (m *MsgSubmitChallengeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitChallengeResponse) ProtoMessage()    {}
func (*MsgSubmitChallengeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{12}
}
func (m *MsgSubmitChallengeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitChallengeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitChallengeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitChallengeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitChallengeResponse.Merge(m, src)
}
func (m *MsgSubmitChallengeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitChallengeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitChallengeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitChallengeResponse proto.InternalMessageInfo

func (m *MsgSubmitChallengeResponse) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSubmitChallengeResponse) GetChallengeId() uint64 {
	if m != nil {
		return m.ChallengeId
	}
	return 0
}

func (m *MsgSubmitChallengeResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *MsgSubmitChallengeResponse) GetProof() *Proof {
	if m != nil {
		return m.Proof
	}
	return nil
}

type MsgSubmitChallengeResponseResponse struct {
}

func (m *MsgSubmitChallengeResponseResponse) Reset()         { *m = MsgSubmitChallengeResponseResponse{} }
func (m *MsgSubmitChallengeResponseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSubmitChallengeResponseResponse) ProtoMessage()    {}
func (*MsgSubmitChallengeResponseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{13}
}
func (m *MsgSubmitChallengeResponseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSubmitChallengeResponseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSubmitChallengeResponseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSubmitChallengeResponseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSubmitChallengeResponseResponse.Merge(m, src)
}
func (m *MsgSubmitChallengeResponseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSubmitChallengeResponseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSubmitChallengeResponseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSubmitChallengeResponseResponse proto.InternalMessageInfo

// MsgWithdrawProviderRewards defines a message for withdrawing provider rewards
type MsgWithdrawProviderRewards struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgWithdrawProviderRewards) Reset()         { *m = MsgWithdrawProviderRewards{} }
func (m *MsgWithdrawProviderRewards) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawProviderRewards) ProtoMessage()    {}
func (*MsgWithdrawProviderRewards) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{14}
}
func (m *MsgWithdrawProviderRewards) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawProviderRewards) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawProviderRewards.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawProviderRewards) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawProviderRewards.Merge(m, src)
}
func (m *MsgWithdrawProviderRewards) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawProviderRewards) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawProviderRewards.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawProviderRewards proto.InternalMessageInfo

func (m *MsgWithdrawProviderRewards) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgWithdrawProviderRewardsResponse struct {
	Amount []types.Coin `protobuf:"bytes,1,rep,name=amount,proto3" json:"amount"`
}

func (m *MsgWithdrawProviderRewardsResponse) Reset()         { *m = MsgWithdrawProviderRewardsResponse{} }
func (m *MsgWithdrawProviderRewardsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgWithdrawProviderRewardsResponse) ProtoMessage()    {}
func (*MsgWithdrawProviderRewardsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{15}
}
func (m *MsgWithdrawProviderRewardsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgWithdrawProviderRewardsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgWithdrawProviderRewardsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgWithdrawProviderRewardsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithdrawProviderRewardsResponse.Merge(m, src)
}
func (m *MsgWithdrawProviderRewardsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgWithdrawProviderRewardsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithdrawProviderRewardsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithdrawProviderRewardsResponse proto.InternalMessageInfo

func (m *MsgWithdrawProviderRewardsResponse) GetAmount() []types.Coin {
	if m != nil {
		return m.Amount
	}
	return nil
}

// MsgUnregisterProvider defines a message for initiating the unregistration process
type MsgUnregisterProvider struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgUnregisterProvider) Reset()         { *m = MsgUnregisterProvider{} }
func (m *MsgUnregisterProvider) String() string { return proto.CompactTextString(m) }
func (*MsgUnregisterProvider) ProtoMessage()    {}
func (*MsgUnregisterProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{16}
}
func (m *MsgUnregisterProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnregisterProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnregisterProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnregisterProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnregisterProvider.Merge(m, src)
}
func (m *MsgUnregisterProvider) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnregisterProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnregisterProvider.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnregisterProvider proto.InternalMessageInfo

func (m *MsgUnregisterProvider) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgUnregisterProviderResponse struct {
	UnstakeCompletionTime time.Time `protobuf:"bytes,1,opt,name=unstake_completion_time,json=unstakeCompletionTime,proto3,stdtime" json:"unstake_completion_time"`
}

func (m *MsgUnregisterProviderResponse) Reset()         { *m = MsgUnregisterProviderResponse{} }
func (m *MsgUnregisterProviderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnregisterProviderResponse) ProtoMessage()    {}
func (*MsgUnregisterProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{17}
}
func (m *MsgUnregisterProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnregisterProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnregisterProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnregisterProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnregisterProviderResponse.Merge(m, src)
}
func (m *MsgUnregisterProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnregisterProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnregisterProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnregisterProviderResponse proto.InternalMessageInfo

func (m *MsgUnregisterProviderResponse) GetUnstakeCompletionTime() time.Time {
	if m != nil {
		return m.UnstakeCompletionTime
	}
	return time.Time{}
}

// MsgCompleteUnstake defines a message for completing the unstaking process
type MsgCompleteUnstake struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgCompleteUnstake) Reset()         { *m = MsgCompleteUnstake{} }
func (m *MsgCompleteUnstake) String() string { return proto.CompactTextString(m) }
func (*MsgCompleteUnstake) ProtoMessage()    {}
func (*MsgCompleteUnstake) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{18}
}
func (m *MsgCompleteUnstake) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompleteUnstake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompleteUnstake.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompleteUnstake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompleteUnstake.Merge(m, src)
}
func (m *MsgCompleteUnstake) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompleteUnstake) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompleteUnstake.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompleteUnstake proto.InternalMessageInfo

func (m *MsgCompleteUnstake) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgCompleteUnstakeResponse struct {
	Amount types.Coin `protobuf:"bytes,1,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgCompleteUnstakeResponse) Reset()         { *m = MsgCompleteUnstakeResponse{} }
func (m *MsgCompleteUnstakeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCompleteUnstakeResponse) ProtoMessage()    {}
func (*MsgCompleteUnstakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{19}
}
func (m *MsgCompleteUnstakeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCompleteUnstakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCompleteUnstakeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCompleteUnstakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCompleteUnstakeResponse.Merge(m, src)
}
func (m *MsgCompleteUnstakeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCompleteUnstakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCompleteUnstakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCompleteUnstakeResponse proto.InternalMessageInfo

func (m *MsgCompleteUnstakeResponse) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

// MsgIncreaseStake defines a message for increasing provider stake
type MsgIncreaseStake struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount  types.Coin `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgIncreaseStake) Reset()         { *m = MsgIncreaseStake{} }
func (m *MsgIncreaseStake) String() string { return proto.CompactTextString(m) }
func (*MsgIncreaseStake) ProtoMessage()    {}
func (*MsgIncreaseStake) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{20}
}
func (m *MsgIncreaseStake) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIncreaseStake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIncreaseStake.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIncreaseStake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIncreaseStake.Merge(m, src)
}
func (m *MsgIncreaseStake) XXX_Size() int {
	return m.Size()
}
func (m *MsgIncreaseStake) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIncreaseStake.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIncreaseStake proto.InternalMessageInfo

func (m *MsgIncreaseStake) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgIncreaseStake) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

type MsgIncreaseStakeResponse struct {
}

func (m *MsgIncreaseStakeResponse) Reset()         { *m = MsgIncreaseStakeResponse{} }
func (m *MsgIncreaseStakeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgIncreaseStakeResponse) ProtoMessage()    {}
func (*MsgIncreaseStakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{21}
}
func (m *MsgIncreaseStakeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgIncreaseStakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgIncreaseStakeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgIncreaseStakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgIncreaseStakeResponse.Merge(m, src)
}
func (m *MsgIncreaseStakeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgIncreaseStakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgIncreaseStakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgIncreaseStakeResponse proto.InternalMessageInfo

// MsgDecreaseStake defines a message for decreasing provider stake
type MsgDecreaseStake struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount  types.Coin `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount"`
}

func (m *MsgDecreaseStake) Reset()         { *m = MsgDecreaseStake{} }
func (m *MsgDecreaseStake) String() string { return proto.CompactTextString(m) }
func (*MsgDecreaseStake) ProtoMessage()    {}
func (*MsgDecreaseStake) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{22}
}
func (m *MsgDecreaseStake) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDecreaseStake) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDecreaseStake.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDecreaseStake) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDecreaseStake.Merge(m, src)
}
func (m *MsgDecreaseStake) XXX_Size() int {
	return m.Size()
}
func (m *MsgDecreaseStake) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDecreaseStake.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDecreaseStake proto.InternalMessageInfo

func (m *MsgDecreaseStake) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDecreaseStake) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

type MsgDecreaseStakeResponse struct {
	CompletionTime time.Time `protobuf:"bytes,1,opt,name=completion_time,json=completionTime,proto3,stdtime" json:"completion_time"`
}

func (m *MsgDecreaseStakeResponse) Reset()         { *m = MsgDecreaseStakeResponse{} }
func (m *MsgDecreaseStakeResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDecreaseStakeResponse) ProtoMessage()    {}
func (*MsgDecreaseStakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{23}
}
func (m *MsgDecreaseStakeResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDecreaseStakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDecreaseStakeResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDecreaseStakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDecreaseStakeResponse.Merge(m, src)
}
func (m *MsgDecreaseStakeResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDecreaseStakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDecreaseStakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDecreaseStakeResponse proto.InternalMessageInfo

func (m *MsgDecreaseStakeResponse) GetCompletionTime() time.Time {
	if m != nil {
		return m.CompletionTime
	}
	return time.Time{}
}

// MsgReactivateProvider defines a message for reactivating a suspended provider
type MsgReactivateProvider struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *MsgReactivateProvider) Reset()         { *m = MsgReactivateProvider{} }
func (m *MsgReactivateProvider) String() string { return proto.CompactTextString(m) }
func (*MsgReactivateProvider) ProtoMessage()    {}
func (*MsgReactivateProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{24}
}
func (m *MsgReactivateProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReactivateProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReactivateProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReactivateProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReactivateProvider.Merge(m, src)
}
func (m *MsgReactivateProvider) XXX_Size() int {
	return m.Size()
}
func (m *MsgReactivateProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReactivateProvider.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReactivateProvider proto.InternalMessageInfo

func (m *MsgReactivateProvider) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

type MsgReactivateProviderResponse struct {
}

func (m *MsgReactivateProviderResponse) Reset()         { *m = MsgReactivateProviderResponse{} }
func (m *MsgReactivateProviderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgReactivateProviderResponse) ProtoMessage()    {}
func (*MsgReactivateProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{25}
}
func (m *MsgReactivateProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgReactivateProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgReactivateProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgReactivateProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgReactivateProviderResponse.Merge(m, src)
}
func (m *MsgReactivateProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgReactivateProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgReactivateProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgReactivateProviderResponse proto.InternalMessageInfo

type MsgUpdateParams struct {
	// authority is the address that controls the module (defaults to x/gov unless overwritten).
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the x/storage parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{26}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{27}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

// MsgMergePullRequest defines a message for merging a pull request
type MsgMergePullRequest struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId   uint64 `protobuf:"varint,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	PullRequestIid uint64 `protobuf:"varint,3,opt,name=pull_request_iid,json=pullRequestIid,proto3" json:"pull_request_iid,omitempty"`
	MergeCommitSha string `protobuf:"bytes,4,opt,name=merge_commit_sha,json=mergeCommitSha,proto3" json:"merge_commit_sha,omitempty"`
	TaskId         uint64 `protobuf:"varint,5,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
}

func (m *MsgMergePullRequest) Reset()         { *m = MsgMergePullRequest{} }
func (m *MsgMergePullRequest) String() string { return proto.CompactTextString(m) }
func (*MsgMergePullRequest) ProtoMessage()    {}
func (*MsgMergePullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{28}
}
func (m *MsgMergePullRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMergePullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMergePullRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMergePullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMergePullRequest.Merge(m, src)
}
func (m *MsgMergePullRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgMergePullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMergePullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMergePullRequest proto.InternalMessageInfo

func (m *MsgMergePullRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMergePullRequest) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgMergePullRequest) GetPullRequestIid() uint64 {
	if m != nil {
		return m.PullRequestIid
	}
	return 0
}

func (m *MsgMergePullRequest) GetMergeCommitSha() string {
	if m != nil {
		return m.MergeCommitSha
	}
	return ""
}

func (m *MsgMergePullRequest) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type MsgMergePullRequestResponse struct {
}

func (m *MsgMergePullRequestResponse) Reset()         { *m = MsgMergePullRequestResponse{} }
func (m *MsgMergePullRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMergePullRequestResponse) ProtoMessage()    {}
func (*MsgMergePullRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{29}
}
func (m *MsgMergePullRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMergePullRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMergePullRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMergePullRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMergePullRequestResponse.Merge(m, src)
}
func (m *MsgMergePullRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMergePullRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMergePullRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMergePullRequestResponse proto.InternalMessageInfo

// MsgUpdateLFSObject defines a message for updating an LFS object
type MsgUpdateLFSObject struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id           uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	RepositoryId uint64 `protobuf:"varint,3,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Oid          string `protobuf:"bytes,4,opt,name=oid,proto3" json:"oid,omitempty"`
	Size_        uint64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	Cid          string `protobuf:"bytes,6,opt,name=cid,proto3" json:"cid,omitempty"`
	RootHash     []byte `protobuf:"bytes,7,opt,name=root_hash,json=rootHash,proto3" json:"root_hash,omitempty"`
}

func (m *MsgUpdateLFSObject) Reset()         { *m = MsgUpdateLFSObject{} }
func (m *MsgUpdateLFSObject) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLFSObject) ProtoMessage()    {}
func (*MsgUpdateLFSObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{30}
}
func (m *MsgUpdateLFSObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLFSObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLFSObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLFSObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLFSObject.Merge(m, src)
}
func (m *MsgUpdateLFSObject) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLFSObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLFSObject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLFSObject proto.InternalMessageInfo

func (m *MsgUpdateLFSObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateLFSObject) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateLFSObject) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdateLFSObject) GetOid() string {
	if m != nil {
		return m.Oid
	}
	return ""
}

func (m *MsgUpdateLFSObject) GetSize_() uint64 {
	if m != nil {
		return m.Size_
	}
	return 0
}

func (m *MsgUpdateLFSObject) GetCid() string {
	if m != nil {
		return m.Cid
	}
	return ""
}

func (m *MsgUpdateLFSObject) GetRootHash() []byte {
	if m != nil {
		return m.RootHash
	}
	return nil
}

type MsgUpdateLFSObjectResponse struct {
}

func (m *MsgUpdateLFSObjectResponse) Reset()         { *m = MsgUpdateLFSObjectResponse{} }
func (m *MsgUpdateLFSObjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateLFSObjectResponse) ProtoMessage()    {}
func (*MsgUpdateLFSObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{31}
}
func (m *MsgUpdateLFSObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateLFSObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateLFSObjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateLFSObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateLFSObjectResponse.Merge(m, src)
}
func (m *MsgUpdateLFSObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateLFSObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateLFSObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateLFSObjectResponse proto.InternalMessageInfo

// MsgDeleteLFSObject defines a message for deleting an LFS object
type MsgDeleteLFSObject struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Oid          string `protobuf:"bytes,3,opt,name=oid,proto3" json:"oid,omitempty"`
	OwnerId      string `protobuf:"bytes,4,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (m *MsgDeleteLFSObject) Reset()         { *m = MsgDeleteLFSObject{} }
func (m *MsgDeleteLFSObject) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLFSObject) ProtoMessage()    {}
func (*MsgDeleteLFSObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{32}
}
func (m *MsgDeleteLFSObject) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLFSObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLFSObject.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLFSObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLFSObject.Merge(m, src)
}
func (m *MsgDeleteLFSObject) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLFSObject) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLFSObject.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLFSObject proto.InternalMessageInfo

func (m *MsgDeleteLFSObject) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteLFSObject) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgDeleteLFSObject) GetOid() string {
	if m != nil {
		return m.Oid
	}
	return ""
}

func (m *MsgDeleteLFSObject) GetOwnerId() string {
	if m != nil {
		return m.OwnerId
	}
	return ""
}

type MsgDeleteLFSObjectResponse struct {
}

func (m *MsgDeleteLFSObjectResponse) Reset()         { *m = MsgDeleteLFSObjectResponse{} }
func (m *MsgDeleteLFSObjectResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteLFSObjectResponse) ProtoMessage()    {}
func (*MsgDeleteLFSObjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_210c9a5bb7eaa48c, []int{33}
}
func (m *MsgDeleteLFSObjectResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteLFSObjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteLFSObjectResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteLFSObjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteLFSObjectResponse.Merge(m, src)
}
func (m *MsgDeleteLFSObjectResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteLFSObjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteLFSObjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteLFSObjectResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgRegisterProvider)(nil), "gitopia.gitopia.storage.MsgRegisterProvider")
	proto.RegisterType((*MsgRegisterProviderResponse)(nil), "gitopia.gitopia.storage.MsgRegisterProviderResponse")
	proto.RegisterType((*MsgUpdateProvider)(nil), "gitopia.gitopia.storage.MsgUpdateProvider")
	proto.RegisterType((*MsgUpdateProviderResponse)(nil), "gitopia.gitopia.storage.MsgUpdateProviderResponse")
	proto.RegisterType((*MsgUpdateRepositoryPackfile)(nil), "gitopia.gitopia.storage.MsgUpdateRepositoryPackfile")
	proto.RegisterType((*MsgUpdateRepositoryPackfileResponse)(nil), "gitopia.gitopia.storage.MsgUpdateRepositoryPackfileResponse")
	proto.RegisterType((*MsgDeleteRepositoryPackfile)(nil), "gitopia.gitopia.storage.MsgDeleteRepositoryPackfile")
	proto.RegisterType((*MsgDeleteRepositoryPackfileResponse)(nil), "gitopia.gitopia.storage.MsgDeleteRepositoryPackfileResponse")
	proto.RegisterType((*MsgUpdateReleaseAsset)(nil), "gitopia.gitopia.storage.MsgUpdateReleaseAsset")
	proto.RegisterType((*MsgUpdateReleaseAssetResponse)(nil), "gitopia.gitopia.storage.MsgUpdateReleaseAssetResponse")
	proto.RegisterType((*MsgDeleteReleaseAsset)(nil), "gitopia.gitopia.storage.MsgDeleteReleaseAsset")
	proto.RegisterType((*MsgDeleteReleaseAssetResponse)(nil), "gitopia.gitopia.storage.MsgDeleteReleaseAssetResponse")
	proto.RegisterType((*MsgSubmitChallengeResponse)(nil), "gitopia.gitopia.storage.MsgSubmitChallengeResponse")
	proto.RegisterType((*MsgSubmitChallengeResponseResponse)(nil), "gitopia.gitopia.storage.MsgSubmitChallengeResponseResponse")
	proto.RegisterType((*MsgWithdrawProviderRewards)(nil), "gitopia.gitopia.storage.MsgWithdrawProviderRewards")
	proto.RegisterType((*MsgWithdrawProviderRewardsResponse)(nil), "gitopia.gitopia.storage.MsgWithdrawProviderRewardsResponse")
	proto.RegisterType((*MsgUnregisterProvider)(nil), "gitopia.gitopia.storage.MsgUnregisterProvider")
	proto.RegisterType((*MsgUnregisterProviderResponse)(nil), "gitopia.gitopia.storage.MsgUnregisterProviderResponse")
	proto.RegisterType((*MsgCompleteUnstake)(nil), "gitopia.gitopia.storage.MsgCompleteUnstake")
	proto.RegisterType((*MsgCompleteUnstakeResponse)(nil), "gitopia.gitopia.storage.MsgCompleteUnstakeResponse")
	proto.RegisterType((*MsgIncreaseStake)(nil), "gitopia.gitopia.storage.MsgIncreaseStake")
	proto.RegisterType((*MsgIncreaseStakeResponse)(nil), "gitopia.gitopia.storage.MsgIncreaseStakeResponse")
	proto.RegisterType((*MsgDecreaseStake)(nil), "gitopia.gitopia.storage.MsgDecreaseStake")
	proto.RegisterType((*MsgDecreaseStakeResponse)(nil), "gitopia.gitopia.storage.MsgDecreaseStakeResponse")
	proto.RegisterType((*MsgReactivateProvider)(nil), "gitopia.gitopia.storage.MsgReactivateProvider")
	proto.RegisterType((*MsgReactivateProviderResponse)(nil), "gitopia.gitopia.storage.MsgReactivateProviderResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "gitopia.gitopia.storage.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "gitopia.gitopia.storage.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgMergePullRequest)(nil), "gitopia.gitopia.storage.MsgMergePullRequest")
	proto.RegisterType((*MsgMergePullRequestResponse)(nil), "gitopia.gitopia.storage.MsgMergePullRequestResponse")
	proto.RegisterType((*MsgUpdateLFSObject)(nil), "gitopia.gitopia.storage.MsgUpdateLFSObject")
	proto.RegisterType((*MsgUpdateLFSObjectResponse)(nil), "gitopia.gitopia.storage.MsgUpdateLFSObjectResponse")
	proto.RegisterType((*MsgDeleteLFSObject)(nil), "gitopia.gitopia.storage.MsgDeleteLFSObject")
	proto.RegisterType((*MsgDeleteLFSObjectResponse)(nil), "gitopia.gitopia.storage.MsgDeleteLFSObjectResponse")
}

func init() { proto.RegisterFile("gitopia/gitopia/storage/tx.proto", fileDescriptor_210c9a5bb7eaa48c) }

var fileDescriptor_210c9a5bb7eaa48c = []byte{
	// 1459 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x58, 0xcf, 0x6f, 0x1b, 0x45,
	0x1b, 0xce, 0x26, 0x8e, 0x93, 0x4c, 0xd3, 0x34, 0xdd, 0xaf, 0xfd, 0xec, 0x38, 0x5f, 0x9d, 0x7c,
	0x6e, 0x3f, 0x29, 0x4d, 0xbf, 0xae, 0x49, 0xda, 0x06, 0x89, 0x1f, 0x87, 0x26, 0x15, 0x10, 0x09,
	0x8b, 0x68, 0x43, 0x84, 0x84, 0x40, 0xd6, 0xd8, 0x3b, 0x59, 0x4f, 0xb3, 0xbb, 0xb3, 0xcc, 0x8c,
	0x9d, 0x16, 0x15, 0x09, 0x71, 0x04, 0x09, 0xf5, 0xc6, 0x91, 0x03, 0x17, 0x8e, 0x95, 0xe0, 0x00,
	0x47, 0x2e, 0xa8, 0xc7, 0x8a, 0x0b, 0x3d, 0x01, 0x6a, 0x0f, 0xfd, 0x37, 0xd0, 0xce, 0x8c, 0xc7,
	0xf6, 0xda, 0xbb, 0xde, 0xb4, 0x2a, 0x97, 0xec, 0xce, 0xcc, 0x33, 0xef, 0xfb, 0x3c, 0x33, 0xb3,
	0xf3, 0x3e, 0x31, 0x58, 0x75, 0x31, 0x27, 0x21, 0x86, 0xd5, 0xee, 0x93, 0x71, 0x42, 0xa1, 0x8b,
	0xaa, 0xfc, 0x8e, 0x15, 0x52, 0xc2, 0x89, 0x59, 0x50, 0x23, 0x56, 0xf7, 0xa9, 0x10, 0xa5, 0x73,
	0x2e, 0x71, 0x89, 0xc0, 0x54, 0xa3, 0x37, 0x09, 0x2f, 0x95, 0x9b, 0x84, 0xf9, 0x84, 0x55, 0x1b,
	0x90, 0xa1, 0x6a, 0x67, 0xa3, 0x81, 0x38, 0xdc, 0xa8, 0x36, 0x09, 0x0e, 0xd4, 0xf8, 0xc5, 0xc4,
	0x84, 0x77, 0x43, 0xc4, 0x14, 0xe8, 0x52, 0x12, 0x28, 0x84, 0x14, 0xfa, 0x5d, 0xd4, 0x8a, 0x4b,
	0x88, 0xeb, 0xa1, 0xaa, 0x68, 0x35, 0xda, 0x87, 0x55, 0x8e, 0x7d, 0xc4, 0x38, 0xf4, 0x43, 0x05,
	0x28, 0x28, 0x2e, 0x3e, 0x73, 0xab, 0x9d, 0x8d, 0xe8, 0xa1, 0x06, 0x96, 0xe4, 0x40, 0x5d, 0xb2,
	0x97, 0x0d, 0x35, 0x74, 0x16, 0xfa, 0x38, 0x20, 0x55, 0xf1, 0x57, 0x76, 0x55, 0x1e, 0x1b, 0xe0,
	0x5f, 0x35, 0xe6, 0xda, 0xc8, 0xc5, 0x8c, 0x23, 0xba, 0x47, 0x49, 0x07, 0x3b, 0x88, 0x9a, 0x45,
	0x30, 0xd3, 0xa4, 0x08, 0x72, 0x42, 0x8b, 0xc6, 0xaa, 0xb1, 0x36, 0x67, 0x77, 0x9b, 0x66, 0x01,
	0xcc, 0xc0, 0x10, 0xd7, 0xdb, 0xd4, 0x2b, 0x4e, 0x8a, 0x91, 0x3c, 0x0c, 0xf1, 0x01, 0xf5, 0xa2,
	0x29, 0x3e, 0x09, 0xf0, 0x11, 0xa2, 0xc5, 0x29, 0x39, 0x45, 0x35, 0xcd, 0x1b, 0x60, 0x9a, 0x71,
	0x78, 0x84, 0x8a, 0xb9, 0x55, 0x63, 0xed, 0xd4, 0xe6, 0x92, 0xa5, 0x58, 0x45, 0xeb, 0x68, 0xa9,
	0x75, 0xb4, 0x76, 0x08, 0x0e, 0xb6, 0x73, 0x0f, 0xff, 0x58, 0x99, 0xb0, 0x25, 0xda, 0x7c, 0x13,
	0x2c, 0xe3, 0xf0, 0x90, 0xd5, 0x9b, 0x5e, 0x3b, 0xe2, 0x56, 0x0f, 0x11, 0xa2, 0x75, 0xbf, 0xed,
	0x71, 0x0c, 0x1d, 0x87, 0x16, 0xa7, 0x45, 0x92, 0x62, 0x04, 0xd9, 0x91, 0x88, 0x3d, 0x84, 0x68,
	0xad, 0x3b, 0x5e, 0xb9, 0x00, 0x96, 0x47, 0x28, 0xb3, 0x11, 0x0b, 0x49, 0xc0, 0x50, 0xe5, 0x5b,
	0x03, 0x9c, 0xad, 0x31, 0xf7, 0x20, 0x74, 0x20, 0x47, 0x2f, 0x47, 0xf7, 0x18, 0x01, 0xb9, 0x31,
	0x02, 0x96, 0xc1, 0xd2, 0x10, 0x41, 0x4d, 0xff, 0x07, 0x43, 0xc8, 0x93, 0xa3, 0x36, 0x0a, 0x09,
	0xc3, 0x9c, 0xd0, 0xbb, 0x7b, 0xb0, 0x79, 0x74, 0x88, 0x3d, 0x94, 0x22, 0xe4, 0x22, 0x38, 0x4d,
	0x35, 0xbe, 0x8e, 0x1d, 0x21, 0x27, 0x67, 0xcf, 0xf7, 0x3a, 0x77, 0x1d, 0xd3, 0x04, 0xb9, 0x00,
	0xfa, 0x48, 0x29, 0x12, 0xef, 0xe6, 0x22, 0x98, 0x6a, 0x62, 0x47, 0xd1, 0x8e, 0x5e, 0xcd, 0x65,
	0x30, 0x47, 0x09, 0xe1, 0xf5, 0x16, 0x64, 0x2d, 0xb1, 0x1f, 0xf3, 0xf6, 0x6c, 0xd4, 0xf1, 0x0e,
	0x64, 0xad, 0x28, 0x04, 0xc3, 0x9f, 0xa2, 0x62, 0x5e, 0x84, 0x17, 0xef, 0x95, 0xff, 0x81, 0x8b,
	0x29, 0xa4, 0xb5, 0xb8, 0x63, 0xa1, 0xed, 0x16, 0xf2, 0xd0, 0xcb, 0xd0, 0xb6, 0x04, 0x66, 0xc9,
	0x71, 0x80, 0x68, 0x34, 0xae, 0x76, 0x4c, 0xb4, 0x77, 0x1d, 0xc5, 0x2f, 0x29, 0xb1, 0xe6, 0xf7,
	0xbb, 0x01, 0xce, 0xf7, 0xe9, 0xf0, 0x10, 0x64, 0xe8, 0x26, 0x63, 0x88, 0xbf, 0x28, 0xb5, 0x45,
	0x30, 0xc5, 0xa1, 0xab, 0x58, 0x45, 0xaf, 0x7a, 0x23, 0x72, 0xc3, 0x1b, 0x31, 0x9d, 0xb0, 0x11,
	0xf9, 0x84, 0x8d, 0x98, 0xe9, 0x6d, 0x84, 0xf9, 0x6f, 0x90, 0x67, 0x2d, 0xb8, 0x79, 0x63, 0xab,
	0x38, 0x2b, 0x0f, 0xb3, 0x6c, 0x55, 0x56, 0xc0, 0x85, 0x91, 0xc2, 0xb4, 0xf4, 0x6f, 0xa4, 0xf4,
	0xee, 0x12, 0xfd, 0xd3, 0xd2, 0xfb, 0xf7, 0x6e, 0x7a, 0x70, 0xef, 0x24, 0xf5, 0x61, 0x62, 0x9a,
	0xfa, 0x77, 0x06, 0x28, 0xd5, 0x98, 0xbb, 0xdf, 0x6e, 0xf8, 0x98, 0xef, 0xb4, 0xa0, 0xe7, 0xa1,
	0xc0, 0xd5, 0x9b, 0x9a, 0xc2, 0xff, 0xbf, 0x60, 0xbe, 0xd9, 0x85, 0xf7, 0xe8, 0x9f, 0xd2, 0x7d,
	0xf2, 0x7b, 0x71, 0x20, 0x87, 0x82, 0xfe, 0xbc, 0x2d, 0xde, 0xcd, 0xeb, 0x60, 0x3a, 0xa4, 0x84,
	0x1c, 0xaa, 0x6b, 0xaf, 0x6c, 0x25, 0x54, 0x1b, 0x6b, 0x2f, 0x42, 0xd9, 0x12, 0x5c, 0xb9, 0x04,
	0x2a, 0xc9, 0x24, 0xb5, 0x96, 0x2d, 0x21, 0xe5, 0x03, 0xcc, 0x5b, 0x0e, 0x85, 0xc7, 0xbd, 0xdb,
	0xe1, 0x18, 0x52, 0x87, 0x25, 0x4b, 0xa9, 0x7c, 0x2c, 0xa2, 0x27, 0xcc, 0xd3, 0x4b, 0xf1, 0x2a,
	0xc8, 0x43, 0x9f, 0xb4, 0x03, 0x5e, 0x34, 0x56, 0xa7, 0xb2, 0xdc, 0xd8, 0x0a, 0x5e, 0xd9, 0x90,
	0xdf, 0x45, 0x40, 0x33, 0xd7, 0x93, 0xca, 0x67, 0xf2, 0xc4, 0x0d, 0x4d, 0xd1, 0x64, 0x3e, 0x02,
	0x85, 0x76, 0x20, 0x2a, 0x42, 0xbd, 0x49, 0xfc, 0xd0, 0x43, 0x1c, 0x93, 0xa0, 0x1e, 0xd5, 0x43,
	0x11, 0xea, 0xd4, 0x66, 0xc9, 0x92, 0xc5, 0xd2, 0xea, 0x16, 0x4b, 0xeb, 0xfd, 0x6e, 0xb1, 0xdc,
	0x9e, 0x8d, 0xe8, 0xdd, 0xff, 0x73, 0xc5, 0xb0, 0xcf, 0xab, 0x20, 0x3b, 0x3a, 0x46, 0x84, 0xaa,
	0x58, 0xc0, 0xac, 0x31, 0x57, 0x75, 0xa2, 0x03, 0x89, 0x49, 0xa1, 0x7b, 0x20, 0x16, 0x3e, 0x86,
	0x1f, 0xb9, 0x70, 0xc6, 0x49, 0x16, 0x0e, 0x81, 0xc5, 0x1a, 0x73, 0x77, 0x83, 0x28, 0x0d, 0x43,
	0xfb, 0xe9, 0x24, 0xfa, 0xd2, 0x4c, 0x9e, 0x2c, 0x4d, 0x09, 0x14, 0xe3, 0x69, 0xf4, 0x91, 0x92,
	0x14, 0x6e, 0xa1, 0x97, 0x4c, 0x01, 0x0b, 0x0a, 0x03, 0x69, 0xf4, 0xf2, 0xd5, 0xc0, 0x99, 0x17,
	0xd9, 0xe2, 0x85, 0xe6, 0xe0, 0xde, 0xca, 0xd3, 0x68, 0x23, 0xd8, 0xe4, 0xb8, 0x93, 0xa9, 0xca,
	0xab, 0x4b, 0x64, 0x78, 0x8a, 0x5e, 0xa5, 0x9f, 0x0d, 0x70, 0xa6, 0x57, 0x95, 0x85, 0x65, 0x33,
	0xb7, 0xc0, 0x1c, 0x6c, 0xf3, 0x16, 0xa1, 0x98, 0xdf, 0x95, 0x01, 0xb7, 0x8b, 0xbf, 0xfd, 0x78,
	0xf5, 0x9c, 0x5a, 0x91, 0x9b, 0x8e, 0x43, 0x11, 0x63, 0xfb, 0x9c, 0xe2, 0xc0, 0xb5, 0x7b, 0x50,
	0x73, 0x1b, 0xe4, 0xa5, 0xe9, 0x53, 0x6b, 0xb8, 0x92, 0x7c, 0x43, 0x08, 0xd8, 0xf6, 0x5c, 0x24,
	0xf5, 0xfb, 0x67, 0x0f, 0xd6, 0x0d, 0x5b, 0xcd, 0x7c, 0x6d, 0xfd, 0x8b, 0x67, 0x0f, 0xd6, 0x7b,
	0x31, 0xbf, 0x7c, 0xf6, 0x60, 0xbd, 0xd0, 0x75, 0x94, 0x31, 0x9e, 0x95, 0x25, 0x50, 0x88, 0x75,
	0x69, 0x59, 0xbf, 0x48, 0x1f, 0x58, 0x43, 0xd4, 0x45, 0x7b, 0x6d, 0xcf, 0xb3, 0xd1, 0x27, 0x6d,
	0xc4, 0x5e, 0xf8, 0x52, 0x5f, 0x03, 0x8b, 0x61, 0xdb, 0xf3, 0xea, 0x54, 0x86, 0xab, 0x63, 0x55,
	0x72, 0x73, 0xf6, 0x42, 0xd8, 0xcb, 0xb2, 0x8b, 0x05, 0xd2, 0x8f, 0x92, 0x47, 0xdf, 0xb8, 0x8f,
	0x79, 0x9d, 0xb5, 0xa0, 0xba, 0xf8, 0x17, 0x44, 0xff, 0x8e, 0xe8, 0xde, 0x6f, 0xc1, 0xc8, 0x88,
	0x71, 0xc8, 0x8e, 0xba, 0x15, 0x20, 0x67, 0xe7, 0xa3, 0xe6, 0xae, 0xa3, 0x0c, 0x5f, 0x5c, 0x82,
	0x96, 0xf8, 0x93, 0x21, 0x3e, 0x75, 0x29, 0xff, 0xdd, 0xb7, 0xf6, 0xdf, 0x6b, 0xdc, 0x46, 0xcd,
	0x34, 0x85, 0x0b, 0x60, 0x52, 0xcb, 0x9a, 0xc4, 0xce, 0xb0, 0xe2, 0xa9, 0xd1, 0x65, 0x8c, 0xf4,
	0x4c, 0x12, 0xc1, 0x8e, 0x2e, 0xbf, 0xd3, 0x7d, 0xe5, 0x57, 0x55, 0xf0, 0x7c, 0x42, 0x05, 0x9f,
	0x19, 0xac, 0xe0, 0x95, 0xff, 0x88, 0x4b, 0x27, 0xc6, 0x5c, 0x0b, 0xfb, 0x5c, 0x0a, 0x93, 0x95,
	0x2f, 0x8b, 0xb0, 0xac, 0xf5, 0x98, 0x68, 0x83, 0x24, 0x84, 0xf4, 0xd7, 0xde, 0xdc, 0x60, 0xed,
	0x95, 0x04, 0x63, 0x0c, 0xba, 0x04, 0x37, 0x7f, 0x5d, 0x04, 0x53, 0x35, 0xe6, 0x9a, 0x1d, 0xb0,
	0x38, 0xf4, 0x8f, 0xc6, 0xff, 0x13, 0xcf, 0xfc, 0x08, 0xf3, 0x5e, 0xba, 0x7e, 0x12, 0xb4, 0xbe,
	0x56, 0x42, 0xb0, 0x10, 0xb3, 0xf9, 0xeb, 0x69, 0x71, 0x06, 0xb1, 0xa5, 0xcd, 0xec, 0x58, 0x9d,
	0xf1, 0x6b, 0x03, 0x14, 0x13, 0xad, 0xf9, 0xf5, 0xf1, 0x01, 0x87, 0x67, 0x95, 0xde, 0x78, 0x9e,
	0x59, 0x03, 0x84, 0x12, 0xfd, 0x74, 0x2a, 0xa1, 0xa4, 0x59, 0xe9, 0x84, 0xc6, 0x59, 0x68, 0xf3,
	0x1e, 0x30, 0x47, 0xd8, 0x67, 0x2b, 0x8b, 0xc8, 0x1e, 0xbe, 0xb4, 0x75, 0x32, 0x7c, 0x7f, 0xf6,
	0x11, 0x0e, 0xd6, 0xca, 0xa2, 0x28, 0x6b, 0xf6, 0x64, 0x23, 0x6a, 0x7e, 0x65, 0x80, 0x42, 0x92,
	0x0b, 0xbd, 0x96, 0x16, 0x33, 0x61, 0x52, 0xe9, 0xf5, 0xe7, 0x98, 0x34, 0xc0, 0x26, 0xc9, 0x48,
	0xa6, 0xb2, 0x49, 0x98, 0x94, 0xce, 0x66, 0x9c, 0xf5, 0x8c, 0xce, 0xc5, 0xb0, 0x7d, 0x4c, 0x3f,
	0x17, 0x43, 0xf8, 0x31, 0xe7, 0x22, 0xd9, 0x6b, 0x32, 0x70, 0x26, 0x6e, 0x05, 0xaf, 0xa4, 0x85,
	0x8a, 0x81, 0x4b, 0xd7, 0x4e, 0x00, 0xd6, 0x49, 0x7d, 0x70, 0x7a, 0xd0, 0xf8, 0x5d, 0x4e, 0x8b,
	0x32, 0x00, 0x2d, 0x6d, 0x64, 0x86, 0xf6, 0xa7, 0x1b, 0x34, 0x79, 0x97, 0xd3, 0x8f, 0x71, 0xe6,
	0x74, 0xa3, 0x3d, 0xdd, 0x3d, 0x60, 0x8e, 0x70, 0x60, 0x56, 0xfa, 0x45, 0x1e, 0xc7, 0xa7, 0x6f,
	0x68, 0xb2, 0x5d, 0x33, 0x6f, 0x83, 0xf9, 0x01, 0xab, 0xb6, 0x96, 0xe1, 0x32, 0x17, 0xc8, 0xd2,
	0x2b, 0x59, 0x91, 0x3a, 0x57, 0x07, 0x2c, 0x0e, 0xf9, 0xa7, 0xd4, 0xf2, 0x16, 0x47, 0xa7, 0x97,
	0xb7, 0x24, 0x63, 0x13, 0x1d, 0xda, 0xb8, 0xa9, 0xb9, 0x32, 0x9e, 0xbc, 0x06, 0xa7, 0x1f, 0xda,
	0x04, 0xd3, 0x11, 0x25, 0x8d, 0x1b, 0x8e, 0x2b, 0xe3, 0xaf, 0xc3, 0x8c, 0x49, 0x13, 0x8c, 0xc4,
	0xf6, 0xdb, 0x0f, 0x9f, 0x94, 0x8d, 0x47, 0x4f, 0xca, 0xc6, 0x5f, 0x4f, 0xca, 0xc6, 0xfd, 0xa7,
	0xe5, 0x89, 0x47, 0x4f, 0xcb, 0x13, 0x8f, 0x9f, 0x96, 0x27, 0x3e, 0xbc, 0xea, 0x62, 0xde, 0x6a,
	0x37, 0xac, 0x26, 0xf1, 0xab, 0xf1, 0x1f, 0x58, 0x3b, 0x5b, 0xd5, 0x3b, 0x83, 0x3f, 0xc5, 0x36,
	0xf2, 0xe2, 0xff, 0x88, 0x6b, 0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x5a, 0x19, 0xca, 0x23,
	0x16, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// RegisterProvider registers a new storage provider
	RegisterProvider(ctx context.Context, in *MsgRegisterProvider, opts ...grpc.CallOption) (*MsgRegisterProviderResponse, error)
	// UpdateProvider updates a storage provider
	UpdateProvider(ctx context.Context, in *MsgUpdateProvider, opts ...grpc.CallOption) (*MsgUpdateProviderResponse, error)
	// UpdateRepositoryPackfile updates repository packfile CID and root hash
	UpdateRepositoryPackfile(ctx context.Context, in *MsgUpdateRepositoryPackfile, opts ...grpc.CallOption) (*MsgUpdateRepositoryPackfileResponse, error)
	// DeleteRepositoryPackfile deletes repository packfile
	DeleteRepositoryPackfile(ctx context.Context, in *MsgDeleteRepositoryPackfile, opts ...grpc.CallOption) (*MsgDeleteRepositoryPackfileResponse, error)
	// UpdateReleaseAsset updates release asset
	UpdateReleaseAsset(ctx context.Context, in *MsgUpdateReleaseAsset, opts ...grpc.CallOption) (*MsgUpdateReleaseAssetResponse, error)
	// DeleteReleaseAsset deletes release asset
	DeleteReleaseAsset(ctx context.Context, in *MsgDeleteReleaseAsset, opts ...grpc.CallOption) (*MsgDeleteReleaseAssetResponse, error)
	// SubmitChallengeResponse submits proof for storage challenge
	SubmitChallengeResponse(ctx context.Context, in *MsgSubmitChallengeResponse, opts ...grpc.CallOption) (*MsgSubmitChallengeResponseResponse, error)
	// WithdrawProviderRewards withdraws accumulated rewards for a provider
	WithdrawProviderRewards(ctx context.Context, in *MsgWithdrawProviderRewards, opts ...grpc.CallOption) (*MsgWithdrawProviderRewardsResponse, error)
	// UnregisterProvider initiates the process of leaving the storage network
	UnregisterProvider(ctx context.Context, in *MsgUnregisterProvider, opts ...grpc.CallOption) (*MsgUnregisterProviderResponse, error)
	// CompleteUnstake completes the unstaking process after the cooldown period
	CompleteUnstake(ctx context.Context, in *MsgCompleteUnstake, opts ...grpc.CallOption) (*MsgCompleteUnstakeResponse, error)
	// IncreaseStake increases the stake of a storage provider
	IncreaseStake(ctx context.Context, in *MsgIncreaseStake, opts ...grpc.CallOption) (*MsgIncreaseStakeResponse, error)
	// DecreaseStake decreases the stake of a storage provider with cooldown
	DecreaseStake(ctx context.Context, in *MsgDecreaseStake, opts ...grpc.CallOption) (*MsgDecreaseStakeResponse, error)
	// ReactivateProvider reactivates a suspended provider
	ReactivateProvider(ctx context.Context, in *MsgReactivateProvider, opts ...grpc.CallOption) (*MsgReactivateProviderResponse, error)
	// UpdateParams updates the parameters of the storage module
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	// MergePullRequest merges a pull request
	MergePullRequest(ctx context.Context, in *MsgMergePullRequest, opts ...grpc.CallOption) (*MsgMergePullRequestResponse, error)
	// UpdateLFSObject updates an existing LFS object
	UpdateLFSObject(ctx context.Context, in *MsgUpdateLFSObject, opts ...grpc.CallOption) (*MsgUpdateLFSObjectResponse, error)
	// DeleteLFSObject deletes an LFS object
	DeleteLFSObject(ctx context.Context, in *MsgDeleteLFSObject, opts ...grpc.CallOption) (*MsgDeleteLFSObjectResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) RegisterProvider(ctx context.Context, in *MsgRegisterProvider, opts ...grpc.CallOption) (*MsgRegisterProviderResponse, error) {
	out := new(MsgRegisterProviderResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/RegisterProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateProvider(ctx context.Context, in *MsgUpdateProvider, opts ...grpc.CallOption) (*MsgUpdateProviderResponse, error) {
	out := new(MsgUpdateProviderResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/UpdateProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRepositoryPackfile(ctx context.Context, in *MsgUpdateRepositoryPackfile, opts ...grpc.CallOption) (*MsgUpdateRepositoryPackfileResponse, error) {
	out := new(MsgUpdateRepositoryPackfileResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/UpdateRepositoryPackfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteRepositoryPackfile(ctx context.Context, in *MsgDeleteRepositoryPackfile, opts ...grpc.CallOption) (*MsgDeleteRepositoryPackfileResponse, error) {
	out := new(MsgDeleteRepositoryPackfileResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/DeleteRepositoryPackfile", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateReleaseAsset(ctx context.Context, in *MsgUpdateReleaseAsset, opts ...grpc.CallOption) (*MsgUpdateReleaseAssetResponse, error) {
	out := new(MsgUpdateReleaseAssetResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/UpdateReleaseAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteReleaseAsset(ctx context.Context, in *MsgDeleteReleaseAsset, opts ...grpc.CallOption) (*MsgDeleteReleaseAssetResponse, error) {
	out := new(MsgDeleteReleaseAssetResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/DeleteReleaseAsset", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SubmitChallengeResponse(ctx context.Context, in *MsgSubmitChallengeResponse, opts ...grpc.CallOption) (*MsgSubmitChallengeResponseResponse, error) {
	out := new(MsgSubmitChallengeResponseResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/SubmitChallengeResponse", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) WithdrawProviderRewards(ctx context.Context, in *MsgWithdrawProviderRewards, opts ...grpc.CallOption) (*MsgWithdrawProviderRewardsResponse, error) {
	out := new(MsgWithdrawProviderRewardsResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/WithdrawProviderRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnregisterProvider(ctx context.Context, in *MsgUnregisterProvider, opts ...grpc.CallOption) (*MsgUnregisterProviderResponse, error) {
	out := new(MsgUnregisterProviderResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/UnregisterProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CompleteUnstake(ctx context.Context, in *MsgCompleteUnstake, opts ...grpc.CallOption) (*MsgCompleteUnstakeResponse, error) {
	out := new(MsgCompleteUnstakeResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/CompleteUnstake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) IncreaseStake(ctx context.Context, in *MsgIncreaseStake, opts ...grpc.CallOption) (*MsgIncreaseStakeResponse, error) {
	out := new(MsgIncreaseStakeResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/IncreaseStake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DecreaseStake(ctx context.Context, in *MsgDecreaseStake, opts ...grpc.CallOption) (*MsgDecreaseStakeResponse, error) {
	out := new(MsgDecreaseStakeResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/DecreaseStake", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ReactivateProvider(ctx context.Context, in *MsgReactivateProvider, opts ...grpc.CallOption) (*MsgReactivateProviderResponse, error) {
	out := new(MsgReactivateProviderResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/ReactivateProvider", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MergePullRequest(ctx context.Context, in *MsgMergePullRequest, opts ...grpc.CallOption) (*MsgMergePullRequestResponse, error) {
	out := new(MsgMergePullRequestResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/MergePullRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateLFSObject(ctx context.Context, in *MsgUpdateLFSObject, opts ...grpc.CallOption) (*MsgUpdateLFSObjectResponse, error) {
	out := new(MsgUpdateLFSObjectResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/UpdateLFSObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteLFSObject(ctx context.Context, in *MsgDeleteLFSObject, opts ...grpc.CallOption) (*MsgDeleteLFSObjectResponse, error) {
	out := new(MsgDeleteLFSObjectResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.storage.Msg/DeleteLFSObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// RegisterProvider registers a new storage provider
	RegisterProvider(context.Context, *MsgRegisterProvider) (*MsgRegisterProviderResponse, error)
	// UpdateProvider updates a storage provider
	UpdateProvider(context.Context, *MsgUpdateProvider) (*MsgUpdateProviderResponse, error)
	// UpdateRepositoryPackfile updates repository packfile CID and root hash
	UpdateRepositoryPackfile(context.Context, *MsgUpdateRepositoryPackfile) (*MsgUpdateRepositoryPackfileResponse, error)
	// DeleteRepositoryPackfile deletes repository packfile
	DeleteRepositoryPackfile(context.Context, *MsgDeleteRepositoryPackfile) (*MsgDeleteRepositoryPackfileResponse, error)
	// UpdateReleaseAsset updates release asset
	UpdateReleaseAsset(context.Context, *MsgUpdateReleaseAsset) (*MsgUpdateReleaseAssetResponse, error)
	// DeleteReleaseAsset deletes release asset
	DeleteReleaseAsset(context.Context, *MsgDeleteReleaseAsset) (*MsgDeleteReleaseAssetResponse, error)
	// SubmitChallengeResponse submits proof for storage challenge
	SubmitChallengeResponse(context.Context, *MsgSubmitChallengeResponse) (*MsgSubmitChallengeResponseResponse, error)
	// WithdrawProviderRewards withdraws accumulated rewards for a provider
	WithdrawProviderRewards(context.Context, *MsgWithdrawProviderRewards) (*MsgWithdrawProviderRewardsResponse, error)
	// UnregisterProvider initiates the process of leaving the storage network
	UnregisterProvider(context.Context, *MsgUnregisterProvider) (*MsgUnregisterProviderResponse, error)
	// CompleteUnstake completes the unstaking process after the cooldown period
	CompleteUnstake(context.Context, *MsgCompleteUnstake) (*MsgCompleteUnstakeResponse, error)
	// IncreaseStake increases the stake of a storage provider
	IncreaseStake(context.Context, *MsgIncreaseStake) (*MsgIncreaseStakeResponse, error)
	// DecreaseStake decreases the stake of a storage provider with cooldown
	DecreaseStake(context.Context, *MsgDecreaseStake) (*MsgDecreaseStakeResponse, error)
	// ReactivateProvider reactivates a suspended provider
	ReactivateProvider(context.Context, *MsgReactivateProvider) (*MsgReactivateProviderResponse, error)
	// UpdateParams updates the parameters of the storage module
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	// MergePullRequest merges a pull request
	MergePullRequest(context.Context, *MsgMergePullRequest) (*MsgMergePullRequestResponse, error)
	// UpdateLFSObject updates an existing LFS object
	UpdateLFSObject(context.Context, *MsgUpdateLFSObject) (*MsgUpdateLFSObjectResponse, error)
	// DeleteLFSObject deletes an LFS object
	DeleteLFSObject(context.Context, *MsgDeleteLFSObject) (*MsgDeleteLFSObjectResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) RegisterProvider(ctx context.Context, req *MsgRegisterProvider) (*MsgRegisterProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterProvider not implemented")
}
func (*UnimplementedMsgServer) UpdateProvider(ctx context.Context, req *MsgUpdateProvider) (*MsgUpdateProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProvider not implemented")
}
func (*UnimplementedMsgServer) UpdateRepositoryPackfile(ctx context.Context, req *MsgUpdateRepositoryPackfile) (*MsgUpdateRepositoryPackfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRepositoryPackfile not implemented")
}
func (*UnimplementedMsgServer) DeleteRepositoryPackfile(ctx context.Context, req *MsgDeleteRepositoryPackfile) (*MsgDeleteRepositoryPackfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepositoryPackfile not implemented")
}
func (*UnimplementedMsgServer) UpdateReleaseAsset(ctx context.Context, req *MsgUpdateReleaseAsset) (*MsgUpdateReleaseAssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateReleaseAsset not implemented")
}
func (*UnimplementedMsgServer) DeleteReleaseAsset(ctx context.Context, req *MsgDeleteReleaseAsset) (*MsgDeleteReleaseAssetResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteReleaseAsset not implemented")
}
func (*UnimplementedMsgServer) SubmitChallengeResponse(ctx context.Context, req *MsgSubmitChallengeResponse) (*MsgSubmitChallengeResponseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SubmitChallengeResponse not implemented")
}
func (*UnimplementedMsgServer) WithdrawProviderRewards(ctx context.Context, req *MsgWithdrawProviderRewards) (*MsgWithdrawProviderRewardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method WithdrawProviderRewards not implemented")
}
func (*UnimplementedMsgServer) UnregisterProvider(ctx context.Context, req *MsgUnregisterProvider) (*MsgUnregisterProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnregisterProvider not implemented")
}
func (*UnimplementedMsgServer) CompleteUnstake(ctx context.Context, req *MsgCompleteUnstake) (*MsgCompleteUnstakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CompleteUnstake not implemented")
}
func (*UnimplementedMsgServer) IncreaseStake(ctx context.Context, req *MsgIncreaseStake) (*MsgIncreaseStakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IncreaseStake not implemented")
}
func (*UnimplementedMsgServer) DecreaseStake(ctx context.Context, req *MsgDecreaseStake) (*MsgDecreaseStakeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecreaseStake not implemented")
}
func (*UnimplementedMsgServer) ReactivateProvider(ctx context.Context, req *MsgReactivateProvider) (*MsgReactivateProviderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReactivateProvider not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) MergePullRequest(ctx context.Context, req *MsgMergePullRequest) (*MsgMergePullRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MergePullRequest not implemented")
}
func (*UnimplementedMsgServer) UpdateLFSObject(ctx context.Context, req *MsgUpdateLFSObject) (*MsgUpdateLFSObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateLFSObject not implemented")
}
func (*UnimplementedMsgServer) DeleteLFSObject(ctx context.Context, req *MsgDeleteLFSObject) (*MsgDeleteLFSObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteLFSObject not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_RegisterProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRegisterProvider)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RegisterProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/RegisterProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RegisterProvider(ctx, req.(*MsgRegisterProvider))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateProvider)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/UpdateProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateProvider(ctx, req.(*MsgUpdateProvider))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRepositoryPackfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRepositoryPackfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRepositoryPackfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/UpdateRepositoryPackfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRepositoryPackfile(ctx, req.(*MsgUpdateRepositoryPackfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteRepositoryPackfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteRepositoryPackfile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteRepositoryPackfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/DeleteRepositoryPackfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteRepositoryPackfile(ctx, req.(*MsgDeleteRepositoryPackfile))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateReleaseAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateReleaseAsset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateReleaseAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/UpdateReleaseAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateReleaseAsset(ctx, req.(*MsgUpdateReleaseAsset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteReleaseAsset_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteReleaseAsset)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteReleaseAsset(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/DeleteReleaseAsset",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteReleaseAsset(ctx, req.(*MsgDeleteReleaseAsset))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SubmitChallengeResponse_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSubmitChallengeResponse)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SubmitChallengeResponse(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/SubmitChallengeResponse",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SubmitChallengeResponse(ctx, req.(*MsgSubmitChallengeResponse))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_WithdrawProviderRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithdrawProviderRewards)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).WithdrawProviderRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/WithdrawProviderRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).WithdrawProviderRewards(ctx, req.(*MsgWithdrawProviderRewards))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnregisterProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnregisterProvider)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnregisterProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/UnregisterProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnregisterProvider(ctx, req.(*MsgUnregisterProvider))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CompleteUnstake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCompleteUnstake)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CompleteUnstake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/CompleteUnstake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CompleteUnstake(ctx, req.(*MsgCompleteUnstake))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_IncreaseStake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgIncreaseStake)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).IncreaseStake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/IncreaseStake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).IncreaseStake(ctx, req.(*MsgIncreaseStake))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DecreaseStake_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDecreaseStake)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DecreaseStake(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/DecreaseStake",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DecreaseStake(ctx, req.(*MsgDecreaseStake))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ReactivateProvider_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgReactivateProvider)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ReactivateProvider(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/ReactivateProvider",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ReactivateProvider(ctx, req.(*MsgReactivateProvider))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MergePullRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMergePullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MergePullRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/MergePullRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MergePullRequest(ctx, req.(*MsgMergePullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateLFSObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateLFSObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateLFSObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/UpdateLFSObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateLFSObject(ctx, req.(*MsgUpdateLFSObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteLFSObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteLFSObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteLFSObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.storage.Msg/DeleteLFSObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteLFSObject(ctx, req.(*MsgDeleteLFSObject))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitopia.gitopia.storage.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterProvider",
			Handler:    _Msg_RegisterProvider_Handler,
		},
		{
			MethodName: "UpdateProvider",
			Handler:    _Msg_UpdateProvider_Handler,
		},
		{
			MethodName: "UpdateRepositoryPackfile",
			Handler:    _Msg_UpdateRepositoryPackfile_Handler,
		},
		{
			MethodName: "DeleteRepositoryPackfile",
			Handler:    _Msg_DeleteRepositoryPackfile_Handler,
		},
		{
			MethodName: "UpdateReleaseAsset",
			Handler:    _Msg_UpdateReleaseAsset_Handler,
		},
		{
			MethodName: "DeleteReleaseAsset",
			Handler:    _Msg_DeleteReleaseAsset_Handler,
		},
		{
			MethodName: "SubmitChallengeResponse",
			Handler:    _Msg_SubmitChallengeResponse_Handler,
		},
		{
			MethodName: "WithdrawProviderRewards",
			Handler:    _Msg_WithdrawProviderRewards_Handler,
		},
		{
			MethodName: "UnregisterProvider",
			Handler:    _Msg_UnregisterProvider_Handler,
		},
		{
			MethodName: "CompleteUnstake",
			Handler:    _Msg_CompleteUnstake_Handler,
		},
		{
			MethodName: "IncreaseStake",
			Handler:    _Msg_IncreaseStake_Handler,
		},
		{
			MethodName: "DecreaseStake",
			Handler:    _Msg_DecreaseStake_Handler,
		},
		{
			MethodName: "ReactivateProvider",
			Handler:    _Msg_ReactivateProvider_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "MergePullRequest",
			Handler:    _Msg_MergePullRequest_Handler,
		},
		{
			MethodName: "UpdateLFSObject",
			Handler:    _Msg_UpdateLFSObject_Handler,
		},
		{
			MethodName: "DeleteLFSObject",
			Handler:    _Msg_DeleteLFSObject_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gitopia/gitopia/storage/tx.proto",
}

func (m *MsgRegisterProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.IpfsClusterPeerMultiaddr) > 0 {
		i -= len(m.IpfsClusterPeerMultiaddr)
		copy(dAtA[i:], m.IpfsClusterPeerMultiaddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.IpfsClusterPeerMultiaddr)))
		i--
		dAtA[i] = 0x2a
	}
	{
		size, err := m.Stake.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.Moniker) > 0 {
		i -= len(m.Moniker)
		copy(dAtA[i:], m.Moniker)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Moniker)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ApiUrl) > 0 {
		i -= len(m.ApiUrl)
		copy(dAtA[i:], m.ApiUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ApiUrl)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRegisterProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRegisterProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRegisterProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.IpfsClusterPeerMultiaddr) > 0 {
		i -= len(m.IpfsClusterPeerMultiaddr)
		copy(dAtA[i:], m.IpfsClusterPeerMultiaddr)
		i = encodeVarintTx(dAtA, i, uint64(len(m.IpfsClusterPeerMultiaddr)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Moniker) > 0 {
		i -= len(m.Moniker)
		copy(dAtA[i:], m.Moniker)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Moniker)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ApiUrl) > 0 {
		i -= len(m.ApiUrl)
		copy(dAtA[i:], m.ApiUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ApiUrl)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryPackfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryPackfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryPackfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Size_ != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Size_))
		i--
		dAtA[i] = 0x30
	}
	if len(m.RootHash) > 0 {
		i -= len(m.RootHash)
		copy(dAtA[i:], m.RootHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RootHash)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Cid) > 0 {
		i -= len(m.Cid)
		copy(dAtA[i:], m.Cid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Cid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryPackfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryPackfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryPackfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRepositoryPackfile) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRepositoryPackfile) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRepositoryPackfile) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerId) > 0 {
		i -= len(m.OwnerId)
		copy(dAtA[i:], m.OwnerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerId)))
		i--
		dAtA[i] = 0x1a
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRepositoryPackfileResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRepositoryPackfileResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRepositoryPackfileResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReleaseAsset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReleaseAsset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReleaseAsset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sha256) > 0 {
		i -= len(m.Sha256)
		copy(dAtA[i:], m.Sha256)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sha256)))
		i--
		dAtA[i] = 0x42
	}
	if m.Size_ != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Size_))
		i--
		dAtA[i] = 0x38
	}
	if len(m.RootHash) > 0 {
		i -= len(m.RootHash)
		copy(dAtA[i:], m.RootHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RootHash)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Cid) > 0 {
		i -= len(m.Cid)
		copy(dAtA[i:], m.Cid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Cid)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Tag) > 0 {
		i -= len(m.Tag)
		copy(dAtA[i:], m.Tag)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tag)))
		i--
		dAtA[i] = 0x1a
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReleaseAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReleaseAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReleaseAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReleaseAsset) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReleaseAsset) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReleaseAsset) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerId) > 0 {
		i -= len(m.OwnerId)
		copy(dAtA[i:], m.OwnerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Tag) > 0 {
		i -= len(m.Tag)
		copy(dAtA[i:], m.Tag)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tag)))
		i--
		dAtA[i] = 0x1a
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReleaseAssetResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReleaseAssetResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReleaseAssetResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSubmitChallengeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitChallengeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitChallengeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Proof != nil {
		{
			size, err := m.Proof.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x22
	}
	if len(m.Data) > 0 {
		i -= len(m.Data)
		copy(dAtA[i:], m.Data)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Data)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ChallengeId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ChallengeId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSubmitChallengeResponseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSubmitChallengeResponseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSubmitChallengeResponseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawProviderRewards) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawProviderRewards) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawProviderRewards) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgWithdrawProviderRewardsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgWithdrawProviderRewardsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgWithdrawProviderRewardsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnregisterProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnregisterProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnregisterProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnregisterProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnregisterProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnregisterProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n3, err3 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.UnstakeCompletionTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.UnstakeCompletionTime):])
	if err3 != nil {
		return 0, err3
	}
	i -= n3
	i = encodeVarintTx(dAtA, i, uint64(n3))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgCompleteUnstake) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompleteUnstake) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompleteUnstake) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCompleteUnstakeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCompleteUnstakeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCompleteUnstakeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgIncreaseStake) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIncreaseStake) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIncreaseStake) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgIncreaseStakeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgIncreaseStakeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgIncreaseStakeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDecreaseStake) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDecreaseStake) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDecreaseStake) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDecreaseStakeResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDecreaseStakeResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDecreaseStakeResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n7, err7 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CompletionTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CompletionTime):])
	if err7 != nil {
		return 0, err7
	}
	i -= n7
	i = encodeVarintTx(dAtA, i, uint64(n7))
	i--
	dAtA[i] = 0xa
	return len(dAtA) - i, nil
}

func (m *MsgReactivateProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReactivateProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReactivateProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgReactivateProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgReactivateProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgReactivateProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMergePullRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMergePullRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMergePullRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TaskId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TaskId))
		i--
		dAtA[i] = 0x28
	}
	if len(m.MergeCommitSha) > 0 {
		i -= len(m.MergeCommitSha)
		copy(dAtA[i:], m.MergeCommitSha)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MergeCommitSha)))
		i--
		dAtA[i] = 0x22
	}
	if m.PullRequestIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PullRequestIid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMergePullRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMergePullRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMergePullRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLFSObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLFSObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLFSObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.RootHash) > 0 {
		i -= len(m.RootHash)
		copy(dAtA[i:], m.RootHash)
		i = encodeVarintTx(dAtA, i, uint64(len(m.RootHash)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Cid) > 0 {
		i -= len(m.Cid)
		copy(dAtA[i:], m.Cid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Cid)))
		i--
		dAtA[i] = 0x32
	}
	if m.Size_ != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Size_))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Oid) > 0 {
		i -= len(m.Oid)
		copy(dAtA[i:], m.Oid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Oid)))
		i--
		dAtA[i] = 0x22
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateLFSObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateLFSObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateLFSObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLFSObject) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLFSObject) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLFSObject) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.OwnerId) > 0 {
		i -= len(m.OwnerId)
		copy(dAtA[i:], m.OwnerId)
		i = encodeVarintTx(dAtA, i, uint64(len(m.OwnerId)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Oid) > 0 {
		i -= len(m.Oid)
		copy(dAtA[i:], m.Oid)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Oid)))
		i--
		dAtA[i] = 0x1a
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteLFSObjectResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteLFSObjectResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteLFSObjectResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgRegisterProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ApiUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Moniker)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Stake.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.IpfsClusterPeerMultiaddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRegisterProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ApiUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Moniker)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.IpfsClusterPeerMultiaddr)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateRepositoryPackfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Cid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RootHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Size_ != 0 {
		n += 1 + sovTx(uint64(m.Size_))
	}
	return n
}

func (m *MsgUpdateRepositoryPackfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteRepositoryPackfile) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	l = len(m.OwnerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteRepositoryPackfileResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateReleaseAsset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	l = len(m.Tag)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Cid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RootHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Size_ != 0 {
		n += 1 + sovTx(uint64(m.Size_))
	}
	l = len(m.Sha256)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateReleaseAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteReleaseAsset) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	l = len(m.Tag)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteReleaseAssetResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSubmitChallengeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.ChallengeId != 0 {
		n += 1 + sovTx(uint64(m.ChallengeId))
	}
	l = len(m.Data)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Proof != nil {
		l = m.Proof.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSubmitChallengeResponseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgWithdrawProviderRewards) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgWithdrawProviderRewardsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUnregisterProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUnregisterProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.UnstakeCompletionTime)
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgCompleteUnstake) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCompleteUnstakeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgIncreaseStake) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgIncreaseStakeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDecreaseStake) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgDecreaseStakeResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CompletionTime)
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgReactivateProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgReactivateProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMergePullRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.PullRequestIid != 0 {
		n += 1 + sovTx(uint64(m.PullRequestIid))
	}
	l = len(m.MergeCommitSha)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TaskId != 0 {
		n += 1 + sovTx(uint64(m.TaskId))
	}
	return n
}

func (m *MsgMergePullRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateLFSObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	l = len(m.Oid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Size_ != 0 {
		n += 1 + sovTx(uint64(m.Size_))
	}
	l = len(m.Cid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.RootHash)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateLFSObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteLFSObject) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	l = len(m.Oid)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.OwnerId)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteLFSObjectResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgRegisterProvider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Moniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Moniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stake", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Stake.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IpfsClusterPeerMultiaddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IpfsClusterPeerMultiaddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRegisterProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRegisterProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRegisterProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProvider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApiUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApiUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Moniker", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Moniker = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IpfsClusterPeerMultiaddr", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IpfsClusterPeerMultiaddr = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryPackfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryPackfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryPackfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootHash = append(m.RootHash[:0], dAtA[iNdEx:postIndex]...)
			if m.RootHash == nil {
				m.RootHash = []byte{}
			}
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			m.Size_ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size_ |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryPackfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryPackfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryPackfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRepositoryPackfile) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRepositoryPackfile: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRepositoryPackfile: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRepositoryPackfileResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRepositoryPackfileResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRepositoryPackfileResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReleaseAsset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReleaseAsset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReleaseAsset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootHash = append(m.RootHash[:0], dAtA[iNdEx:postIndex]...)
			if m.RootHash == nil {
				m.RootHash = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			m.Size_ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size_ |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha256", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha256 = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReleaseAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReleaseAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReleaseAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReleaseAsset) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReleaseAsset: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReleaseAsset: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReleaseAssetResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReleaseAssetResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReleaseAssetResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitChallengeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitChallengeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitChallengeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChallengeId", wireType)
			}
			m.ChallengeId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChallengeId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Data", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Data = append(m.Data[:0], dAtA[iNdEx:postIndex]...)
			if m.Data == nil {
				m.Data = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proof", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Proof == nil {
				m.Proof = &Proof{}
			}
			if err := m.Proof.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSubmitChallengeResponseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSubmitChallengeResponseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSubmitChallengeResponseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawProviderRewards) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawProviderRewards: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawProviderRewards: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgWithdrawProviderRewardsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgWithdrawProviderRewardsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgWithdrawProviderRewardsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnregisterProvider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnregisterProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnregisterProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnregisterProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnregisterProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnregisterProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UnstakeCompletionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.UnstakeCompletionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompleteUnstake) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompleteUnstake: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompleteUnstake: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCompleteUnstakeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCompleteUnstakeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCompleteUnstakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgIncreaseStake) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIncreaseStake: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIncreaseStake: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgIncreaseStakeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgIncreaseStakeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgIncreaseStakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDecreaseStake) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDecreaseStake: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDecreaseStake: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDecreaseStakeResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDecreaseStakeResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDecreaseStakeResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CompletionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReactivateProvider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReactivateProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReactivateProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgReactivateProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgReactivateProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgReactivateProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMergePullRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMergePullRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMergePullRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullRequestIid", wireType)
			}
			m.PullRequestIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PullRequestIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergeCommitSha", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MergeCommitSha = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskId", wireType)
			}
			m.TaskId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TaskId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMergePullRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMergePullRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMergePullRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLFSObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLFSObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLFSObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Oid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Size_", wireType)
			}
			m.Size_ = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Size_ |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RootHash", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RootHash = append(m.RootHash[:0], dAtA[iNdEx:postIndex]...)
			if m.RootHash == nil {
				m.RootHash = []byte{}
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateLFSObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateLFSObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateLFSObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLFSObject) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLFSObject: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLFSObject: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Oid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Oid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field OwnerId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.OwnerId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteLFSObjectResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteLFSObjectResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteLFSObjectResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
