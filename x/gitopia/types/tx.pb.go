// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gitopia/gitopia/gitopia/tx.proto

package types

import (
	context "context"
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/cosmos-sdk/types/msgservice"
	_ "github.com/cosmos/cosmos-sdk/types/tx/amino"
	group "github.com/cosmos/cosmos-sdk/x/group"
	_ "github.com/cosmos/gogoproto/gogoproto"
	grpc1 "github.com/cosmos/gogoproto/grpc"
	proto "github.com/cosmos/gogoproto/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MsgExercise struct {
	Creator string     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount  types.Coin `protobuf:"bytes,2,opt,name=amount,proto3,castkey=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount"`
	To      string     `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
}

func (m *MsgExercise) Reset()         { *m = MsgExercise{} }
func (m *MsgExercise) String() string { return proto.CompactTextString(m) }
func (*MsgExercise) ProtoMessage()    {}
func (*MsgExercise) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{0}
}
func (m *MsgExercise) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExercise) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExercise.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExercise) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExercise.Merge(m, src)
}
func (m *MsgExercise) XXX_Size() int {
	return m.Size()
}
func (m *MsgExercise) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExercise.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExercise proto.InternalMessageInfo

func (m *MsgExercise) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgExercise) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

func (m *MsgExercise) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type MsgExerciseResponse struct {
}

func (m *MsgExerciseResponse) Reset()         { *m = MsgExerciseResponse{} }
func (m *MsgExerciseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgExerciseResponse) ProtoMessage()    {}
func (*MsgExerciseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{1}
}
func (m *MsgExerciseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgExerciseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgExerciseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgExerciseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgExerciseResponse.Merge(m, src)
}
func (m *MsgExerciseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgExerciseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgExerciseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgExerciseResponse proto.InternalMessageInfo

type MsgToggleForcePush struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	BranchName   string       `protobuf:"bytes,3,opt,name=branchName,proto3" json:"branchName,omitempty"`
}

func (m *MsgToggleForcePush) Reset()         { *m = MsgToggleForcePush{} }
func (m *MsgToggleForcePush) String() string { return proto.CompactTextString(m) }
func (*MsgToggleForcePush) ProtoMessage()    {}
func (*MsgToggleForcePush) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{2}
}
func (m *MsgToggleForcePush) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleForcePush) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleForcePush.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleForcePush) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleForcePush.Merge(m, src)
}
func (m *MsgToggleForcePush) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleForcePush) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleForcePush.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleForcePush proto.InternalMessageInfo

func (m *MsgToggleForcePush) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgToggleForcePush) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgToggleForcePush) GetBranchName() string {
	if m != nil {
		return m.BranchName
	}
	return ""
}

type MsgToggleForcePushResponse struct {
}

func (m *MsgToggleForcePushResponse) Reset()         { *m = MsgToggleForcePushResponse{} }
func (m *MsgToggleForcePushResponse) String() string { return proto.CompactTextString(m) }
func (*MsgToggleForcePushResponse) ProtoMessage()    {}
func (*MsgToggleForcePushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{3}
}
func (m *MsgToggleForcePushResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleForcePushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleForcePushResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleForcePushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleForcePushResponse.Merge(m, src)
}
func (m *MsgToggleForcePushResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleForcePushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleForcePushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleForcePushResponse proto.InternalMessageInfo

type MsgCreateTask struct {
	Creator  string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	TaskType TaskType `protobuf:"varint,2,opt,name=taskType,proto3,enum=gitopia.gitopia.gitopia.TaskType" json:"taskType,omitempty"`
	Provider string   `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgCreateTask) Reset()         { *m = MsgCreateTask{} }
func (m *MsgCreateTask) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTask) ProtoMessage()    {}
func (*MsgCreateTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{4}
}
func (m *MsgCreateTask) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTask.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTask.Merge(m, src)
}
func (m *MsgCreateTask) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTask) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTask.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTask proto.InternalMessageInfo

func (m *MsgCreateTask) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateTask) GetTaskType() TaskType {
	if m != nil {
		return m.TaskType
	}
	return TypeForkRepository
}

func (m *MsgCreateTask) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgCreateTaskResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateTaskResponse) Reset()         { *m = MsgCreateTaskResponse{} }
func (m *MsgCreateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateTaskResponse) ProtoMessage()    {}
func (*MsgCreateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{5}
}
func (m *MsgCreateTaskResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateTaskResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateTaskResponse.Merge(m, src)
}
func (m *MsgCreateTaskResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateTaskResponse proto.InternalMessageInfo

func (m *MsgCreateTaskResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateTask struct {
	Creator string    `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	State   TaskState `protobuf:"varint,3,opt,name=state,proto3,enum=gitopia.gitopia.gitopia.TaskState" json:"state,omitempty"`
	Message string    `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (m *MsgUpdateTask) Reset()         { *m = MsgUpdateTask{} }
func (m *MsgUpdateTask) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTask) ProtoMessage()    {}
func (*MsgUpdateTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{6}
}
func (m *MsgUpdateTask) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTask.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTask.Merge(m, src)
}
func (m *MsgUpdateTask) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTask) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTask.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTask proto.InternalMessageInfo

func (m *MsgUpdateTask) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateTask) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateTask) GetState() TaskState {
	if m != nil {
		return m.State
	}
	return StatePending
}

func (m *MsgUpdateTask) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type MsgUpdateTaskResponse struct {
}

func (m *MsgUpdateTaskResponse) Reset()         { *m = MsgUpdateTaskResponse{} }
func (m *MsgUpdateTaskResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateTaskResponse) ProtoMessage()    {}
func (*MsgUpdateTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{7}
}
func (m *MsgUpdateTaskResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateTaskResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateTaskResponse.Merge(m, src)
}
func (m *MsgUpdateTaskResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateTaskResponse proto.InternalMessageInfo

type MsgDeleteTask struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteTask) Reset()         { *m = MsgDeleteTask{} }
func (m *MsgDeleteTask) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTask) ProtoMessage()    {}
func (*MsgDeleteTask) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{8}
}
func (m *MsgDeleteTask) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTask) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTask.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTask) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTask.Merge(m, src)
}
func (m *MsgDeleteTask) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTask) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTask.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTask proto.InternalMessageInfo

func (m *MsgDeleteTask) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTask) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateRepositoryBackupRef struct {
	Creator      string                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId           `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Store        RepositoryBackup_Store `protobuf:"varint,3,opt,name=store,proto3,enum=gitopia.gitopia.gitopia.RepositoryBackup_Store" json:"store,omitempty"`
	Ref          string                 `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (m *MsgUpdateRepositoryBackupRef) Reset()         { *m = MsgUpdateRepositoryBackupRef{} }
func (m *MsgUpdateRepositoryBackupRef) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryBackupRef) ProtoMessage()    {}
func (*MsgUpdateRepositoryBackupRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{9}
}
func (m *MsgUpdateRepositoryBackupRef) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryBackupRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryBackupRef.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryBackupRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryBackupRef.Merge(m, src)
}
func (m *MsgUpdateRepositoryBackupRef) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryBackupRef) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryBackupRef.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryBackupRef proto.InternalMessageInfo

func (m *MsgUpdateRepositoryBackupRef) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRepositoryBackupRef) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgUpdateRepositoryBackupRef) GetStore() RepositoryBackup_Store {
	if m != nil {
		return m.Store
	}
	return RepositoryBackup_IPFS
}

func (m *MsgUpdateRepositoryBackupRef) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type MsgUpdateRepositoryBackupRefResponse struct {
}

func (m *MsgUpdateRepositoryBackupRefResponse) Reset()         { *m = MsgUpdateRepositoryBackupRefResponse{} }
func (m *MsgUpdateRepositoryBackupRefResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryBackupRefResponse) ProtoMessage()    {}
func (*MsgUpdateRepositoryBackupRefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{10}
}
func (m *MsgUpdateRepositoryBackupRefResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryBackupRefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryBackupRefResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryBackupRefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryBackupRefResponse.Merge(m, src)
}
func (m *MsgUpdateRepositoryBackupRefResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryBackupRefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryBackupRefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryBackupRefResponse proto.InternalMessageInfo

type MsgAddRepositoryBackupRef struct {
	Creator      string                 `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId           `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Store        RepositoryBackup_Store `protobuf:"varint,3,opt,name=store,proto3,enum=gitopia.gitopia.gitopia.RepositoryBackup_Store" json:"store,omitempty"`
	Ref          string                 `protobuf:"bytes,4,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (m *MsgAddRepositoryBackupRef) Reset()         { *m = MsgAddRepositoryBackupRef{} }
func (m *MsgAddRepositoryBackupRef) String() string { return proto.CompactTextString(m) }
func (*MsgAddRepositoryBackupRef) ProtoMessage()    {}
func (*MsgAddRepositoryBackupRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{11}
}
func (m *MsgAddRepositoryBackupRef) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddRepositoryBackupRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddRepositoryBackupRef.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddRepositoryBackupRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddRepositoryBackupRef.Merge(m, src)
}
func (m *MsgAddRepositoryBackupRef) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddRepositoryBackupRef) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddRepositoryBackupRef.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddRepositoryBackupRef proto.InternalMessageInfo

func (m *MsgAddRepositoryBackupRef) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddRepositoryBackupRef) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgAddRepositoryBackupRef) GetStore() RepositoryBackup_Store {
	if m != nil {
		return m.Store
	}
	return RepositoryBackup_IPFS
}

func (m *MsgAddRepositoryBackupRef) GetRef() string {
	if m != nil {
		return m.Ref
	}
	return ""
}

type MsgAddRepositoryBackupRefResponse struct {
}

func (m *MsgAddRepositoryBackupRefResponse) Reset()         { *m = MsgAddRepositoryBackupRefResponse{} }
func (m *MsgAddRepositoryBackupRefResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddRepositoryBackupRefResponse) ProtoMessage()    {}
func (*MsgAddRepositoryBackupRefResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{12}
}
func (m *MsgAddRepositoryBackupRefResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddRepositoryBackupRefResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddRepositoryBackupRefResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddRepositoryBackupRefResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddRepositoryBackupRefResponse.Merge(m, src)
}
func (m *MsgAddRepositoryBackupRefResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddRepositoryBackupRefResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddRepositoryBackupRefResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddRepositoryBackupRefResponse proto.InternalMessageInfo

type MsgDeleteTaskResponse struct {
}

func (m *MsgDeleteTaskResponse) Reset()         { *m = MsgDeleteTaskResponse{} }
func (m *MsgDeleteTaskResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTaskResponse) ProtoMessage()    {}
func (*MsgDeleteTaskResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{13}
}
func (m *MsgDeleteTaskResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTaskResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTaskResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTaskResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTaskResponse.Merge(m, src)
}
func (m *MsgDeleteTaskResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTaskResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTaskResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTaskResponse proto.InternalMessageInfo

type MsgDeleteStorageProviderResponse struct {
}

func (m *MsgDeleteStorageProviderResponse) Reset()         { *m = MsgDeleteStorageProviderResponse{} }
func (m *MsgDeleteStorageProviderResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteStorageProviderResponse) ProtoMessage()    {}
func (*MsgDeleteStorageProviderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{14}
}
func (m *MsgDeleteStorageProviderResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteStorageProviderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteStorageProviderResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteStorageProviderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteStorageProviderResponse.Merge(m, src)
}
func (m *MsgDeleteStorageProviderResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteStorageProviderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteStorageProviderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteStorageProviderResponse proto.InternalMessageInfo

type MsgSetBranch struct {
	Creator      string              `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId        `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Branch       MsgSetBranch_Branch `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch"`
}

func (m *MsgSetBranch) Reset()         { *m = MsgSetBranch{} }
func (m *MsgSetBranch) String() string { return proto.CompactTextString(m) }
func (*MsgSetBranch) ProtoMessage()    {}
func (*MsgSetBranch) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{15}
}
func (m *MsgSetBranch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetBranch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetBranch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetBranch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetBranch.Merge(m, src)
}
func (m *MsgSetBranch) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetBranch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetBranch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetBranch proto.InternalMessageInfo

func (m *MsgSetBranch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetBranch) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgSetBranch) GetBranch() MsgSetBranch_Branch {
	if m != nil {
		return m.Branch
	}
	return MsgSetBranch_Branch{}
}

type MsgSetBranch_Branch struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (m *MsgSetBranch_Branch) Reset()         { *m = MsgSetBranch_Branch{} }
func (m *MsgSetBranch_Branch) String() string { return proto.CompactTextString(m) }
func (*MsgSetBranch_Branch) ProtoMessage()    {}
func (*MsgSetBranch_Branch) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{15, 0}
}
func (m *MsgSetBranch_Branch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetBranch_Branch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetBranch_Branch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetBranch_Branch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetBranch_Branch.Merge(m, src)
}
func (m *MsgSetBranch_Branch) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetBranch_Branch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetBranch_Branch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetBranch_Branch proto.InternalMessageInfo

func (m *MsgSetBranch_Branch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgSetBranch_Branch) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

type MsgSetBranchResponse struct {
}

func (m *MsgSetBranchResponse) Reset()         { *m = MsgSetBranchResponse{} }
func (m *MsgSetBranchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetBranchResponse) ProtoMessage()    {}
func (*MsgSetBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{16}
}
func (m *MsgSetBranchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetBranchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetBranchResponse.Merge(m, src)
}
func (m *MsgSetBranchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetBranchResponse proto.InternalMessageInfo

type MsgSetDefaultBranch struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Branch       string       `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (m *MsgSetDefaultBranch) Reset()         { *m = MsgSetDefaultBranch{} }
func (m *MsgSetDefaultBranch) String() string { return proto.CompactTextString(m) }
func (*MsgSetDefaultBranch) ProtoMessage()    {}
func (*MsgSetDefaultBranch) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{17}
}
func (m *MsgSetDefaultBranch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetDefaultBranch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetDefaultBranch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetDefaultBranch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetDefaultBranch.Merge(m, src)
}
func (m *MsgSetDefaultBranch) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetDefaultBranch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetDefaultBranch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetDefaultBranch proto.InternalMessageInfo

func (m *MsgSetDefaultBranch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetDefaultBranch) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgSetDefaultBranch) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

type MsgSetDefaultBranchResponse struct {
}

func (m *MsgSetDefaultBranchResponse) Reset()         { *m = MsgSetDefaultBranchResponse{} }
func (m *MsgSetDefaultBranchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetDefaultBranchResponse) ProtoMessage()    {}
func (*MsgSetDefaultBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{18}
}
func (m *MsgSetDefaultBranchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetDefaultBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetDefaultBranchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetDefaultBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetDefaultBranchResponse.Merge(m, src)
}
func (m *MsgSetDefaultBranchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetDefaultBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetDefaultBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetDefaultBranchResponse proto.InternalMessageInfo

type MsgMultiSetBranch struct {
	Creator      string                     `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId               `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Branches     []MsgMultiSetBranch_Branch `protobuf:"bytes,3,rep,name=branches,proto3" json:"branches"`
}

func (m *MsgMultiSetBranch) Reset()         { *m = MsgMultiSetBranch{} }
func (m *MsgMultiSetBranch) String() string { return proto.CompactTextString(m) }
func (*MsgMultiSetBranch) ProtoMessage()    {}
func (*MsgMultiSetBranch) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{19}
}
func (m *MsgMultiSetBranch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiSetBranch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiSetBranch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiSetBranch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiSetBranch.Merge(m, src)
}
func (m *MsgMultiSetBranch) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiSetBranch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiSetBranch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiSetBranch proto.InternalMessageInfo

func (m *MsgMultiSetBranch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMultiSetBranch) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgMultiSetBranch) GetBranches() []MsgMultiSetBranch_Branch {
	if m != nil {
		return m.Branches
	}
	return nil
}

type MsgMultiSetBranch_Branch struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (m *MsgMultiSetBranch_Branch) Reset()         { *m = MsgMultiSetBranch_Branch{} }
func (m *MsgMultiSetBranch_Branch) String() string { return proto.CompactTextString(m) }
func (*MsgMultiSetBranch_Branch) ProtoMessage()    {}
func (*MsgMultiSetBranch_Branch) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{19, 0}
}
func (m *MsgMultiSetBranch_Branch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiSetBranch_Branch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiSetBranch_Branch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiSetBranch_Branch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiSetBranch_Branch.Merge(m, src)
}
func (m *MsgMultiSetBranch_Branch) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiSetBranch_Branch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiSetBranch_Branch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiSetBranch_Branch proto.InternalMessageInfo

func (m *MsgMultiSetBranch_Branch) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgMultiSetBranch_Branch) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

type MsgMultiSetBranchResponse struct {
}

func (m *MsgMultiSetBranchResponse) Reset()         { *m = MsgMultiSetBranchResponse{} }
func (m *MsgMultiSetBranchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMultiSetBranchResponse) ProtoMessage()    {}
func (*MsgMultiSetBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{20}
}
func (m *MsgMultiSetBranchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiSetBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiSetBranchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiSetBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiSetBranchResponse.Merge(m, src)
}
func (m *MsgMultiSetBranchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiSetBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiSetBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiSetBranchResponse proto.InternalMessageInfo

type MsgDeleteBranch struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Branch       string       `protobuf:"bytes,3,opt,name=branch,proto3" json:"branch,omitempty"`
}

func (m *MsgDeleteBranch) Reset()         { *m = MsgDeleteBranch{} }
func (m *MsgDeleteBranch) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBranch) ProtoMessage()    {}
func (*MsgDeleteBranch) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{21}
}
func (m *MsgDeleteBranch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBranch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBranch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBranch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBranch.Merge(m, src)
}
func (m *MsgDeleteBranch) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBranch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBranch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBranch proto.InternalMessageInfo

func (m *MsgDeleteBranch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteBranch) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgDeleteBranch) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

type MsgDeleteBranchResponse struct {
}

func (m *MsgDeleteBranchResponse) Reset()         { *m = MsgDeleteBranchResponse{} }
func (m *MsgDeleteBranchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBranchResponse) ProtoMessage()    {}
func (*MsgDeleteBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{22}
}
func (m *MsgDeleteBranchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBranchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBranchResponse.Merge(m, src)
}
func (m *MsgDeleteBranchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBranchResponse proto.InternalMessageInfo

type MsgMultiDeleteBranch struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Branches     []string     `protobuf:"bytes,3,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (m *MsgMultiDeleteBranch) Reset()         { *m = MsgMultiDeleteBranch{} }
func (m *MsgMultiDeleteBranch) String() string { return proto.CompactTextString(m) }
func (*MsgMultiDeleteBranch) ProtoMessage()    {}
func (*MsgMultiDeleteBranch) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{23}
}
func (m *MsgMultiDeleteBranch) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiDeleteBranch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiDeleteBranch.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiDeleteBranch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiDeleteBranch.Merge(m, src)
}
func (m *MsgMultiDeleteBranch) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiDeleteBranch) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiDeleteBranch.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiDeleteBranch proto.InternalMessageInfo

func (m *MsgMultiDeleteBranch) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMultiDeleteBranch) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgMultiDeleteBranch) GetBranches() []string {
	if m != nil {
		return m.Branches
	}
	return nil
}

type MsgMultiDeleteBranchResponse struct {
}

func (m *MsgMultiDeleteBranchResponse) Reset()         { *m = MsgMultiDeleteBranchResponse{} }
func (m *MsgMultiDeleteBranchResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMultiDeleteBranchResponse) ProtoMessage()    {}
func (*MsgMultiDeleteBranchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{24}
}
func (m *MsgMultiDeleteBranchResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiDeleteBranchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiDeleteBranchResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiDeleteBranchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiDeleteBranchResponse.Merge(m, src)
}
func (m *MsgMultiDeleteBranchResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiDeleteBranchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiDeleteBranchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiDeleteBranchResponse proto.InternalMessageInfo

type MsgSetTag struct {
	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId  `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Tag          MsgSetTag_Tag `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag"`
}

func (m *MsgSetTag) Reset()         { *m = MsgSetTag{} }
func (m *MsgSetTag) String() string { return proto.CompactTextString(m) }
func (*MsgSetTag) ProtoMessage()    {}
func (*MsgSetTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{25}
}
func (m *MsgSetTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTag.Merge(m, src)
}
func (m *MsgSetTag) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTag) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTag.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTag proto.InternalMessageInfo

func (m *MsgSetTag) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetTag) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgSetTag) GetTag() MsgSetTag_Tag {
	if m != nil {
		return m.Tag
	}
	return MsgSetTag_Tag{}
}

type MsgSetTag_Tag struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (m *MsgSetTag_Tag) Reset()         { *m = MsgSetTag_Tag{} }
func (m *MsgSetTag_Tag) String() string { return proto.CompactTextString(m) }
func (*MsgSetTag_Tag) ProtoMessage()    {}
func (*MsgSetTag_Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{25, 0}
}
func (m *MsgSetTag_Tag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTag_Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTag_Tag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTag_Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTag_Tag.Merge(m, src)
}
func (m *MsgSetTag_Tag) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTag_Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTag_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTag_Tag proto.InternalMessageInfo

func (m *MsgSetTag_Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgSetTag_Tag) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

type MsgSetTagResponse struct {
}

func (m *MsgSetTagResponse) Reset()         { *m = MsgSetTagResponse{} }
func (m *MsgSetTagResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetTagResponse) ProtoMessage()    {}
func (*MsgSetTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{26}
}
func (m *MsgSetTagResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetTagResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetTagResponse.Merge(m, src)
}
func (m *MsgSetTagResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetTagResponse proto.InternalMessageInfo

type MsgMultiSetTag struct {
	Creator      string               `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId         `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Tags         []MsgMultiSetTag_Tag `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags"`
}

func (m *MsgMultiSetTag) Reset()         { *m = MsgMultiSetTag{} }
func (m *MsgMultiSetTag) String() string { return proto.CompactTextString(m) }
func (*MsgMultiSetTag) ProtoMessage()    {}
func (*MsgMultiSetTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{27}
}
func (m *MsgMultiSetTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiSetTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiSetTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiSetTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiSetTag.Merge(m, src)
}
func (m *MsgMultiSetTag) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiSetTag) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiSetTag.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiSetTag proto.InternalMessageInfo

func (m *MsgMultiSetTag) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMultiSetTag) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgMultiSetTag) GetTags() []MsgMultiSetTag_Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

type MsgMultiSetTag_Tag struct {
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Sha  string `protobuf:"bytes,2,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (m *MsgMultiSetTag_Tag) Reset()         { *m = MsgMultiSetTag_Tag{} }
func (m *MsgMultiSetTag_Tag) String() string { return proto.CompactTextString(m) }
func (*MsgMultiSetTag_Tag) ProtoMessage()    {}
func (*MsgMultiSetTag_Tag) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{27, 0}
}
func (m *MsgMultiSetTag_Tag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiSetTag_Tag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiSetTag_Tag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiSetTag_Tag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiSetTag_Tag.Merge(m, src)
}
func (m *MsgMultiSetTag_Tag) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiSetTag_Tag) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiSetTag_Tag.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiSetTag_Tag proto.InternalMessageInfo

func (m *MsgMultiSetTag_Tag) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgMultiSetTag_Tag) GetSha() string {
	if m != nil {
		return m.Sha
	}
	return ""
}

type MsgMultiSetTagResponse struct {
}

func (m *MsgMultiSetTagResponse) Reset()         { *m = MsgMultiSetTagResponse{} }
func (m *MsgMultiSetTagResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMultiSetTagResponse) ProtoMessage()    {}
func (*MsgMultiSetTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{28}
}
func (m *MsgMultiSetTagResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiSetTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiSetTagResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiSetTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiSetTagResponse.Merge(m, src)
}
func (m *MsgMultiSetTagResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiSetTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiSetTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiSetTagResponse proto.InternalMessageInfo

type MsgDeleteTag struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Tag          string       `protobuf:"bytes,3,opt,name=tag,proto3" json:"tag,omitempty"`
}

func (m *MsgDeleteTag) Reset()         { *m = MsgDeleteTag{} }
func (m *MsgDeleteTag) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTag) ProtoMessage()    {}
func (*MsgDeleteTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{29}
}
func (m *MsgDeleteTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTag.Merge(m, src)
}
func (m *MsgDeleteTag) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTag) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTag.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTag proto.InternalMessageInfo

func (m *MsgDeleteTag) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteTag) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgDeleteTag) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type MsgDeleteTagResponse struct {
}

func (m *MsgDeleteTagResponse) Reset()         { *m = MsgDeleteTagResponse{} }
func (m *MsgDeleteTagResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteTagResponse) ProtoMessage()    {}
func (*MsgDeleteTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{30}
}
func (m *MsgDeleteTagResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteTagResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteTagResponse.Merge(m, src)
}
func (m *MsgDeleteTagResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteTagResponse proto.InternalMessageInfo

type MsgMultiDeleteTag struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Tags         []string     `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (m *MsgMultiDeleteTag) Reset()         { *m = MsgMultiDeleteTag{} }
func (m *MsgMultiDeleteTag) String() string { return proto.CompactTextString(m) }
func (*MsgMultiDeleteTag) ProtoMessage()    {}
func (*MsgMultiDeleteTag) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{31}
}
func (m *MsgMultiDeleteTag) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiDeleteTag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiDeleteTag.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiDeleteTag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiDeleteTag.Merge(m, src)
}
func (m *MsgMultiDeleteTag) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiDeleteTag) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiDeleteTag.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiDeleteTag proto.InternalMessageInfo

func (m *MsgMultiDeleteTag) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgMultiDeleteTag) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgMultiDeleteTag) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type MsgMultiDeleteTagResponse struct {
}

func (m *MsgMultiDeleteTagResponse) Reset()         { *m = MsgMultiDeleteTagResponse{} }
func (m *MsgMultiDeleteTagResponse) String() string { return proto.CompactTextString(m) }
func (*MsgMultiDeleteTagResponse) ProtoMessage()    {}
func (*MsgMultiDeleteTagResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{32}
}
func (m *MsgMultiDeleteTagResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgMultiDeleteTagResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgMultiDeleteTagResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgMultiDeleteTagResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgMultiDeleteTagResponse.Merge(m, src)
}
func (m *MsgMultiDeleteTagResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgMultiDeleteTagResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgMultiDeleteTagResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgMultiDeleteTagResponse proto.InternalMessageInfo

type MsgCreateBounty struct {
	Creator      string                                   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Amount       github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,2,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
	Expiry       int64                                    `protobuf:"varint,3,opt,name=expiry,proto3" json:"expiry,omitempty"`
	RepositoryId uint64                                   `protobuf:"varint,4,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	ParentIid    uint64                                   `protobuf:"varint,5,opt,name=parentIid,proto3" json:"parentIid,omitempty"`
	Parent       BountyParent                             `protobuf:"varint,6,opt,name=parent,proto3,enum=gitopia.gitopia.gitopia.BountyParent" json:"parent,omitempty"`
}

func (m *MsgCreateBounty) Reset()         { *m = MsgCreateBounty{} }
func (m *MsgCreateBounty) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBounty) ProtoMessage()    {}
func (*MsgCreateBounty) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{33}
}
func (m *MsgCreateBounty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBounty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBounty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBounty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBounty.Merge(m, src)
}
func (m *MsgCreateBounty) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBounty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBounty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBounty proto.InternalMessageInfo

func (m *MsgCreateBounty) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateBounty) GetAmount() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *MsgCreateBounty) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

func (m *MsgCreateBounty) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgCreateBounty) GetParentIid() uint64 {
	if m != nil {
		return m.ParentIid
	}
	return 0
}

func (m *MsgCreateBounty) GetParent() BountyParent {
	if m != nil {
		return m.Parent
	}
	return BountyParentIssue
}

type MsgCreateBountyResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateBountyResponse) Reset()         { *m = MsgCreateBountyResponse{} }
func (m *MsgCreateBountyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateBountyResponse) ProtoMessage()    {}
func (*MsgCreateBountyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{34}
}
func (m *MsgCreateBountyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateBountyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateBountyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateBountyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateBountyResponse.Merge(m, src)
}
func (m *MsgCreateBountyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateBountyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateBountyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateBountyResponse proto.InternalMessageInfo

func (m *MsgCreateBountyResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateBountyExpiry struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Expiry  int64  `protobuf:"varint,3,opt,name=expiry,proto3" json:"expiry,omitempty"`
}

func (m *MsgUpdateBountyExpiry) Reset()         { *m = MsgUpdateBountyExpiry{} }
func (m *MsgUpdateBountyExpiry) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBountyExpiry) ProtoMessage()    {}
func (*MsgUpdateBountyExpiry) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{35}
}
func (m *MsgUpdateBountyExpiry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBountyExpiry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBountyExpiry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBountyExpiry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBountyExpiry.Merge(m, src)
}
func (m *MsgUpdateBountyExpiry) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBountyExpiry) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBountyExpiry.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBountyExpiry proto.InternalMessageInfo

func (m *MsgUpdateBountyExpiry) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateBountyExpiry) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateBountyExpiry) GetExpiry() int64 {
	if m != nil {
		return m.Expiry
	}
	return 0
}

type MsgUpdateBountyExpiryResponse struct {
}

func (m *MsgUpdateBountyExpiryResponse) Reset()         { *m = MsgUpdateBountyExpiryResponse{} }
func (m *MsgUpdateBountyExpiryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateBountyExpiryResponse) ProtoMessage()    {}
func (*MsgUpdateBountyExpiryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{36}
}
func (m *MsgUpdateBountyExpiryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateBountyExpiryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateBountyExpiryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateBountyExpiryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateBountyExpiryResponse.Merge(m, src)
}
func (m *MsgUpdateBountyExpiryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateBountyExpiryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateBountyExpiryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateBountyExpiryResponse proto.InternalMessageInfo

type MsgCloseBounty struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCloseBounty) Reset()         { *m = MsgCloseBounty{} }
func (m *MsgCloseBounty) String() string { return proto.CompactTextString(m) }
func (*MsgCloseBounty) ProtoMessage()    {}
func (*MsgCloseBounty) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{37}
}
func (m *MsgCloseBounty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCloseBounty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCloseBounty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCloseBounty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCloseBounty.Merge(m, src)
}
func (m *MsgCloseBounty) XXX_Size() int {
	return m.Size()
}
func (m *MsgCloseBounty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCloseBounty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCloseBounty proto.InternalMessageInfo

func (m *MsgCloseBounty) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCloseBounty) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgCloseBountyResponse struct {
}

func (m *MsgCloseBountyResponse) Reset()         { *m = MsgCloseBountyResponse{} }
func (m *MsgCloseBountyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCloseBountyResponse) ProtoMessage()    {}
func (*MsgCloseBountyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{38}
}
func (m *MsgCloseBountyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCloseBountyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCloseBountyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCloseBountyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCloseBountyResponse.Merge(m, src)
}
func (m *MsgCloseBountyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCloseBountyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCloseBountyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCloseBountyResponse proto.InternalMessageInfo

type MsgDeleteBounty struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteBounty) Reset()         { *m = MsgDeleteBounty{} }
func (m *MsgDeleteBounty) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBounty) ProtoMessage()    {}
func (*MsgDeleteBounty) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{39}
}
func (m *MsgDeleteBounty) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBounty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBounty.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBounty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBounty.Merge(m, src)
}
func (m *MsgDeleteBounty) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBounty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBounty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBounty proto.InternalMessageInfo

func (m *MsgDeleteBounty) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteBounty) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteBountyResponse struct {
}

func (m *MsgDeleteBountyResponse) Reset()         { *m = MsgDeleteBountyResponse{} }
func (m *MsgDeleteBountyResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteBountyResponse) ProtoMessage()    {}
func (*MsgDeleteBountyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{40}
}
func (m *MsgDeleteBountyResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteBountyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteBountyResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteBountyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteBountyResponse.Merge(m, src)
}
func (m *MsgDeleteBountyResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteBountyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteBountyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteBountyResponse proto.InternalMessageInfo

// this line is used by starport scaffolding # proto/tx/message
type MsgCreateRelease struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	TagName      string       `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	Target       string       `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Name         string       `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description  string       `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Attachments  string       `protobuf:"bytes,7,opt,name=attachments,proto3" json:"attachments,omitempty"`
	Draft        bool         `protobuf:"varint,8,opt,name=draft,proto3" json:"draft,omitempty"`
	PreRelease   bool         `protobuf:"varint,9,opt,name=preRelease,proto3" json:"preRelease,omitempty"`
	IsTag        bool         `protobuf:"varint,10,opt,name=isTag,proto3" json:"isTag,omitempty"`
	Provider     string       `protobuf:"bytes,11,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgCreateRelease) Reset()         { *m = MsgCreateRelease{} }
func (m *MsgCreateRelease) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRelease) ProtoMessage()    {}
func (*MsgCreateRelease) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{41}
}
func (m *MsgCreateRelease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRelease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRelease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRelease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRelease.Merge(m, src)
}
func (m *MsgCreateRelease) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRelease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRelease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRelease proto.InternalMessageInfo

func (m *MsgCreateRelease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateRelease) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgCreateRelease) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

func (m *MsgCreateRelease) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *MsgCreateRelease) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateRelease) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreateRelease) GetAttachments() string {
	if m != nil {
		return m.Attachments
	}
	return ""
}

func (m *MsgCreateRelease) GetDraft() bool {
	if m != nil {
		return m.Draft
	}
	return false
}

func (m *MsgCreateRelease) GetPreRelease() bool {
	if m != nil {
		return m.PreRelease
	}
	return false
}

func (m *MsgCreateRelease) GetIsTag() bool {
	if m != nil {
		return m.IsTag
	}
	return false
}

func (m *MsgCreateRelease) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgCreateReleaseResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateReleaseResponse) Reset()         { *m = MsgCreateReleaseResponse{} }
func (m *MsgCreateReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateReleaseResponse) ProtoMessage()    {}
func (*MsgCreateReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{42}
}
func (m *MsgCreateReleaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateReleaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateReleaseResponse.Merge(m, src)
}
func (m *MsgCreateReleaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateReleaseResponse proto.InternalMessageInfo

func (m *MsgCreateReleaseResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateRelease struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id          uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	TagName     string `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	Target      string `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Name        string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Attachments string `protobuf:"bytes,7,opt,name=attachments,proto3" json:"attachments,omitempty"`
	Draft       bool   `protobuf:"varint,8,opt,name=draft,proto3" json:"draft,omitempty"`
	PreRelease  bool   `protobuf:"varint,9,opt,name=preRelease,proto3" json:"preRelease,omitempty"`
	IsTag       bool   `protobuf:"varint,10,opt,name=isTag,proto3" json:"isTag,omitempty"`
	Provider    string `protobuf:"bytes,11,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgUpdateRelease) Reset()         { *m = MsgUpdateRelease{} }
func (m *MsgUpdateRelease) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRelease) ProtoMessage()    {}
func (*MsgUpdateRelease) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{43}
}
func (m *MsgUpdateRelease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRelease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRelease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRelease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRelease.Merge(m, src)
}
func (m *MsgUpdateRelease) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRelease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRelease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRelease proto.InternalMessageInfo

func (m *MsgUpdateRelease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRelease) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgUpdateRelease) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

func (m *MsgUpdateRelease) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *MsgUpdateRelease) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateRelease) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgUpdateRelease) GetAttachments() string {
	if m != nil {
		return m.Attachments
	}
	return ""
}

func (m *MsgUpdateRelease) GetDraft() bool {
	if m != nil {
		return m.Draft
	}
	return false
}

func (m *MsgUpdateRelease) GetPreRelease() bool {
	if m != nil {
		return m.PreRelease
	}
	return false
}

func (m *MsgUpdateRelease) GetIsTag() bool {
	if m != nil {
		return m.IsTag
	}
	return false
}

func (m *MsgUpdateRelease) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgUpdateReleaseResponse struct {
}

func (m *MsgUpdateReleaseResponse) Reset()         { *m = MsgUpdateReleaseResponse{} }
func (m *MsgUpdateReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateReleaseResponse) ProtoMessage()    {}
func (*MsgUpdateReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{44}
}
func (m *MsgUpdateReleaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateReleaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateReleaseResponse.Merge(m, src)
}
func (m *MsgUpdateReleaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateReleaseResponse proto.InternalMessageInfo

type MsgDeleteRelease struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id       uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Provider string `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgDeleteRelease) Reset()         { *m = MsgDeleteRelease{} }
func (m *MsgDeleteRelease) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRelease) ProtoMessage()    {}
func (*MsgDeleteRelease) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{45}
}
func (m *MsgDeleteRelease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRelease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRelease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRelease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRelease.Merge(m, src)
}
func (m *MsgDeleteRelease) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRelease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRelease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRelease proto.InternalMessageInfo

func (m *MsgDeleteRelease) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteRelease) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgDeleteRelease) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgDeleteReleaseResponse struct {
}

func (m *MsgDeleteReleaseResponse) Reset()         { *m = MsgDeleteReleaseResponse{} }
func (m *MsgDeleteReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteReleaseResponse) ProtoMessage()    {}
func (*MsgDeleteReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{46}
}
func (m *MsgDeleteReleaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteReleaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteReleaseResponse.Merge(m, src)
}
func (m *MsgDeleteReleaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteReleaseResponse proto.InternalMessageInfo

type MsgCreatePullRequest struct {
	Creator          string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Title            string       `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description      string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	HeadBranch       string       `protobuf:"bytes,4,opt,name=headBranch,proto3" json:"headBranch,omitempty"`
	HeadRepositoryId RepositoryId `protobuf:"bytes,5,opt,name=headRepositoryId,proto3" json:"headRepositoryId"`
	BaseBranch       string       `protobuf:"bytes,6,opt,name=baseBranch,proto3" json:"baseBranch,omitempty"`
	BaseRepositoryId RepositoryId `protobuf:"bytes,7,opt,name=baseRepositoryId,proto3" json:"baseRepositoryId"`
	Reviewers        []string     `protobuf:"bytes,8,rep,name=reviewers,proto3" json:"reviewers,omitempty"`
	Assignees        []string     `protobuf:"bytes,9,rep,name=assignees,proto3" json:"assignees,omitempty"`
	LabelIds         []uint64     `protobuf:"varint,10,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
	IssueIids        []uint64     `protobuf:"varint,11,rep,packed,name=issueIids,proto3" json:"issueIids,omitempty"`
}

func (m *MsgCreatePullRequest) Reset()         { *m = MsgCreatePullRequest{} }
func (m *MsgCreatePullRequest) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePullRequest) ProtoMessage()    {}
func (*MsgCreatePullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{47}
}
func (m *MsgCreatePullRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePullRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePullRequest.Merge(m, src)
}
func (m *MsgCreatePullRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePullRequest proto.InternalMessageInfo

func (m *MsgCreatePullRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreatePullRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgCreatePullRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreatePullRequest) GetHeadBranch() string {
	if m != nil {
		return m.HeadBranch
	}
	return ""
}

func (m *MsgCreatePullRequest) GetHeadRepositoryId() RepositoryId {
	if m != nil {
		return m.HeadRepositoryId
	}
	return RepositoryId{}
}

func (m *MsgCreatePullRequest) GetBaseBranch() string {
	if m != nil {
		return m.BaseBranch
	}
	return ""
}

func (m *MsgCreatePullRequest) GetBaseRepositoryId() RepositoryId {
	if m != nil {
		return m.BaseRepositoryId
	}
	return RepositoryId{}
}

func (m *MsgCreatePullRequest) GetReviewers() []string {
	if m != nil {
		return m.Reviewers
	}
	return nil
}

func (m *MsgCreatePullRequest) GetAssignees() []string {
	if m != nil {
		return m.Assignees
	}
	return nil
}

func (m *MsgCreatePullRequest) GetLabelIds() []uint64 {
	if m != nil {
		return m.LabelIds
	}
	return nil
}

func (m *MsgCreatePullRequest) GetIssueIids() []uint64 {
	if m != nil {
		return m.IssueIids
	}
	return nil
}

type MsgCreatePullRequestResponse struct {
	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid uint64 `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (m *MsgCreatePullRequestResponse) Reset()         { *m = MsgCreatePullRequestResponse{} }
func (m *MsgCreatePullRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreatePullRequestResponse) ProtoMessage()    {}
func (*MsgCreatePullRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{48}
}
func (m *MsgCreatePullRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreatePullRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreatePullRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreatePullRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreatePullRequestResponse.Merge(m, src)
}
func (m *MsgCreatePullRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreatePullRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreatePullRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreatePullRequestResponse proto.InternalMessageInfo

func (m *MsgCreatePullRequestResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgCreatePullRequestResponse) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

type MsgUpdatePullRequestTitle struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (m *MsgUpdatePullRequestTitle) Reset()         { *m = MsgUpdatePullRequestTitle{} }
func (m *MsgUpdatePullRequestTitle) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePullRequestTitle) ProtoMessage()    {}
func (*MsgUpdatePullRequestTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{49}
}
func (m *MsgUpdatePullRequestTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePullRequestTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePullRequestTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePullRequestTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePullRequestTitle.Merge(m, src)
}
func (m *MsgUpdatePullRequestTitle) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePullRequestTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePullRequestTitle.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePullRequestTitle proto.InternalMessageInfo

func (m *MsgUpdatePullRequestTitle) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePullRequestTitle) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdatePullRequestTitle) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgUpdatePullRequestTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type MsgUpdatePullRequestTitleResponse struct {
}

func (m *MsgUpdatePullRequestTitleResponse) Reset()         { *m = MsgUpdatePullRequestTitleResponse{} }
func (m *MsgUpdatePullRequestTitleResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePullRequestTitleResponse) ProtoMessage()    {}
func (*MsgUpdatePullRequestTitleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{50}
}
func (m *MsgUpdatePullRequestTitleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePullRequestTitleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePullRequestTitleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePullRequestTitleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePullRequestTitleResponse.Merge(m, src)
}
func (m *MsgUpdatePullRequestTitleResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePullRequestTitleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePullRequestTitleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePullRequestTitleResponse proto.InternalMessageInfo

type MsgUpdatePullRequestDescription struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgUpdatePullRequestDescription) Reset()         { *m = MsgUpdatePullRequestDescription{} }
func (m *MsgUpdatePullRequestDescription) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePullRequestDescription) ProtoMessage()    {}
func (*MsgUpdatePullRequestDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{51}
}
func (m *MsgUpdatePullRequestDescription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePullRequestDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePullRequestDescription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePullRequestDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePullRequestDescription.Merge(m, src)
}
func (m *MsgUpdatePullRequestDescription) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePullRequestDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePullRequestDescription.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePullRequestDescription proto.InternalMessageInfo

func (m *MsgUpdatePullRequestDescription) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdatePullRequestDescription) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdatePullRequestDescription) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgUpdatePullRequestDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgUpdatePullRequestDescriptionResponse struct {
}

func (m *MsgUpdatePullRequestDescriptionResponse) Reset() {
	*m = MsgUpdatePullRequestDescriptionResponse{}
}
func (m *MsgUpdatePullRequestDescriptionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdatePullRequestDescriptionResponse) ProtoMessage()    {}
func (*MsgUpdatePullRequestDescriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{52}
}
func (m *MsgUpdatePullRequestDescriptionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdatePullRequestDescriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdatePullRequestDescriptionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdatePullRequestDescriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdatePullRequestDescriptionResponse.Merge(m, src)
}
func (m *MsgUpdatePullRequestDescriptionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdatePullRequestDescriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdatePullRequestDescriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdatePullRequestDescriptionResponse proto.InternalMessageInfo

type MsgInvokeMergePullRequest struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Provider     string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgInvokeMergePullRequest) Reset()         { *m = MsgInvokeMergePullRequest{} }
func (m *MsgInvokeMergePullRequest) String() string { return proto.CompactTextString(m) }
func (*MsgInvokeMergePullRequest) ProtoMessage()    {}
func (*MsgInvokeMergePullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{53}
}
func (m *MsgInvokeMergePullRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInvokeMergePullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInvokeMergePullRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInvokeMergePullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInvokeMergePullRequest.Merge(m, src)
}
func (m *MsgInvokeMergePullRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgInvokeMergePullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInvokeMergePullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInvokeMergePullRequest proto.InternalMessageInfo

func (m *MsgInvokeMergePullRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgInvokeMergePullRequest) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgInvokeMergePullRequest) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgInvokeMergePullRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgInvokeMergePullRequestResponse struct {
}

func (m *MsgInvokeMergePullRequestResponse) Reset()         { *m = MsgInvokeMergePullRequestResponse{} }
func (m *MsgInvokeMergePullRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInvokeMergePullRequestResponse) ProtoMessage()    {}
func (*MsgInvokeMergePullRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{54}
}
func (m *MsgInvokeMergePullRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInvokeMergePullRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInvokeMergePullRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInvokeMergePullRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInvokeMergePullRequestResponse.Merge(m, src)
}
func (m *MsgInvokeMergePullRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInvokeMergePullRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInvokeMergePullRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInvokeMergePullRequestResponse proto.InternalMessageInfo

type MsgInvokeDaoMergePullRequest struct {
	// admin is the account address of the group admin
	Admin        string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Provider     string `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgInvokeDaoMergePullRequest) Reset()         { *m = MsgInvokeDaoMergePullRequest{} }
func (m *MsgInvokeDaoMergePullRequest) String() string { return proto.CompactTextString(m) }
func (*MsgInvokeDaoMergePullRequest) ProtoMessage()    {}
func (*MsgInvokeDaoMergePullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{55}
}
func (m *MsgInvokeDaoMergePullRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInvokeDaoMergePullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInvokeDaoMergePullRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInvokeDaoMergePullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInvokeDaoMergePullRequest.Merge(m, src)
}
func (m *MsgInvokeDaoMergePullRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgInvokeDaoMergePullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInvokeDaoMergePullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInvokeDaoMergePullRequest proto.InternalMessageInfo

func (m *MsgInvokeDaoMergePullRequest) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgInvokeDaoMergePullRequest) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgInvokeDaoMergePullRequest) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgInvokeDaoMergePullRequest) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgInvokeDaoMergePullRequestResponse struct {
}

func (m *MsgInvokeDaoMergePullRequestResponse) Reset()         { *m = MsgInvokeDaoMergePullRequestResponse{} }
func (m *MsgInvokeDaoMergePullRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgInvokeDaoMergePullRequestResponse) ProtoMessage()    {}
func (*MsgInvokeDaoMergePullRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{56}
}
func (m *MsgInvokeDaoMergePullRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgInvokeDaoMergePullRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgInvokeDaoMergePullRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgInvokeDaoMergePullRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgInvokeDaoMergePullRequestResponse.Merge(m, src)
}
func (m *MsgInvokeDaoMergePullRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgInvokeDaoMergePullRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgInvokeDaoMergePullRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgInvokeDaoMergePullRequestResponse proto.InternalMessageInfo

type MsgSetPullRequestState struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId   uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid            uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	State          string `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	MergeCommitSha string `protobuf:"bytes,5,opt,name=mergeCommitSha,proto3" json:"mergeCommitSha,omitempty"`
	CommentBody    string `protobuf:"bytes,6,opt,name=commentBody,proto3" json:"commentBody,omitempty"`
	TaskId         uint64 `protobuf:"varint,7,opt,name=taskId,proto3" json:"taskId,omitempty"`
}

func (m *MsgSetPullRequestState) Reset()         { *m = MsgSetPullRequestState{} }
func (m *MsgSetPullRequestState) String() string { return proto.CompactTextString(m) }
func (*MsgSetPullRequestState) ProtoMessage()    {}
func (*MsgSetPullRequestState) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{57}
}
func (m *MsgSetPullRequestState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPullRequestState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPullRequestState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPullRequestState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPullRequestState.Merge(m, src)
}
func (m *MsgSetPullRequestState) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPullRequestState) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPullRequestState.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPullRequestState proto.InternalMessageInfo

func (m *MsgSetPullRequestState) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgSetPullRequestState) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgSetPullRequestState) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgSetPullRequestState) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *MsgSetPullRequestState) GetMergeCommitSha() string {
	if m != nil {
		return m.MergeCommitSha
	}
	return ""
}

func (m *MsgSetPullRequestState) GetCommentBody() string {
	if m != nil {
		return m.CommentBody
	}
	return ""
}

func (m *MsgSetPullRequestState) GetTaskId() uint64 {
	if m != nil {
		return m.TaskId
	}
	return 0
}

type MsgSetPullRequestStateResponse struct {
	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (m *MsgSetPullRequestStateResponse) Reset()         { *m = MsgSetPullRequestStateResponse{} }
func (m *MsgSetPullRequestStateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgSetPullRequestStateResponse) ProtoMessage()    {}
func (*MsgSetPullRequestStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{58}
}
func (m *MsgSetPullRequestStateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgSetPullRequestStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgSetPullRequestStateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgSetPullRequestStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgSetPullRequestStateResponse.Merge(m, src)
}
func (m *MsgSetPullRequestStateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgSetPullRequestStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgSetPullRequestStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgSetPullRequestStateResponse proto.InternalMessageInfo

func (m *MsgSetPullRequestStateResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type MsgAddPullRequestReviewers struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Reviewers    []string `protobuf:"bytes,4,rep,name=reviewers,proto3" json:"reviewers,omitempty"`
}

func (m *MsgAddPullRequestReviewers) Reset()         { *m = MsgAddPullRequestReviewers{} }
func (m *MsgAddPullRequestReviewers) String() string { return proto.CompactTextString(m) }
func (*MsgAddPullRequestReviewers) ProtoMessage()    {}
func (*MsgAddPullRequestReviewers) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{59}
}
func (m *MsgAddPullRequestReviewers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPullRequestReviewers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPullRequestReviewers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPullRequestReviewers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPullRequestReviewers.Merge(m, src)
}
func (m *MsgAddPullRequestReviewers) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPullRequestReviewers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPullRequestReviewers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPullRequestReviewers proto.InternalMessageInfo

func (m *MsgAddPullRequestReviewers) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddPullRequestReviewers) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgAddPullRequestReviewers) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgAddPullRequestReviewers) GetReviewers() []string {
	if m != nil {
		return m.Reviewers
	}
	return nil
}

type MsgAddPullRequestReviewersResponse struct {
}

func (m *MsgAddPullRequestReviewersResponse) Reset()         { *m = MsgAddPullRequestReviewersResponse{} }
func (m *MsgAddPullRequestReviewersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddPullRequestReviewersResponse) ProtoMessage()    {}
func (*MsgAddPullRequestReviewersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{60}
}
func (m *MsgAddPullRequestReviewersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPullRequestReviewersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPullRequestReviewersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPullRequestReviewersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPullRequestReviewersResponse.Merge(m, src)
}
func (m *MsgAddPullRequestReviewersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPullRequestReviewersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPullRequestReviewersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPullRequestReviewersResponse proto.InternalMessageInfo

type MsgRemovePullRequestReviewers struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Reviewers    []string `protobuf:"bytes,4,rep,name=reviewers,proto3" json:"reviewers,omitempty"`
}

func (m *MsgRemovePullRequestReviewers) Reset()         { *m = MsgRemovePullRequestReviewers{} }
func (m *MsgRemovePullRequestReviewers) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePullRequestReviewers) ProtoMessage()    {}
func (*MsgRemovePullRequestReviewers) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{61}
}
func (m *MsgRemovePullRequestReviewers) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePullRequestReviewers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePullRequestReviewers.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePullRequestReviewers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePullRequestReviewers.Merge(m, src)
}
func (m *MsgRemovePullRequestReviewers) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePullRequestReviewers) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePullRequestReviewers.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePullRequestReviewers proto.InternalMessageInfo

func (m *MsgRemovePullRequestReviewers) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemovePullRequestReviewers) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgRemovePullRequestReviewers) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgRemovePullRequestReviewers) GetReviewers() []string {
	if m != nil {
		return m.Reviewers
	}
	return nil
}

type MsgRemovePullRequestReviewersResponse struct {
}

func (m *MsgRemovePullRequestReviewersResponse) Reset()         { *m = MsgRemovePullRequestReviewersResponse{} }
func (m *MsgRemovePullRequestReviewersResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePullRequestReviewersResponse) ProtoMessage()    {}
func (*MsgRemovePullRequestReviewersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{62}
}
func (m *MsgRemovePullRequestReviewersResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePullRequestReviewersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePullRequestReviewersResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePullRequestReviewersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePullRequestReviewersResponse.Merge(m, src)
}
func (m *MsgRemovePullRequestReviewersResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePullRequestReviewersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePullRequestReviewersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePullRequestReviewersResponse proto.InternalMessageInfo

type MsgAddPullRequestAssignees struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Assignees    []string `protobuf:"bytes,4,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (m *MsgAddPullRequestAssignees) Reset()         { *m = MsgAddPullRequestAssignees{} }
func (m *MsgAddPullRequestAssignees) String() string { return proto.CompactTextString(m) }
func (*MsgAddPullRequestAssignees) ProtoMessage()    {}
func (*MsgAddPullRequestAssignees) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{63}
}
func (m *MsgAddPullRequestAssignees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPullRequestAssignees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPullRequestAssignees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPullRequestAssignees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPullRequestAssignees.Merge(m, src)
}
func (m *MsgAddPullRequestAssignees) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPullRequestAssignees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPullRequestAssignees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPullRequestAssignees proto.InternalMessageInfo

func (m *MsgAddPullRequestAssignees) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddPullRequestAssignees) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgAddPullRequestAssignees) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgAddPullRequestAssignees) GetAssignees() []string {
	if m != nil {
		return m.Assignees
	}
	return nil
}

type MsgAddPullRequestAssigneesResponse struct {
}

func (m *MsgAddPullRequestAssigneesResponse) Reset()         { *m = MsgAddPullRequestAssigneesResponse{} }
func (m *MsgAddPullRequestAssigneesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddPullRequestAssigneesResponse) ProtoMessage()    {}
func (*MsgAddPullRequestAssigneesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{64}
}
func (m *MsgAddPullRequestAssigneesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPullRequestAssigneesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPullRequestAssigneesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPullRequestAssigneesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPullRequestAssigneesResponse.Merge(m, src)
}
func (m *MsgAddPullRequestAssigneesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPullRequestAssigneesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPullRequestAssigneesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPullRequestAssigneesResponse proto.InternalMessageInfo

type MsgRemovePullRequestAssignees struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Assignees    []string `protobuf:"bytes,4,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (m *MsgRemovePullRequestAssignees) Reset()         { *m = MsgRemovePullRequestAssignees{} }
func (m *MsgRemovePullRequestAssignees) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePullRequestAssignees) ProtoMessage()    {}
func (*MsgRemovePullRequestAssignees) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{65}
}
func (m *MsgRemovePullRequestAssignees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePullRequestAssignees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePullRequestAssignees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePullRequestAssignees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePullRequestAssignees.Merge(m, src)
}
func (m *MsgRemovePullRequestAssignees) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePullRequestAssignees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePullRequestAssignees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePullRequestAssignees proto.InternalMessageInfo

func (m *MsgRemovePullRequestAssignees) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemovePullRequestAssignees) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgRemovePullRequestAssignees) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgRemovePullRequestAssignees) GetAssignees() []string {
	if m != nil {
		return m.Assignees
	}
	return nil
}

type MsgRemovePullRequestAssigneesResponse struct {
}

func (m *MsgRemovePullRequestAssigneesResponse) Reset()         { *m = MsgRemovePullRequestAssigneesResponse{} }
func (m *MsgRemovePullRequestAssigneesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePullRequestAssigneesResponse) ProtoMessage()    {}
func (*MsgRemovePullRequestAssigneesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{66}
}
func (m *MsgRemovePullRequestAssigneesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePullRequestAssigneesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePullRequestAssigneesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePullRequestAssigneesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePullRequestAssigneesResponse.Merge(m, src)
}
func (m *MsgRemovePullRequestAssigneesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePullRequestAssigneesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePullRequestAssigneesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePullRequestAssigneesResponse proto.InternalMessageInfo

type MsgLinkPullRequestIssueByIid struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId   uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	PullRequestIid uint64 `protobuf:"varint,3,opt,name=pullRequestIid,proto3" json:"pullRequestIid,omitempty"`
	IssueIid       uint64 `protobuf:"varint,4,opt,name=issueIid,proto3" json:"issueIid,omitempty"`
}

func (m *MsgLinkPullRequestIssueByIid) Reset()         { *m = MsgLinkPullRequestIssueByIid{} }
func (m *MsgLinkPullRequestIssueByIid) String() string { return proto.CompactTextString(m) }
func (*MsgLinkPullRequestIssueByIid) ProtoMessage()    {}
func (*MsgLinkPullRequestIssueByIid) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{67}
}
func (m *MsgLinkPullRequestIssueByIid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLinkPullRequestIssueByIid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLinkPullRequestIssueByIid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLinkPullRequestIssueByIid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLinkPullRequestIssueByIid.Merge(m, src)
}
func (m *MsgLinkPullRequestIssueByIid) XXX_Size() int {
	return m.Size()
}
func (m *MsgLinkPullRequestIssueByIid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLinkPullRequestIssueByIid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLinkPullRequestIssueByIid proto.InternalMessageInfo

func (m *MsgLinkPullRequestIssueByIid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgLinkPullRequestIssueByIid) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgLinkPullRequestIssueByIid) GetPullRequestIid() uint64 {
	if m != nil {
		return m.PullRequestIid
	}
	return 0
}

func (m *MsgLinkPullRequestIssueByIid) GetIssueIid() uint64 {
	if m != nil {
		return m.IssueIid
	}
	return 0
}

type MsgLinkPullRequestIssueByIidResponse struct {
}

func (m *MsgLinkPullRequestIssueByIidResponse) Reset()         { *m = MsgLinkPullRequestIssueByIidResponse{} }
func (m *MsgLinkPullRequestIssueByIidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgLinkPullRequestIssueByIidResponse) ProtoMessage()    {}
func (*MsgLinkPullRequestIssueByIidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{68}
}
func (m *MsgLinkPullRequestIssueByIidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgLinkPullRequestIssueByIidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgLinkPullRequestIssueByIidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgLinkPullRequestIssueByIidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgLinkPullRequestIssueByIidResponse.Merge(m, src)
}
func (m *MsgLinkPullRequestIssueByIidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgLinkPullRequestIssueByIidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgLinkPullRequestIssueByIidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgLinkPullRequestIssueByIidResponse proto.InternalMessageInfo

type MsgUnlinkPullRequestIssueByIid struct {
	Creator        string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId   uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	PullRequestIid uint64 `protobuf:"varint,3,opt,name=pullRequestIid,proto3" json:"pullRequestIid,omitempty"`
	IssueIid       uint64 `protobuf:"varint,4,opt,name=issueIid,proto3" json:"issueIid,omitempty"`
}

func (m *MsgUnlinkPullRequestIssueByIid) Reset()         { *m = MsgUnlinkPullRequestIssueByIid{} }
func (m *MsgUnlinkPullRequestIssueByIid) String() string { return proto.CompactTextString(m) }
func (*MsgUnlinkPullRequestIssueByIid) ProtoMessage()    {}
func (*MsgUnlinkPullRequestIssueByIid) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{69}
}
func (m *MsgUnlinkPullRequestIssueByIid) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnlinkPullRequestIssueByIid) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnlinkPullRequestIssueByIid.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnlinkPullRequestIssueByIid) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnlinkPullRequestIssueByIid.Merge(m, src)
}
func (m *MsgUnlinkPullRequestIssueByIid) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnlinkPullRequestIssueByIid) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnlinkPullRequestIssueByIid.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnlinkPullRequestIssueByIid proto.InternalMessageInfo

func (m *MsgUnlinkPullRequestIssueByIid) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUnlinkPullRequestIssueByIid) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUnlinkPullRequestIssueByIid) GetPullRequestIid() uint64 {
	if m != nil {
		return m.PullRequestIid
	}
	return 0
}

func (m *MsgUnlinkPullRequestIssueByIid) GetIssueIid() uint64 {
	if m != nil {
		return m.IssueIid
	}
	return 0
}

type MsgUnlinkPullRequestIssueByIidResponse struct {
}

func (m *MsgUnlinkPullRequestIssueByIidResponse) Reset() {
	*m = MsgUnlinkPullRequestIssueByIidResponse{}
}
func (m *MsgUnlinkPullRequestIssueByIidResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUnlinkPullRequestIssueByIidResponse) ProtoMessage()    {}
func (*MsgUnlinkPullRequestIssueByIidResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{70}
}
func (m *MsgUnlinkPullRequestIssueByIidResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUnlinkPullRequestIssueByIidResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUnlinkPullRequestIssueByIidResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUnlinkPullRequestIssueByIidResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUnlinkPullRequestIssueByIidResponse.Merge(m, src)
}
func (m *MsgUnlinkPullRequestIssueByIidResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUnlinkPullRequestIssueByIidResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUnlinkPullRequestIssueByIidResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUnlinkPullRequestIssueByIidResponse proto.InternalMessageInfo

type MsgAddPullRequestLabels struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	LabelIds     []uint64 `protobuf:"varint,4,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (m *MsgAddPullRequestLabels) Reset()         { *m = MsgAddPullRequestLabels{} }
func (m *MsgAddPullRequestLabels) String() string { return proto.CompactTextString(m) }
func (*MsgAddPullRequestLabels) ProtoMessage()    {}
func (*MsgAddPullRequestLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{71}
}
func (m *MsgAddPullRequestLabels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPullRequestLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPullRequestLabels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPullRequestLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPullRequestLabels.Merge(m, src)
}
func (m *MsgAddPullRequestLabels) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPullRequestLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPullRequestLabels.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPullRequestLabels proto.InternalMessageInfo

func (m *MsgAddPullRequestLabels) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddPullRequestLabels) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgAddPullRequestLabels) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgAddPullRequestLabels) GetLabelIds() []uint64 {
	if m != nil {
		return m.LabelIds
	}
	return nil
}

type MsgAddPullRequestLabelsResponse struct {
}

func (m *MsgAddPullRequestLabelsResponse) Reset()         { *m = MsgAddPullRequestLabelsResponse{} }
func (m *MsgAddPullRequestLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddPullRequestLabelsResponse) ProtoMessage()    {}
func (*MsgAddPullRequestLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{72}
}
func (m *MsgAddPullRequestLabelsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddPullRequestLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddPullRequestLabelsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddPullRequestLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddPullRequestLabelsResponse.Merge(m, src)
}
func (m *MsgAddPullRequestLabelsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddPullRequestLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddPullRequestLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddPullRequestLabelsResponse proto.InternalMessageInfo

type MsgRemovePullRequestLabels struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	LabelIds     []uint64 `protobuf:"varint,4,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (m *MsgRemovePullRequestLabels) Reset()         { *m = MsgRemovePullRequestLabels{} }
func (m *MsgRemovePullRequestLabels) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePullRequestLabels) ProtoMessage()    {}
func (*MsgRemovePullRequestLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{73}
}
func (m *MsgRemovePullRequestLabels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePullRequestLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePullRequestLabels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePullRequestLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePullRequestLabels.Merge(m, src)
}
func (m *MsgRemovePullRequestLabels) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePullRequestLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePullRequestLabels.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePullRequestLabels proto.InternalMessageInfo

func (m *MsgRemovePullRequestLabels) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemovePullRequestLabels) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgRemovePullRequestLabels) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgRemovePullRequestLabels) GetLabelIds() []uint64 {
	if m != nil {
		return m.LabelIds
	}
	return nil
}

type MsgRemovePullRequestLabelsResponse struct {
}

func (m *MsgRemovePullRequestLabelsResponse) Reset()         { *m = MsgRemovePullRequestLabelsResponse{} }
func (m *MsgRemovePullRequestLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemovePullRequestLabelsResponse) ProtoMessage()    {}
func (*MsgRemovePullRequestLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{74}
}
func (m *MsgRemovePullRequestLabelsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemovePullRequestLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemovePullRequestLabelsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemovePullRequestLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemovePullRequestLabelsResponse.Merge(m, src)
}
func (m *MsgRemovePullRequestLabelsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemovePullRequestLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemovePullRequestLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemovePullRequestLabelsResponse proto.InternalMessageInfo

type MsgDeletePullRequest struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (m *MsgDeletePullRequest) Reset()         { *m = MsgDeletePullRequest{} }
func (m *MsgDeletePullRequest) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePullRequest) ProtoMessage()    {}
func (*MsgDeletePullRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{75}
}
func (m *MsgDeletePullRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePullRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePullRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePullRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePullRequest.Merge(m, src)
}
func (m *MsgDeletePullRequest) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePullRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePullRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePullRequest proto.InternalMessageInfo

func (m *MsgDeletePullRequest) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeletePullRequest) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgDeletePullRequest) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

type MsgDeletePullRequestResponse struct {
}

func (m *MsgDeletePullRequestResponse) Reset()         { *m = MsgDeletePullRequestResponse{} }
func (m *MsgDeletePullRequestResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeletePullRequestResponse) ProtoMessage()    {}
func (*MsgDeletePullRequestResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{76}
}
func (m *MsgDeletePullRequestResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeletePullRequestResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeletePullRequestResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeletePullRequestResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeletePullRequestResponse.Merge(m, src)
}
func (m *MsgDeletePullRequestResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeletePullRequestResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeletePullRequestResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeletePullRequestResponse proto.InternalMessageInfo

type MsgCreateDao struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	AvatarUrl   string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Location    string `protobuf:"bytes,5,opt,name=location,proto3" json:"location,omitempty"`
	Website     string `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`
	// members defines the group members.
	Members []group.MemberRequest `protobuf:"bytes,7,rep,name=members,proto3" json:"members"`
	// voting_period defines the voting period of the dao in hours.
	VotingPeriod string `protobuf:"bytes,8,opt,name=voting_period,json=votingPeriod,proto3" json:"voting_period,omitempty"`
	// percentage is the minimum percentage of the weighted sum of `YES` votes must
	// meet for a proposal to succeed.
	Percentage string     `protobuf:"bytes,9,opt,name=percentage,proto3" json:"percentage,omitempty"`
	Config     *DaoConfig `protobuf:"bytes,10,opt,name=config,proto3" json:"config,omitempty"`
}

func (m *MsgCreateDao) Reset()         { *m = MsgCreateDao{} }
func (m *MsgCreateDao) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDao) ProtoMessage()    {}
func (*MsgCreateDao) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{77}
}
func (m *MsgCreateDao) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDao) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDao.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDao) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDao.Merge(m, src)
}
func (m *MsgCreateDao) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDao) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDao.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDao proto.InternalMessageInfo

func (m *MsgCreateDao) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateDao) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateDao) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreateDao) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *MsgCreateDao) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MsgCreateDao) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *MsgCreateDao) GetMembers() []group.MemberRequest {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *MsgCreateDao) GetVotingPeriod() string {
	if m != nil {
		return m.VotingPeriod
	}
	return ""
}

func (m *MsgCreateDao) GetPercentage() string {
	if m != nil {
		return m.Percentage
	}
	return ""
}

func (m *MsgCreateDao) GetConfig() *DaoConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

type MsgCreateDaoResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateDaoResponse) Reset()         { *m = MsgCreateDaoResponse{} }
func (m *MsgCreateDaoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateDaoResponse) ProtoMessage()    {}
func (*MsgCreateDaoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{78}
}
func (m *MsgCreateDaoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateDaoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateDaoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateDaoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateDaoResponse.Merge(m, src)
}
func (m *MsgCreateDaoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateDaoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateDaoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateDaoResponse proto.InternalMessageInfo

func (m *MsgCreateDaoResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MsgRenameDao struct {
	// admin is the account address of the group admin.
	Admin string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name  string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgRenameDao) Reset()         { *m = MsgRenameDao{} }
func (m *MsgRenameDao) String() string { return proto.CompactTextString(m) }
func (*MsgRenameDao) ProtoMessage()    {}
func (*MsgRenameDao) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{79}
}
func (m *MsgRenameDao) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenameDao) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenameDao.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenameDao) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenameDao.Merge(m, src)
}
func (m *MsgRenameDao) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenameDao) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenameDao.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenameDao proto.InternalMessageInfo

func (m *MsgRenameDao) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgRenameDao) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgRenameDao) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgRenameDaoResponse struct {
}

func (m *MsgRenameDaoResponse) Reset()         { *m = MsgRenameDaoResponse{} }
func (m *MsgRenameDaoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRenameDaoResponse) ProtoMessage()    {}
func (*MsgRenameDaoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{80}
}
func (m *MsgRenameDaoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenameDaoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenameDaoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenameDaoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenameDaoResponse.Merge(m, src)
}
func (m *MsgRenameDaoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenameDaoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenameDaoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenameDaoResponse proto.InternalMessageInfo

type MsgUpdateDaoDescription struct {
	// admin is the account address of the group admin.
	Admin       string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgUpdateDaoDescription) Reset()         { *m = MsgUpdateDaoDescription{} }
func (m *MsgUpdateDaoDescription) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoDescription) ProtoMessage()    {}
func (*MsgUpdateDaoDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{81}
}
func (m *MsgUpdateDaoDescription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoDescription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoDescription.Merge(m, src)
}
func (m *MsgUpdateDaoDescription) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoDescription.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoDescription proto.InternalMessageInfo

func (m *MsgUpdateDaoDescription) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateDaoDescription) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgUpdateDaoDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgUpdateDaoDescriptionResponse struct {
}

func (m *MsgUpdateDaoDescriptionResponse) Reset()         { *m = MsgUpdateDaoDescriptionResponse{} }
func (m *MsgUpdateDaoDescriptionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoDescriptionResponse) ProtoMessage()    {}
func (*MsgUpdateDaoDescriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{82}
}
func (m *MsgUpdateDaoDescriptionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoDescriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoDescriptionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoDescriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoDescriptionResponse.Merge(m, src)
}
func (m *MsgUpdateDaoDescriptionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoDescriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoDescriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoDescriptionResponse proto.InternalMessageInfo

type MsgUpdateDaoWebsite struct {
	// admin is the account address of the group admin.
	Admin string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Url   string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (m *MsgUpdateDaoWebsite) Reset()         { *m = MsgUpdateDaoWebsite{} }
func (m *MsgUpdateDaoWebsite) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoWebsite) ProtoMessage()    {}
func (*MsgUpdateDaoWebsite) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{83}
}
func (m *MsgUpdateDaoWebsite) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoWebsite) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoWebsite.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoWebsite) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoWebsite.Merge(m, src)
}
func (m *MsgUpdateDaoWebsite) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoWebsite) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoWebsite.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoWebsite proto.InternalMessageInfo

func (m *MsgUpdateDaoWebsite) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateDaoWebsite) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgUpdateDaoWebsite) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type MsgUpdateDaoWebsiteResponse struct {
}

func (m *MsgUpdateDaoWebsiteResponse) Reset()         { *m = MsgUpdateDaoWebsiteResponse{} }
func (m *MsgUpdateDaoWebsiteResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoWebsiteResponse) ProtoMessage()    {}
func (*MsgUpdateDaoWebsiteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{84}
}
func (m *MsgUpdateDaoWebsiteResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoWebsiteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoWebsiteResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoWebsiteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoWebsiteResponse.Merge(m, src)
}
func (m *MsgUpdateDaoWebsiteResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoWebsiteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoWebsiteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoWebsiteResponse proto.InternalMessageInfo

type MsgUpdateDaoLocation struct {
	// admin is the account address of the group admin.
	Admin    string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Id       string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (m *MsgUpdateDaoLocation) Reset()         { *m = MsgUpdateDaoLocation{} }
func (m *MsgUpdateDaoLocation) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoLocation) ProtoMessage()    {}
func (*MsgUpdateDaoLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{85}
}
func (m *MsgUpdateDaoLocation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoLocation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoLocation.Merge(m, src)
}
func (m *MsgUpdateDaoLocation) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoLocation.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoLocation proto.InternalMessageInfo

func (m *MsgUpdateDaoLocation) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateDaoLocation) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgUpdateDaoLocation) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

type MsgUpdateDaoLocationResponse struct {
}

func (m *MsgUpdateDaoLocationResponse) Reset()         { *m = MsgUpdateDaoLocationResponse{} }
func (m *MsgUpdateDaoLocationResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoLocationResponse) ProtoMessage()    {}
func (*MsgUpdateDaoLocationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{86}
}
func (m *MsgUpdateDaoLocationResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoLocationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoLocationResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoLocationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoLocationResponse.Merge(m, src)
}
func (m *MsgUpdateDaoLocationResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoLocationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoLocationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoLocationResponse proto.InternalMessageInfo

type MsgUpdateDaoAvatar struct {
	// admin is the account address of the group admin.
	Admin string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Url   string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (m *MsgUpdateDaoAvatar) Reset()         { *m = MsgUpdateDaoAvatar{} }
func (m *MsgUpdateDaoAvatar) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoAvatar) ProtoMessage()    {}
func (*MsgUpdateDaoAvatar) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{87}
}
func (m *MsgUpdateDaoAvatar) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoAvatar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoAvatar.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoAvatar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoAvatar.Merge(m, src)
}
func (m *MsgUpdateDaoAvatar) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoAvatar) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoAvatar.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoAvatar proto.InternalMessageInfo

func (m *MsgUpdateDaoAvatar) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateDaoAvatar) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgUpdateDaoAvatar) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type MsgUpdateDaoAvatarResponse struct {
}

func (m *MsgUpdateDaoAvatarResponse) Reset()         { *m = MsgUpdateDaoAvatarResponse{} }
func (m *MsgUpdateDaoAvatarResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoAvatarResponse) ProtoMessage()    {}
func (*MsgUpdateDaoAvatarResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{88}
}
func (m *MsgUpdateDaoAvatarResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoAvatarResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoAvatarResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoAvatarResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoAvatarResponse.Merge(m, src)
}
func (m *MsgUpdateDaoAvatarResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoAvatarResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoAvatarResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoAvatarResponse proto.InternalMessageInfo

type MsgUpdateDaoMetadata struct {
	// admin is the account address of the group admin.
	Admin       string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Id          string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	AvatarUrl   string `protobuf:"bytes,5,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Location    string `protobuf:"bytes,6,opt,name=location,proto3" json:"location,omitempty"`
	Website     string `protobuf:"bytes,7,opt,name=website,proto3" json:"website,omitempty"`
}

func (m *MsgUpdateDaoMetadata) Reset()         { *m = MsgUpdateDaoMetadata{} }
func (m *MsgUpdateDaoMetadata) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoMetadata) ProtoMessage()    {}
func (*MsgUpdateDaoMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{89}
}
func (m *MsgUpdateDaoMetadata) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoMetadata.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoMetadata.Merge(m, src)
}
func (m *MsgUpdateDaoMetadata) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoMetadata proto.InternalMessageInfo

func (m *MsgUpdateDaoMetadata) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateDaoMetadata) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgUpdateDaoMetadata) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateDaoMetadata) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgUpdateDaoMetadata) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *MsgUpdateDaoMetadata) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *MsgUpdateDaoMetadata) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

type MsgUpdateDaoMetadataResponse struct {
}

func (m *MsgUpdateDaoMetadataResponse) Reset()         { *m = MsgUpdateDaoMetadataResponse{} }
func (m *MsgUpdateDaoMetadataResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoMetadataResponse) ProtoMessage()    {}
func (*MsgUpdateDaoMetadataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{90}
}
func (m *MsgUpdateDaoMetadataResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoMetadataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoMetadataResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoMetadataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoMetadataResponse.Merge(m, src)
}
func (m *MsgUpdateDaoMetadataResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoMetadataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoMetadataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoMetadataResponse proto.InternalMessageInfo

// MsgDaoTreasurySpend defines a message for sending tokens from the dao address to another account. This message is typically executed via a group proposal.
type MsgDaoTreasurySpend struct {
	// admin is the account address of the group admin.
	Admin     string                                   `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Id        string                                   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Recipient string                                   `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient,omitempty"`
	Amount    github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,4,rep,name=amount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"amount"`
}

func (m *MsgDaoTreasurySpend) Reset()         { *m = MsgDaoTreasurySpend{} }
func (m *MsgDaoTreasurySpend) String() string { return proto.CompactTextString(m) }
func (*MsgDaoTreasurySpend) ProtoMessage()    {}
func (*MsgDaoTreasurySpend) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{91}
}
func (m *MsgDaoTreasurySpend) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDaoTreasurySpend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDaoTreasurySpend.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDaoTreasurySpend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDaoTreasurySpend.Merge(m, src)
}
func (m *MsgDaoTreasurySpend) XXX_Size() int {
	return m.Size()
}
func (m *MsgDaoTreasurySpend) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDaoTreasurySpend.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDaoTreasurySpend proto.InternalMessageInfo

func (m *MsgDaoTreasurySpend) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgDaoTreasurySpend) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgDaoTreasurySpend) GetRecipient() string {
	if m != nil {
		return m.Recipient
	}
	return ""
}

func (m *MsgDaoTreasurySpend) GetAmount() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.Amount
	}
	return nil
}

// MsgDaoTreasurySpendResponse defines the response to executing a
// MsgDaoTreasurySpend message.
type MsgDaoTreasurySpendResponse struct {
}

func (m *MsgDaoTreasurySpendResponse) Reset()         { *m = MsgDaoTreasurySpendResponse{} }
func (m *MsgDaoTreasurySpendResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDaoTreasurySpendResponse) ProtoMessage()    {}
func (*MsgDaoTreasurySpendResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{92}
}
func (m *MsgDaoTreasurySpendResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDaoTreasurySpendResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDaoTreasurySpendResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDaoTreasurySpendResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDaoTreasurySpendResponse.Merge(m, src)
}
func (m *MsgDaoTreasurySpendResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDaoTreasurySpendResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDaoTreasurySpendResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDaoTreasurySpendResponse proto.InternalMessageInfo

type MsgUpdateDaoConfig struct {
	// admin is the account address of the group admin
	Admin string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	// dao id to update config for
	Id string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	// updated config settings
	Config DaoConfig `protobuf:"bytes,3,opt,name=config,proto3" json:"config"`
}

func (m *MsgUpdateDaoConfig) Reset()         { *m = MsgUpdateDaoConfig{} }
func (m *MsgUpdateDaoConfig) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoConfig) ProtoMessage()    {}
func (*MsgUpdateDaoConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{93}
}
func (m *MsgUpdateDaoConfig) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoConfig.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoConfig.Merge(m, src)
}
func (m *MsgUpdateDaoConfig) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoConfig.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoConfig proto.InternalMessageInfo

func (m *MsgUpdateDaoConfig) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateDaoConfig) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MsgUpdateDaoConfig) GetConfig() DaoConfig {
	if m != nil {
		return m.Config
	}
	return DaoConfig{}
}

type MsgUpdateDaoConfigResponse struct {
}

func (m *MsgUpdateDaoConfigResponse) Reset()         { *m = MsgUpdateDaoConfigResponse{} }
func (m *MsgUpdateDaoConfigResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoConfigResponse) ProtoMessage()    {}
func (*MsgUpdateDaoConfigResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{94}
}
func (m *MsgUpdateDaoConfigResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoConfigResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoConfigResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoConfigResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoConfigResponse.Merge(m, src)
}
func (m *MsgUpdateDaoConfigResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoConfigResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoConfigResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoConfigResponse proto.InternalMessageInfo

type MsgDaoCreateRelease struct {
	// admin is the account address of the group admin
	Admin        string       `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	TagName      string       `protobuf:"bytes,3,opt,name=tagName,proto3" json:"tagName,omitempty"`
	Target       string       `protobuf:"bytes,4,opt,name=target,proto3" json:"target,omitempty"`
	Name         string       `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Description  string       `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Attachments  string       `protobuf:"bytes,7,opt,name=attachments,proto3" json:"attachments,omitempty"`
	Draft        bool         `protobuf:"varint,8,opt,name=draft,proto3" json:"draft,omitempty"`
	PreRelease   bool         `protobuf:"varint,9,opt,name=preRelease,proto3" json:"preRelease,omitempty"`
	IsTag        bool         `protobuf:"varint,10,opt,name=isTag,proto3" json:"isTag,omitempty"`
	Provider     string       `protobuf:"bytes,11,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgDaoCreateRelease) Reset()         { *m = MsgDaoCreateRelease{} }
func (m *MsgDaoCreateRelease) String() string { return proto.CompactTextString(m) }
func (*MsgDaoCreateRelease) ProtoMessage()    {}
func (*MsgDaoCreateRelease) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{95}
}
func (m *MsgDaoCreateRelease) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDaoCreateRelease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDaoCreateRelease.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDaoCreateRelease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDaoCreateRelease.Merge(m, src)
}
func (m *MsgDaoCreateRelease) XXX_Size() int {
	return m.Size()
}
func (m *MsgDaoCreateRelease) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDaoCreateRelease.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDaoCreateRelease proto.InternalMessageInfo

func (m *MsgDaoCreateRelease) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgDaoCreateRelease) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgDaoCreateRelease) GetTagName() string {
	if m != nil {
		return m.TagName
	}
	return ""
}

func (m *MsgDaoCreateRelease) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *MsgDaoCreateRelease) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgDaoCreateRelease) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgDaoCreateRelease) GetAttachments() string {
	if m != nil {
		return m.Attachments
	}
	return ""
}

func (m *MsgDaoCreateRelease) GetDraft() bool {
	if m != nil {
		return m.Draft
	}
	return false
}

func (m *MsgDaoCreateRelease) GetPreRelease() bool {
	if m != nil {
		return m.PreRelease
	}
	return false
}

func (m *MsgDaoCreateRelease) GetIsTag() bool {
	if m != nil {
		return m.IsTag
	}
	return false
}

func (m *MsgDaoCreateRelease) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgDaoCreateReleaseResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDaoCreateReleaseResponse) Reset()         { *m = MsgDaoCreateReleaseResponse{} }
func (m *MsgDaoCreateReleaseResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDaoCreateReleaseResponse) ProtoMessage()    {}
func (*MsgDaoCreateReleaseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{96}
}
func (m *MsgDaoCreateReleaseResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDaoCreateReleaseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDaoCreateReleaseResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDaoCreateReleaseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDaoCreateReleaseResponse.Merge(m, src)
}
func (m *MsgDaoCreateReleaseResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDaoCreateReleaseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDaoCreateReleaseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDaoCreateReleaseResponse proto.InternalMessageInfo

func (m *MsgDaoCreateReleaseResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgDeleteDao struct {
	// admin is the account address of the group admin.
	Admin string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	Id    string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteDao) Reset()         { *m = MsgDeleteDao{} }
func (m *MsgDeleteDao) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDao) ProtoMessage()    {}
func (*MsgDeleteDao) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{97}
}
func (m *MsgDeleteDao) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDao) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDao.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDao) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDao.Merge(m, src)
}
func (m *MsgDeleteDao) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDao) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDao.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDao proto.InternalMessageInfo

func (m *MsgDeleteDao) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgDeleteDao) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MsgDeleteDaoResponse struct {
}

func (m *MsgDeleteDaoResponse) Reset()         { *m = MsgDeleteDaoResponse{} }
func (m *MsgDeleteDaoResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteDaoResponse) ProtoMessage()    {}
func (*MsgDeleteDaoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{98}
}
func (m *MsgDeleteDaoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteDaoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteDaoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteDaoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteDaoResponse.Merge(m, src)
}
func (m *MsgDeleteDaoResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteDaoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteDaoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteDaoResponse proto.InternalMessageInfo

type MsgCreateComment struct {
	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64        `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	ParentIid    uint64        `protobuf:"varint,3,opt,name=parentIid,proto3" json:"parentIid,omitempty"`
	Parent       CommentParent `protobuf:"varint,4,opt,name=parent,proto3,enum=gitopia.gitopia.gitopia.CommentParent" json:"parent,omitempty"`
	Body         string        `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	Attachments  []*Attachment `protobuf:"bytes,6,rep,name=attachments,proto3" json:"attachments,omitempty"`
	DiffHunk     string        `protobuf:"bytes,7,opt,name=diffHunk,proto3" json:"diffHunk,omitempty"`
	Path         string        `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	Position     uint64        `protobuf:"varint,9,opt,name=position,proto3" json:"position,omitempty"`
}

func (m *MsgCreateComment) Reset()         { *m = MsgCreateComment{} }
func (m *MsgCreateComment) String() string { return proto.CompactTextString(m) }
func (*MsgCreateComment) ProtoMessage()    {}
func (*MsgCreateComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{99}
}
func (m *MsgCreateComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateComment.Merge(m, src)
}
func (m *MsgCreateComment) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateComment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateComment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateComment proto.InternalMessageInfo

func (m *MsgCreateComment) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateComment) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgCreateComment) GetParentIid() uint64 {
	if m != nil {
		return m.ParentIid
	}
	return 0
}

func (m *MsgCreateComment) GetParent() CommentParent {
	if m != nil {
		return m.Parent
	}
	return CommentParentNone
}

func (m *MsgCreateComment) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *MsgCreateComment) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

func (m *MsgCreateComment) GetDiffHunk() string {
	if m != nil {
		return m.DiffHunk
	}
	return ""
}

func (m *MsgCreateComment) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *MsgCreateComment) GetPosition() uint64 {
	if m != nil {
		return m.Position
	}
	return 0
}

type MsgCreateCommentResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateCommentResponse) Reset()         { *m = MsgCreateCommentResponse{} }
func (m *MsgCreateCommentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateCommentResponse) ProtoMessage()    {}
func (*MsgCreateCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{100}
}
func (m *MsgCreateCommentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateCommentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateCommentResponse.Merge(m, src)
}
func (m *MsgCreateCommentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateCommentResponse proto.InternalMessageInfo

func (m *MsgCreateCommentResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateComment struct {
	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64        `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	ParentIid    uint64        `protobuf:"varint,3,opt,name=parentIid,proto3" json:"parentIid,omitempty"`
	Parent       CommentParent `protobuf:"varint,4,opt,name=parent,proto3,enum=gitopia.gitopia.gitopia.CommentParent" json:"parent,omitempty"`
	CommentIid   uint64        `protobuf:"varint,5,opt,name=commentIid,proto3" json:"commentIid,omitempty"`
	Body         string        `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	Attachments  []*Attachment `protobuf:"bytes,7,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (m *MsgUpdateComment) Reset()         { *m = MsgUpdateComment{} }
func (m *MsgUpdateComment) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateComment) ProtoMessage()    {}
func (*MsgUpdateComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{101}
}
func (m *MsgUpdateComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateComment.Merge(m, src)
}
func (m *MsgUpdateComment) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateComment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateComment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateComment proto.InternalMessageInfo

func (m *MsgUpdateComment) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateComment) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdateComment) GetParentIid() uint64 {
	if m != nil {
		return m.ParentIid
	}
	return 0
}

func (m *MsgUpdateComment) GetParent() CommentParent {
	if m != nil {
		return m.Parent
	}
	return CommentParentNone
}

func (m *MsgUpdateComment) GetCommentIid() uint64 {
	if m != nil {
		return m.CommentIid
	}
	return 0
}

func (m *MsgUpdateComment) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *MsgUpdateComment) GetAttachments() []*Attachment {
	if m != nil {
		return m.Attachments
	}
	return nil
}

type MsgUpdateCommentResponse struct {
}

func (m *MsgUpdateCommentResponse) Reset()         { *m = MsgUpdateCommentResponse{} }
func (m *MsgUpdateCommentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateCommentResponse) ProtoMessage()    {}
func (*MsgUpdateCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{102}
}
func (m *MsgUpdateCommentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateCommentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateCommentResponse.Merge(m, src)
}
func (m *MsgUpdateCommentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateCommentResponse proto.InternalMessageInfo

type MsgDeleteComment struct {
	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64        `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	ParentIid    uint64        `protobuf:"varint,3,opt,name=parentIid,proto3" json:"parentIid,omitempty"`
	Parent       CommentParent `protobuf:"varint,4,opt,name=parent,proto3,enum=gitopia.gitopia.gitopia.CommentParent" json:"parent,omitempty"`
	CommentIid   uint64        `protobuf:"varint,5,opt,name=commentIid,proto3" json:"commentIid,omitempty"`
}

func (m *MsgDeleteComment) Reset()         { *m = MsgDeleteComment{} }
func (m *MsgDeleteComment) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteComment) ProtoMessage()    {}
func (*MsgDeleteComment) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{103}
}
func (m *MsgDeleteComment) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteComment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteComment.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteComment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteComment.Merge(m, src)
}
func (m *MsgDeleteComment) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteComment) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteComment.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteComment proto.InternalMessageInfo

func (m *MsgDeleteComment) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteComment) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgDeleteComment) GetParentIid() uint64 {
	if m != nil {
		return m.ParentIid
	}
	return 0
}

func (m *MsgDeleteComment) GetParent() CommentParent {
	if m != nil {
		return m.Parent
	}
	return CommentParentNone
}

func (m *MsgDeleteComment) GetCommentIid() uint64 {
	if m != nil {
		return m.CommentIid
	}
	return 0
}

type MsgDeleteCommentResponse struct {
}

func (m *MsgDeleteCommentResponse) Reset()         { *m = MsgDeleteCommentResponse{} }
func (m *MsgDeleteCommentResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteCommentResponse) ProtoMessage()    {}
func (*MsgDeleteCommentResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{104}
}
func (m *MsgDeleteCommentResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteCommentResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteCommentResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteCommentResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteCommentResponse.Merge(m, src)
}
func (m *MsgDeleteCommentResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteCommentResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteCommentResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteCommentResponse proto.InternalMessageInfo

type MsgToggleCommentResolved struct {
	Creator      string        `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64        `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	ParentIid    uint64        `protobuf:"varint,3,opt,name=parentIid,proto3" json:"parentIid,omitempty"`
	Parent       CommentParent `protobuf:"varint,4,opt,name=parent,proto3,enum=gitopia.gitopia.gitopia.CommentParent" json:"parent,omitempty"`
	CommentIid   uint64        `protobuf:"varint,5,opt,name=commentIid,proto3" json:"commentIid,omitempty"`
}

func (m *MsgToggleCommentResolved) Reset()         { *m = MsgToggleCommentResolved{} }
func (m *MsgToggleCommentResolved) String() string { return proto.CompactTextString(m) }
func (*MsgToggleCommentResolved) ProtoMessage()    {}
func (*MsgToggleCommentResolved) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{105}
}
func (m *MsgToggleCommentResolved) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleCommentResolved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleCommentResolved.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleCommentResolved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleCommentResolved.Merge(m, src)
}
func (m *MsgToggleCommentResolved) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleCommentResolved) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleCommentResolved.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleCommentResolved proto.InternalMessageInfo

func (m *MsgToggleCommentResolved) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgToggleCommentResolved) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgToggleCommentResolved) GetParentIid() uint64 {
	if m != nil {
		return m.ParentIid
	}
	return 0
}

func (m *MsgToggleCommentResolved) GetParent() CommentParent {
	if m != nil {
		return m.Parent
	}
	return CommentParentNone
}

func (m *MsgToggleCommentResolved) GetCommentIid() uint64 {
	if m != nil {
		return m.CommentIid
	}
	return 0
}

type MsgToggleCommentResolvedResponse struct {
	Resolved bool `protobuf:"varint,1,opt,name=resolved,proto3" json:"resolved,omitempty"`
}

func (m *MsgToggleCommentResolvedResponse) Reset()         { *m = MsgToggleCommentResolvedResponse{} }
func (m *MsgToggleCommentResolvedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgToggleCommentResolvedResponse) ProtoMessage()    {}
func (*MsgToggleCommentResolvedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{106}
}
func (m *MsgToggleCommentResolvedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleCommentResolvedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleCommentResolvedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleCommentResolvedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleCommentResolvedResponse.Merge(m, src)
}
func (m *MsgToggleCommentResolvedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleCommentResolvedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleCommentResolvedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleCommentResolvedResponse proto.InternalMessageInfo

func (m *MsgToggleCommentResolvedResponse) GetResolved() bool {
	if m != nil {
		return m.Resolved
	}
	return false
}

type MsgCreateIssue struct {
	Creator      string                                   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId                             `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Title        string                                   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description  string                                   `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	LabelIds     []uint64                                 `protobuf:"varint,5,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
	Weight       uint64                                   `protobuf:"varint,6,opt,name=weight,proto3" json:"weight,omitempty"`
	Assignees    []string                                 `protobuf:"bytes,7,rep,name=assignees,proto3" json:"assignees,omitempty"`
	BountyAmount github_com_cosmos_cosmos_sdk_types.Coins `protobuf:"bytes,8,rep,name=bountyAmount,proto3,castrepeated=github.com/cosmos/cosmos-sdk/types.Coins" json:"bountyAmount"`
	BountyExpiry int64                                    `protobuf:"varint,9,opt,name=bountyExpiry,proto3" json:"bountyExpiry,omitempty"`
}

func (m *MsgCreateIssue) Reset()         { *m = MsgCreateIssue{} }
func (m *MsgCreateIssue) String() string { return proto.CompactTextString(m) }
func (*MsgCreateIssue) ProtoMessage()    {}
func (*MsgCreateIssue) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{107}
}
func (m *MsgCreateIssue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateIssue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateIssue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateIssue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateIssue.Merge(m, src)
}
func (m *MsgCreateIssue) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateIssue) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateIssue.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateIssue proto.InternalMessageInfo

func (m *MsgCreateIssue) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateIssue) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgCreateIssue) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *MsgCreateIssue) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *MsgCreateIssue) GetLabelIds() []uint64 {
	if m != nil {
		return m.LabelIds
	}
	return nil
}

func (m *MsgCreateIssue) GetWeight() uint64 {
	if m != nil {
		return m.Weight
	}
	return 0
}

func (m *MsgCreateIssue) GetAssignees() []string {
	if m != nil {
		return m.Assignees
	}
	return nil
}

func (m *MsgCreateIssue) GetBountyAmount() github_com_cosmos_cosmos_sdk_types.Coins {
	if m != nil {
		return m.BountyAmount
	}
	return nil
}

func (m *MsgCreateIssue) GetBountyExpiry() int64 {
	if m != nil {
		return m.BountyExpiry
	}
	return 0
}

type MsgCreateIssueResponse struct {
	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Iid uint64 `protobuf:"varint,2,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (m *MsgCreateIssueResponse) Reset()         { *m = MsgCreateIssueResponse{} }
func (m *MsgCreateIssueResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateIssueResponse) ProtoMessage()    {}
func (*MsgCreateIssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{108}
}
func (m *MsgCreateIssueResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateIssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateIssueResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateIssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateIssueResponse.Merge(m, src)
}
func (m *MsgCreateIssueResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateIssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateIssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateIssueResponse proto.InternalMessageInfo

func (m *MsgCreateIssueResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *MsgCreateIssueResponse) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

type MsgUpdateIssueTitle struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Title        string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
}

func (m *MsgUpdateIssueTitle) Reset()         { *m = MsgUpdateIssueTitle{} }
func (m *MsgUpdateIssueTitle) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateIssueTitle) ProtoMessage()    {}
func (*MsgUpdateIssueTitle) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{109}
}
func (m *MsgUpdateIssueTitle) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateIssueTitle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateIssueTitle.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateIssueTitle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateIssueTitle.Merge(m, src)
}
func (m *MsgUpdateIssueTitle) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateIssueTitle) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateIssueTitle.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateIssueTitle proto.InternalMessageInfo

func (m *MsgUpdateIssueTitle) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateIssueTitle) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdateIssueTitle) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgUpdateIssueTitle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type MsgUpdateIssueTitleResponse struct {
}

func (m *MsgUpdateIssueTitleResponse) Reset()         { *m = MsgUpdateIssueTitleResponse{} }
func (m *MsgUpdateIssueTitleResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateIssueTitleResponse) ProtoMessage()    {}
func (*MsgUpdateIssueTitleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{110}
}
func (m *MsgUpdateIssueTitleResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateIssueTitleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateIssueTitleResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateIssueTitleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateIssueTitleResponse.Merge(m, src)
}
func (m *MsgUpdateIssueTitleResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateIssueTitleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateIssueTitleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateIssueTitleResponse proto.InternalMessageInfo

type MsgUpdateIssueDescription struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Description  string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgUpdateIssueDescription) Reset()         { *m = MsgUpdateIssueDescription{} }
func (m *MsgUpdateIssueDescription) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateIssueDescription) ProtoMessage()    {}
func (*MsgUpdateIssueDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{111}
}
func (m *MsgUpdateIssueDescription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateIssueDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateIssueDescription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateIssueDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateIssueDescription.Merge(m, src)
}
func (m *MsgUpdateIssueDescription) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateIssueDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateIssueDescription.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateIssueDescription proto.InternalMessageInfo

func (m *MsgUpdateIssueDescription) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateIssueDescription) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdateIssueDescription) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgUpdateIssueDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgUpdateIssueDescriptionResponse struct {
}

func (m *MsgUpdateIssueDescriptionResponse) Reset()         { *m = MsgUpdateIssueDescriptionResponse{} }
func (m *MsgUpdateIssueDescriptionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateIssueDescriptionResponse) ProtoMessage()    {}
func (*MsgUpdateIssueDescriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{112}
}
func (m *MsgUpdateIssueDescriptionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateIssueDescriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateIssueDescriptionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateIssueDescriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateIssueDescriptionResponse.Merge(m, src)
}
func (m *MsgUpdateIssueDescriptionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateIssueDescriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateIssueDescriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateIssueDescriptionResponse proto.InternalMessageInfo

type MsgToggleIssueState struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	CommentBody  string `protobuf:"bytes,4,opt,name=commentBody,proto3" json:"commentBody,omitempty"`
}

func (m *MsgToggleIssueState) Reset()         { *m = MsgToggleIssueState{} }
func (m *MsgToggleIssueState) String() string { return proto.CompactTextString(m) }
func (*MsgToggleIssueState) ProtoMessage()    {}
func (*MsgToggleIssueState) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{113}
}
func (m *MsgToggleIssueState) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleIssueState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleIssueState.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleIssueState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleIssueState.Merge(m, src)
}
func (m *MsgToggleIssueState) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleIssueState) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleIssueState.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleIssueState proto.InternalMessageInfo

func (m *MsgToggleIssueState) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgToggleIssueState) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgToggleIssueState) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgToggleIssueState) GetCommentBody() string {
	if m != nil {
		return m.CommentBody
	}
	return ""
}

type MsgToggleIssueStateResponse struct {
	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (m *MsgToggleIssueStateResponse) Reset()         { *m = MsgToggleIssueStateResponse{} }
func (m *MsgToggleIssueStateResponse) String() string { return proto.CompactTextString(m) }
func (*MsgToggleIssueStateResponse) ProtoMessage()    {}
func (*MsgToggleIssueStateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{114}
}
func (m *MsgToggleIssueStateResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleIssueStateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleIssueStateResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleIssueStateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleIssueStateResponse.Merge(m, src)
}
func (m *MsgToggleIssueStateResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleIssueStateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleIssueStateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleIssueStateResponse proto.InternalMessageInfo

func (m *MsgToggleIssueStateResponse) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type MsgAddIssueAssignees struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Assignees    []string `protobuf:"bytes,4,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (m *MsgAddIssueAssignees) Reset()         { *m = MsgAddIssueAssignees{} }
func (m *MsgAddIssueAssignees) String() string { return proto.CompactTextString(m) }
func (*MsgAddIssueAssignees) ProtoMessage()    {}
func (*MsgAddIssueAssignees) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{115}
}
func (m *MsgAddIssueAssignees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddIssueAssignees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddIssueAssignees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddIssueAssignees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddIssueAssignees.Merge(m, src)
}
func (m *MsgAddIssueAssignees) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddIssueAssignees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddIssueAssignees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddIssueAssignees proto.InternalMessageInfo

func (m *MsgAddIssueAssignees) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddIssueAssignees) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgAddIssueAssignees) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgAddIssueAssignees) GetAssignees() []string {
	if m != nil {
		return m.Assignees
	}
	return nil
}

type MsgAddIssueAssigneesResponse struct {
}

func (m *MsgAddIssueAssigneesResponse) Reset()         { *m = MsgAddIssueAssigneesResponse{} }
func (m *MsgAddIssueAssigneesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddIssueAssigneesResponse) ProtoMessage()    {}
func (*MsgAddIssueAssigneesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{116}
}
func (m *MsgAddIssueAssigneesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddIssueAssigneesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddIssueAssigneesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddIssueAssigneesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddIssueAssigneesResponse.Merge(m, src)
}
func (m *MsgAddIssueAssigneesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddIssueAssigneesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddIssueAssigneesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddIssueAssigneesResponse proto.InternalMessageInfo

type MsgRemoveIssueAssignees struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	Assignees    []string `protobuf:"bytes,4,rep,name=assignees,proto3" json:"assignees,omitempty"`
}

func (m *MsgRemoveIssueAssignees) Reset()         { *m = MsgRemoveIssueAssignees{} }
func (m *MsgRemoveIssueAssignees) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveIssueAssignees) ProtoMessage()    {}
func (*MsgRemoveIssueAssignees) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{117}
}
func (m *MsgRemoveIssueAssignees) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveIssueAssignees) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveIssueAssignees.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveIssueAssignees) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveIssueAssignees.Merge(m, src)
}
func (m *MsgRemoveIssueAssignees) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveIssueAssignees) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveIssueAssignees.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveIssueAssignees proto.InternalMessageInfo

func (m *MsgRemoveIssueAssignees) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveIssueAssignees) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgRemoveIssueAssignees) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgRemoveIssueAssignees) GetAssignees() []string {
	if m != nil {
		return m.Assignees
	}
	return nil
}

type MsgRemoveIssueAssigneesResponse struct {
}

func (m *MsgRemoveIssueAssigneesResponse) Reset()         { *m = MsgRemoveIssueAssigneesResponse{} }
func (m *MsgRemoveIssueAssigneesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveIssueAssigneesResponse) ProtoMessage()    {}
func (*MsgRemoveIssueAssigneesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{118}
}
func (m *MsgRemoveIssueAssigneesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveIssueAssigneesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveIssueAssigneesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveIssueAssigneesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveIssueAssigneesResponse.Merge(m, src)
}
func (m *MsgRemoveIssueAssigneesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveIssueAssigneesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveIssueAssigneesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveIssueAssigneesResponse proto.InternalMessageInfo

type MsgAddIssueLabels struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	LabelIds     []uint64 `protobuf:"varint,4,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (m *MsgAddIssueLabels) Reset()         { *m = MsgAddIssueLabels{} }
func (m *MsgAddIssueLabels) String() string { return proto.CompactTextString(m) }
func (*MsgAddIssueLabels) ProtoMessage()    {}
func (*MsgAddIssueLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{119}
}
func (m *MsgAddIssueLabels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddIssueLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddIssueLabels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddIssueLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddIssueLabels.Merge(m, src)
}
func (m *MsgAddIssueLabels) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddIssueLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddIssueLabels.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddIssueLabels proto.InternalMessageInfo

func (m *MsgAddIssueLabels) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgAddIssueLabels) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgAddIssueLabels) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgAddIssueLabels) GetLabelIds() []uint64 {
	if m != nil {
		return m.LabelIds
	}
	return nil
}

type MsgAddIssueLabelsResponse struct {
}

func (m *MsgAddIssueLabelsResponse) Reset()         { *m = MsgAddIssueLabelsResponse{} }
func (m *MsgAddIssueLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgAddIssueLabelsResponse) ProtoMessage()    {}
func (*MsgAddIssueLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{120}
}
func (m *MsgAddIssueLabelsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgAddIssueLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgAddIssueLabelsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgAddIssueLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgAddIssueLabelsResponse.Merge(m, src)
}
func (m *MsgAddIssueLabelsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgAddIssueLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgAddIssueLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgAddIssueLabelsResponse proto.InternalMessageInfo

type MsgRemoveIssueLabels struct {
	Creator      string   `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64   `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64   `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
	LabelIds     []uint64 `protobuf:"varint,4,rep,packed,name=labelIds,proto3" json:"labelIds,omitempty"`
}

func (m *MsgRemoveIssueLabels) Reset()         { *m = MsgRemoveIssueLabels{} }
func (m *MsgRemoveIssueLabels) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveIssueLabels) ProtoMessage()    {}
func (*MsgRemoveIssueLabels) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{121}
}
func (m *MsgRemoveIssueLabels) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveIssueLabels) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveIssueLabels.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveIssueLabels) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveIssueLabels.Merge(m, src)
}
func (m *MsgRemoveIssueLabels) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveIssueLabels) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveIssueLabels.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveIssueLabels proto.InternalMessageInfo

func (m *MsgRemoveIssueLabels) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveIssueLabels) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgRemoveIssueLabels) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

func (m *MsgRemoveIssueLabels) GetLabelIds() []uint64 {
	if m != nil {
		return m.LabelIds
	}
	return nil
}

type MsgRemoveIssueLabelsResponse struct {
}

func (m *MsgRemoveIssueLabelsResponse) Reset()         { *m = MsgRemoveIssueLabelsResponse{} }
func (m *MsgRemoveIssueLabelsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveIssueLabelsResponse) ProtoMessage()    {}
func (*MsgRemoveIssueLabelsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{122}
}
func (m *MsgRemoveIssueLabelsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveIssueLabelsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveIssueLabelsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveIssueLabelsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveIssueLabelsResponse.Merge(m, src)
}
func (m *MsgRemoveIssueLabelsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveIssueLabelsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveIssueLabelsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveIssueLabelsResponse proto.InternalMessageInfo

type MsgDeleteIssue struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Iid          uint64 `protobuf:"varint,3,opt,name=iid,proto3" json:"iid,omitempty"`
}

func (m *MsgDeleteIssue) Reset()         { *m = MsgDeleteIssue{} }
func (m *MsgDeleteIssue) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteIssue) ProtoMessage()    {}
func (*MsgDeleteIssue) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{123}
}
func (m *MsgDeleteIssue) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteIssue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteIssue.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteIssue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteIssue.Merge(m, src)
}
func (m *MsgDeleteIssue) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteIssue) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteIssue.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteIssue proto.InternalMessageInfo

func (m *MsgDeleteIssue) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteIssue) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgDeleteIssue) GetIid() uint64 {
	if m != nil {
		return m.Iid
	}
	return 0
}

type MsgDeleteIssueResponse struct {
}

func (m *MsgDeleteIssueResponse) Reset()         { *m = MsgDeleteIssueResponse{} }
func (m *MsgDeleteIssueResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteIssueResponse) ProtoMessage()    {}
func (*MsgDeleteIssueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{124}
}
func (m *MsgDeleteIssueResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteIssueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteIssueResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteIssueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteIssueResponse.Merge(m, src)
}
func (m *MsgDeleteIssueResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteIssueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteIssueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteIssueResponse proto.InternalMessageInfo

type MsgCreateRepository struct {
	Creator     string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Owner       string `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgCreateRepository) Reset()         { *m = MsgCreateRepository{} }
func (m *MsgCreateRepository) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRepository) ProtoMessage()    {}
func (*MsgCreateRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{125}
}
func (m *MsgCreateRepository) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRepository.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRepository.Merge(m, src)
}
func (m *MsgCreateRepository) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRepository.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRepository proto.InternalMessageInfo

func (m *MsgCreateRepository) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateRepository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateRepository) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *MsgCreateRepository) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgCreateRepositoryResponse struct {
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
}

func (m *MsgCreateRepositoryResponse) Reset()         { *m = MsgCreateRepositoryResponse{} }
func (m *MsgCreateRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRepositoryResponse) ProtoMessage()    {}
func (*MsgCreateRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{126}
}
func (m *MsgCreateRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRepositoryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRepositoryResponse.Merge(m, src)
}
func (m *MsgCreateRepositoryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRepositoryResponse proto.InternalMessageInfo

func (m *MsgCreateRepositoryResponse) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

type MsgForkRepository struct {
	Creator                   string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId              RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	ForkRepositoryName        string       `protobuf:"bytes,3,opt,name=forkRepositoryName,proto3" json:"forkRepositoryName,omitempty"`
	ForkRepositoryDescription string       `protobuf:"bytes,4,opt,name=forkRepositoryDescription,proto3" json:"forkRepositoryDescription,omitempty"`
	Branch                    string       `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`
	Owner                     string       `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *MsgForkRepository) Reset()         { *m = MsgForkRepository{} }
func (m *MsgForkRepository) String() string { return proto.CompactTextString(m) }
func (*MsgForkRepository) ProtoMessage()    {}
func (*MsgForkRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{127}
}
func (m *MsgForkRepository) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgForkRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgForkRepository.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgForkRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgForkRepository.Merge(m, src)
}
func (m *MsgForkRepository) XXX_Size() int {
	return m.Size()
}
func (m *MsgForkRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgForkRepository.DiscardUnknown(m)
}

var xxx_messageInfo_MsgForkRepository proto.InternalMessageInfo

func (m *MsgForkRepository) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgForkRepository) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgForkRepository) GetForkRepositoryName() string {
	if m != nil {
		return m.ForkRepositoryName
	}
	return ""
}

func (m *MsgForkRepository) GetForkRepositoryDescription() string {
	if m != nil {
		return m.ForkRepositoryDescription
	}
	return ""
}

func (m *MsgForkRepository) GetBranch() string {
	if m != nil {
		return m.Branch
	}
	return ""
}

func (m *MsgForkRepository) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type MsgForkRepositoryResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgForkRepositoryResponse) Reset()         { *m = MsgForkRepositoryResponse{} }
func (m *MsgForkRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgForkRepositoryResponse) ProtoMessage()    {}
func (*MsgForkRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{128}
}
func (m *MsgForkRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgForkRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgForkRepositoryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgForkRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgForkRepositoryResponse.Merge(m, src)
}
func (m *MsgForkRepositoryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgForkRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgForkRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgForkRepositoryResponse proto.InternalMessageInfo

func (m *MsgForkRepositoryResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgRenameRepository struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Name         string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgRenameRepository) Reset()         { *m = MsgRenameRepository{} }
func (m *MsgRenameRepository) String() string { return proto.CompactTextString(m) }
func (*MsgRenameRepository) ProtoMessage()    {}
func (*MsgRenameRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{129}
}
func (m *MsgRenameRepository) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenameRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenameRepository.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenameRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenameRepository.Merge(m, src)
}
func (m *MsgRenameRepository) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenameRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenameRepository.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenameRepository proto.InternalMessageInfo

func (m *MsgRenameRepository) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRenameRepository) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgRenameRepository) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgRenameRepositoryResponse struct {
}

func (m *MsgRenameRepositoryResponse) Reset()         { *m = MsgRenameRepositoryResponse{} }
func (m *MsgRenameRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRenameRepositoryResponse) ProtoMessage()    {}
func (*MsgRenameRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{130}
}
func (m *MsgRenameRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRenameRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRenameRepositoryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRenameRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRenameRepositoryResponse.Merge(m, src)
}
func (m *MsgRenameRepositoryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRenameRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRenameRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRenameRepositoryResponse proto.InternalMessageInfo

type MsgUpdateRepositoryDescription struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Description  string       `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgUpdateRepositoryDescription) Reset()         { *m = MsgUpdateRepositoryDescription{} }
func (m *MsgUpdateRepositoryDescription) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryDescription) ProtoMessage()    {}
func (*MsgUpdateRepositoryDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{131}
}
func (m *MsgUpdateRepositoryDescription) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryDescription.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryDescription.Merge(m, src)
}
func (m *MsgUpdateRepositoryDescription) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryDescription.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryDescription proto.InternalMessageInfo

func (m *MsgUpdateRepositoryDescription) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRepositoryDescription) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgUpdateRepositoryDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgUpdateRepositoryDescriptionResponse struct {
}

func (m *MsgUpdateRepositoryDescriptionResponse) Reset() {
	*m = MsgUpdateRepositoryDescriptionResponse{}
}
func (m *MsgUpdateRepositoryDescriptionResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryDescriptionResponse) ProtoMessage()    {}
func (*MsgUpdateRepositoryDescriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{132}
}
func (m *MsgUpdateRepositoryDescriptionResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryDescriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryDescriptionResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryDescriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryDescriptionResponse.Merge(m, src)
}
func (m *MsgUpdateRepositoryDescriptionResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryDescriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryDescriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryDescriptionResponse proto.InternalMessageInfo

type MsgToggleRepositoryArchived struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
}

func (m *MsgToggleRepositoryArchived) Reset()         { *m = MsgToggleRepositoryArchived{} }
func (m *MsgToggleRepositoryArchived) String() string { return proto.CompactTextString(m) }
func (*MsgToggleRepositoryArchived) ProtoMessage()    {}
func (*MsgToggleRepositoryArchived) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{133}
}
func (m *MsgToggleRepositoryArchived) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleRepositoryArchived) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleRepositoryArchived.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleRepositoryArchived) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleRepositoryArchived.Merge(m, src)
}
func (m *MsgToggleRepositoryArchived) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleRepositoryArchived) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleRepositoryArchived.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleRepositoryArchived proto.InternalMessageInfo

func (m *MsgToggleRepositoryArchived) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgToggleRepositoryArchived) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

type MsgToggleRepositoryArchivedResponse struct {
}

func (m *MsgToggleRepositoryArchivedResponse) Reset()         { *m = MsgToggleRepositoryArchivedResponse{} }
func (m *MsgToggleRepositoryArchivedResponse) String() string { return proto.CompactTextString(m) }
func (*MsgToggleRepositoryArchivedResponse) ProtoMessage()    {}
func (*MsgToggleRepositoryArchivedResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{134}
}
func (m *MsgToggleRepositoryArchivedResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleRepositoryArchivedResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleRepositoryArchivedResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleRepositoryArchivedResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleRepositoryArchivedResponse.Merge(m, src)
}
func (m *MsgToggleRepositoryArchivedResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleRepositoryArchivedResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleRepositoryArchivedResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleRepositoryArchivedResponse proto.InternalMessageInfo

type MsgChangeOwner struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Owner        string       `protobuf:"bytes,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (m *MsgChangeOwner) Reset()         { *m = MsgChangeOwner{} }
func (m *MsgChangeOwner) String() string { return proto.CompactTextString(m) }
func (*MsgChangeOwner) ProtoMessage()    {}
func (*MsgChangeOwner) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{135}
}
func (m *MsgChangeOwner) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangeOwner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangeOwner.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangeOwner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangeOwner.Merge(m, src)
}
func (m *MsgChangeOwner) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangeOwner) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangeOwner.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangeOwner proto.InternalMessageInfo

func (m *MsgChangeOwner) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgChangeOwner) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgChangeOwner) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

type MsgChangeOwnerResponse struct {
}

func (m *MsgChangeOwnerResponse) Reset()         { *m = MsgChangeOwnerResponse{} }
func (m *MsgChangeOwnerResponse) String() string { return proto.CompactTextString(m) }
func (*MsgChangeOwnerResponse) ProtoMessage()    {}
func (*MsgChangeOwnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{136}
}
func (m *MsgChangeOwnerResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgChangeOwnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgChangeOwnerResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgChangeOwnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgChangeOwnerResponse.Merge(m, src)
}
func (m *MsgChangeOwnerResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgChangeOwnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgChangeOwnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgChangeOwnerResponse proto.InternalMessageInfo

type MsgUpdateRepositoryCollaborator struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	User         string       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Role         string       `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (m *MsgUpdateRepositoryCollaborator) Reset()         { *m = MsgUpdateRepositoryCollaborator{} }
func (m *MsgUpdateRepositoryCollaborator) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryCollaborator) ProtoMessage()    {}
func (*MsgUpdateRepositoryCollaborator) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{137}
}
func (m *MsgUpdateRepositoryCollaborator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryCollaborator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryCollaborator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryCollaborator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryCollaborator.Merge(m, src)
}
func (m *MsgUpdateRepositoryCollaborator) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryCollaborator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryCollaborator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryCollaborator proto.InternalMessageInfo

func (m *MsgUpdateRepositoryCollaborator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRepositoryCollaborator) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgUpdateRepositoryCollaborator) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *MsgUpdateRepositoryCollaborator) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type MsgUpdateRepositoryCollaboratorResponse struct {
}

func (m *MsgUpdateRepositoryCollaboratorResponse) Reset() {
	*m = MsgUpdateRepositoryCollaboratorResponse{}
}
func (m *MsgUpdateRepositoryCollaboratorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryCollaboratorResponse) ProtoMessage()    {}
func (*MsgUpdateRepositoryCollaboratorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{138}
}
func (m *MsgUpdateRepositoryCollaboratorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryCollaboratorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryCollaboratorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryCollaboratorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryCollaboratorResponse.Merge(m, src)
}
func (m *MsgUpdateRepositoryCollaboratorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryCollaboratorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryCollaboratorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryCollaboratorResponse proto.InternalMessageInfo

type MsgUpdateDaoRepositoryCollaborator struct {
	// admin is the account address of the group admin
	Admin        string       `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	User         string       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Role         string       `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (m *MsgUpdateDaoRepositoryCollaborator) Reset()         { *m = MsgUpdateDaoRepositoryCollaborator{} }
func (m *MsgUpdateDaoRepositoryCollaborator) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoRepositoryCollaborator) ProtoMessage()    {}
func (*MsgUpdateDaoRepositoryCollaborator) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{139}
}
func (m *MsgUpdateDaoRepositoryCollaborator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoRepositoryCollaborator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoRepositoryCollaborator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoRepositoryCollaborator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoRepositoryCollaborator.Merge(m, src)
}
func (m *MsgUpdateDaoRepositoryCollaborator) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoRepositoryCollaborator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoRepositoryCollaborator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoRepositoryCollaborator proto.InternalMessageInfo

func (m *MsgUpdateDaoRepositoryCollaborator) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateDaoRepositoryCollaborator) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgUpdateDaoRepositoryCollaborator) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *MsgUpdateDaoRepositoryCollaborator) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type MsgUpdateDaoRepositoryCollaboratorResponse struct {
}

func (m *MsgUpdateDaoRepositoryCollaboratorResponse) Reset() {
	*m = MsgUpdateDaoRepositoryCollaboratorResponse{}
}
func (m *MsgUpdateDaoRepositoryCollaboratorResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgUpdateDaoRepositoryCollaboratorResponse) ProtoMessage() {}
func (*MsgUpdateDaoRepositoryCollaboratorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{140}
}
func (m *MsgUpdateDaoRepositoryCollaboratorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoRepositoryCollaboratorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoRepositoryCollaboratorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoRepositoryCollaboratorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoRepositoryCollaboratorResponse.Merge(m, src)
}
func (m *MsgUpdateDaoRepositoryCollaboratorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoRepositoryCollaboratorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoRepositoryCollaboratorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoRepositoryCollaboratorResponse proto.InternalMessageInfo

type MsgRemoveRepositoryCollaborator struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	User         string       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgRemoveRepositoryCollaborator) Reset()         { *m = MsgRemoveRepositoryCollaborator{} }
func (m *MsgRemoveRepositoryCollaborator) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveRepositoryCollaborator) ProtoMessage()    {}
func (*MsgRemoveRepositoryCollaborator) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{141}
}
func (m *MsgRemoveRepositoryCollaborator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveRepositoryCollaborator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveRepositoryCollaborator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveRepositoryCollaborator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveRepositoryCollaborator.Merge(m, src)
}
func (m *MsgRemoveRepositoryCollaborator) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveRepositoryCollaborator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveRepositoryCollaborator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveRepositoryCollaborator proto.InternalMessageInfo

func (m *MsgRemoveRepositoryCollaborator) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgRemoveRepositoryCollaborator) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgRemoveRepositoryCollaborator) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgRemoveRepositoryCollaboratorResponse struct {
}

func (m *MsgRemoveRepositoryCollaboratorResponse) Reset() {
	*m = MsgRemoveRepositoryCollaboratorResponse{}
}
func (m *MsgRemoveRepositoryCollaboratorResponse) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveRepositoryCollaboratorResponse) ProtoMessage()    {}
func (*MsgRemoveRepositoryCollaboratorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{142}
}
func (m *MsgRemoveRepositoryCollaboratorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveRepositoryCollaboratorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveRepositoryCollaboratorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveRepositoryCollaboratorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveRepositoryCollaboratorResponse.Merge(m, src)
}
func (m *MsgRemoveRepositoryCollaboratorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveRepositoryCollaboratorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveRepositoryCollaboratorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveRepositoryCollaboratorResponse proto.InternalMessageInfo

type MsgRemoveDaoRepositoryCollaborator struct {
	// admin is the account address of the group admin
	Admin        string       `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	User         string       `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
}

func (m *MsgRemoveDaoRepositoryCollaborator) Reset()         { *m = MsgRemoveDaoRepositoryCollaborator{} }
func (m *MsgRemoveDaoRepositoryCollaborator) String() string { return proto.CompactTextString(m) }
func (*MsgRemoveDaoRepositoryCollaborator) ProtoMessage()    {}
func (*MsgRemoveDaoRepositoryCollaborator) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{143}
}
func (m *MsgRemoveDaoRepositoryCollaborator) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveDaoRepositoryCollaborator) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveDaoRepositoryCollaborator.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveDaoRepositoryCollaborator) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveDaoRepositoryCollaborator.Merge(m, src)
}
func (m *MsgRemoveDaoRepositoryCollaborator) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveDaoRepositoryCollaborator) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveDaoRepositoryCollaborator.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveDaoRepositoryCollaborator proto.InternalMessageInfo

func (m *MsgRemoveDaoRepositoryCollaborator) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgRemoveDaoRepositoryCollaborator) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgRemoveDaoRepositoryCollaborator) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

type MsgRemoveDaoRepositoryCollaboratorResponse struct {
}

func (m *MsgRemoveDaoRepositoryCollaboratorResponse) Reset() {
	*m = MsgRemoveDaoRepositoryCollaboratorResponse{}
}
func (m *MsgRemoveDaoRepositoryCollaboratorResponse) String() string {
	return proto.CompactTextString(m)
}
func (*MsgRemoveDaoRepositoryCollaboratorResponse) ProtoMessage() {}
func (*MsgRemoveDaoRepositoryCollaboratorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{144}
}
func (m *MsgRemoveDaoRepositoryCollaboratorResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgRemoveDaoRepositoryCollaboratorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgRemoveDaoRepositoryCollaboratorResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgRemoveDaoRepositoryCollaboratorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgRemoveDaoRepositoryCollaboratorResponse.Merge(m, src)
}
func (m *MsgRemoveDaoRepositoryCollaboratorResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgRemoveDaoRepositoryCollaboratorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgRemoveDaoRepositoryCollaboratorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgRemoveDaoRepositoryCollaboratorResponse proto.InternalMessageInfo

type MsgCreateRepositoryLabel struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Name         string       `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Color        string       `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
	Description  string       `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgCreateRepositoryLabel) Reset()         { *m = MsgCreateRepositoryLabel{} }
func (m *MsgCreateRepositoryLabel) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRepositoryLabel) ProtoMessage()    {}
func (*MsgCreateRepositoryLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{145}
}
func (m *MsgCreateRepositoryLabel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRepositoryLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRepositoryLabel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRepositoryLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRepositoryLabel.Merge(m, src)
}
func (m *MsgCreateRepositoryLabel) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRepositoryLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRepositoryLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRepositoryLabel proto.InternalMessageInfo

func (m *MsgCreateRepositoryLabel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateRepositoryLabel) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgCreateRepositoryLabel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateRepositoryLabel) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *MsgCreateRepositoryLabel) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgCreateRepositoryLabelResponse struct {
	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateRepositoryLabelResponse) Reset()         { *m = MsgCreateRepositoryLabelResponse{} }
func (m *MsgCreateRepositoryLabelResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateRepositoryLabelResponse) ProtoMessage()    {}
func (*MsgCreateRepositoryLabelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{146}
}
func (m *MsgCreateRepositoryLabelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateRepositoryLabelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateRepositoryLabelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateRepositoryLabelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateRepositoryLabelResponse.Merge(m, src)
}
func (m *MsgCreateRepositoryLabelResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateRepositoryLabelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateRepositoryLabelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateRepositoryLabelResponse proto.InternalMessageInfo

func (m *MsgCreateRepositoryLabelResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type MsgUpdateRepositoryLabel struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	LabelId      uint64       `protobuf:"varint,3,opt,name=labelId,proto3" json:"labelId,omitempty"`
	Name         string       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Color        string       `protobuf:"bytes,5,opt,name=color,proto3" json:"color,omitempty"`
	Description  string       `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
}

func (m *MsgUpdateRepositoryLabel) Reset()         { *m = MsgUpdateRepositoryLabel{} }
func (m *MsgUpdateRepositoryLabel) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryLabel) ProtoMessage()    {}
func (*MsgUpdateRepositoryLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{147}
}
func (m *MsgUpdateRepositoryLabel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryLabel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryLabel.Merge(m, src)
}
func (m *MsgUpdateRepositoryLabel) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryLabel proto.InternalMessageInfo

func (m *MsgUpdateRepositoryLabel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateRepositoryLabel) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgUpdateRepositoryLabel) GetLabelId() uint64 {
	if m != nil {
		return m.LabelId
	}
	return 0
}

func (m *MsgUpdateRepositoryLabel) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgUpdateRepositoryLabel) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *MsgUpdateRepositoryLabel) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type MsgUpdateRepositoryLabelResponse struct {
}

func (m *MsgUpdateRepositoryLabelResponse) Reset()         { *m = MsgUpdateRepositoryLabelResponse{} }
func (m *MsgUpdateRepositoryLabelResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateRepositoryLabelResponse) ProtoMessage()    {}
func (*MsgUpdateRepositoryLabelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{148}
}
func (m *MsgUpdateRepositoryLabelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateRepositoryLabelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateRepositoryLabelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateRepositoryLabelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateRepositoryLabelResponse.Merge(m, src)
}
func (m *MsgUpdateRepositoryLabelResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateRepositoryLabelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateRepositoryLabelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateRepositoryLabelResponse proto.InternalMessageInfo

type MsgDeleteRepositoryLabel struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	LabelId      uint64       `protobuf:"varint,3,opt,name=labelId,proto3" json:"labelId,omitempty"`
}

func (m *MsgDeleteRepositoryLabel) Reset()         { *m = MsgDeleteRepositoryLabel{} }
func (m *MsgDeleteRepositoryLabel) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRepositoryLabel) ProtoMessage()    {}
func (*MsgDeleteRepositoryLabel) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{149}
}
func (m *MsgDeleteRepositoryLabel) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRepositoryLabel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRepositoryLabel.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRepositoryLabel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRepositoryLabel.Merge(m, src)
}
func (m *MsgDeleteRepositoryLabel) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRepositoryLabel) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRepositoryLabel.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRepositoryLabel proto.InternalMessageInfo

func (m *MsgDeleteRepositoryLabel) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteRepositoryLabel) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgDeleteRepositoryLabel) GetLabelId() uint64 {
	if m != nil {
		return m.LabelId
	}
	return 0
}

type MsgDeleteRepositoryLabelResponse struct {
}

func (m *MsgDeleteRepositoryLabelResponse) Reset()         { *m = MsgDeleteRepositoryLabelResponse{} }
func (m *MsgDeleteRepositoryLabelResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRepositoryLabelResponse) ProtoMessage()    {}
func (*MsgDeleteRepositoryLabelResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{150}
}
func (m *MsgDeleteRepositoryLabelResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRepositoryLabelResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRepositoryLabelResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRepositoryLabelResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRepositoryLabelResponse.Merge(m, src)
}
func (m *MsgDeleteRepositoryLabelResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRepositoryLabelResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRepositoryLabelResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRepositoryLabelResponse proto.InternalMessageInfo

type MsgToggleRepositoryForking struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
}

func (m *MsgToggleRepositoryForking) Reset()         { *m = MsgToggleRepositoryForking{} }
func (m *MsgToggleRepositoryForking) String() string { return proto.CompactTextString(m) }
func (*MsgToggleRepositoryForking) ProtoMessage()    {}
func (*MsgToggleRepositoryForking) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{151}
}
func (m *MsgToggleRepositoryForking) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleRepositoryForking) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleRepositoryForking.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleRepositoryForking) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleRepositoryForking.Merge(m, src)
}
func (m *MsgToggleRepositoryForking) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleRepositoryForking) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleRepositoryForking.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleRepositoryForking proto.InternalMessageInfo

func (m *MsgToggleRepositoryForking) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgToggleRepositoryForking) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

type MsgToggleRepositoryForkingResponse struct {
	AllowForking bool `protobuf:"varint,1,opt,name=allowForking,proto3" json:"allowForking,omitempty"`
}

func (m *MsgToggleRepositoryForkingResponse) Reset()         { *m = MsgToggleRepositoryForkingResponse{} }
func (m *MsgToggleRepositoryForkingResponse) String() string { return proto.CompactTextString(m) }
func (*MsgToggleRepositoryForkingResponse) ProtoMessage()    {}
func (*MsgToggleRepositoryForkingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{152}
}
func (m *MsgToggleRepositoryForkingResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleRepositoryForkingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleRepositoryForkingResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleRepositoryForkingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleRepositoryForkingResponse.Merge(m, src)
}
func (m *MsgToggleRepositoryForkingResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleRepositoryForkingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleRepositoryForkingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleRepositoryForkingResponse proto.InternalMessageInfo

func (m *MsgToggleRepositoryForkingResponse) GetAllowForking() bool {
	if m != nil {
		return m.AllowForking
	}
	return false
}

type MsgToggleArweaveBackup struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
}

func (m *MsgToggleArweaveBackup) Reset()         { *m = MsgToggleArweaveBackup{} }
func (m *MsgToggleArweaveBackup) String() string { return proto.CompactTextString(m) }
func (*MsgToggleArweaveBackup) ProtoMessage()    {}
func (*MsgToggleArweaveBackup) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{153}
}
func (m *MsgToggleArweaveBackup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleArweaveBackup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleArweaveBackup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleArweaveBackup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleArweaveBackup.Merge(m, src)
}
func (m *MsgToggleArweaveBackup) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleArweaveBackup) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleArweaveBackup.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleArweaveBackup proto.InternalMessageInfo

func (m *MsgToggleArweaveBackup) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgToggleArweaveBackup) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

type MsgToggleArweaveBackupResponse struct {
	EnableArweaveBackup bool `protobuf:"varint,1,opt,name=enableArweaveBackup,proto3" json:"enableArweaveBackup,omitempty"`
}

func (m *MsgToggleArweaveBackupResponse) Reset()         { *m = MsgToggleArweaveBackupResponse{} }
func (m *MsgToggleArweaveBackupResponse) String() string { return proto.CompactTextString(m) }
func (*MsgToggleArweaveBackupResponse) ProtoMessage()    {}
func (*MsgToggleArweaveBackupResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{154}
}
func (m *MsgToggleArweaveBackupResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgToggleArweaveBackupResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgToggleArweaveBackupResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgToggleArweaveBackupResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgToggleArweaveBackupResponse.Merge(m, src)
}
func (m *MsgToggleArweaveBackupResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgToggleArweaveBackupResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgToggleArweaveBackupResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgToggleArweaveBackupResponse proto.InternalMessageInfo

func (m *MsgToggleArweaveBackupResponse) GetEnableArweaveBackup() bool {
	if m != nil {
		return m.EnableArweaveBackup
	}
	return false
}

type MsgDeleteRepository struct {
	Creator      string       `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId RepositoryId `protobuf:"bytes,2,opt,name=repositoryId,proto3" json:"repositoryId"`
	Provider     string       `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (m *MsgDeleteRepository) Reset()         { *m = MsgDeleteRepository{} }
func (m *MsgDeleteRepository) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRepository) ProtoMessage()    {}
func (*MsgDeleteRepository) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{155}
}
func (m *MsgDeleteRepository) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRepository) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRepository.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRepository) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRepository.Merge(m, src)
}
func (m *MsgDeleteRepository) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRepository) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRepository.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRepository proto.InternalMessageInfo

func (m *MsgDeleteRepository) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteRepository) GetRepositoryId() RepositoryId {
	if m != nil {
		return m.RepositoryId
	}
	return RepositoryId{}
}

func (m *MsgDeleteRepository) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

type MsgDeleteRepositoryResponse struct {
}

func (m *MsgDeleteRepositoryResponse) Reset()         { *m = MsgDeleteRepositoryResponse{} }
func (m *MsgDeleteRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteRepositoryResponse) ProtoMessage()    {}
func (*MsgDeleteRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{156}
}
func (m *MsgDeleteRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteRepositoryResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteRepositoryResponse.Merge(m, src)
}
func (m *MsgDeleteRepositoryResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteRepositoryResponse proto.InternalMessageInfo

type MsgCreateUser struct {
	Creator   string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Username  string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	AvatarUrl string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Bio       string `protobuf:"bytes,5,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (m *MsgCreateUser) Reset()         { *m = MsgCreateUser{} }
func (m *MsgCreateUser) String() string { return proto.CompactTextString(m) }
func (*MsgCreateUser) ProtoMessage()    {}
func (*MsgCreateUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{157}
}
func (m *MsgCreateUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateUser.Merge(m, src)
}
func (m *MsgCreateUser) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateUser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateUser proto.InternalMessageInfo

func (m *MsgCreateUser) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgCreateUser) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *MsgCreateUser) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MsgCreateUser) GetAvatarUrl() string {
	if m != nil {
		return m.AvatarUrl
	}
	return ""
}

func (m *MsgCreateUser) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

type MsgCreateUserResponse struct {
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgCreateUserResponse) Reset()         { *m = MsgCreateUserResponse{} }
func (m *MsgCreateUserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgCreateUserResponse) ProtoMessage()    {}
func (*MsgCreateUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{158}
}
func (m *MsgCreateUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgCreateUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgCreateUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgCreateUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgCreateUserResponse.Merge(m, src)
}
func (m *MsgCreateUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgCreateUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgCreateUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgCreateUserResponse proto.InternalMessageInfo

func (m *MsgCreateUserResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MsgUpdateUserUsername struct {
	Creator  string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (m *MsgUpdateUserUsername) Reset()         { *m = MsgUpdateUserUsername{} }
func (m *MsgUpdateUserUsername) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserUsername) ProtoMessage()    {}
func (*MsgUpdateUserUsername) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{159}
}
func (m *MsgUpdateUserUsername) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserUsername) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserUsername.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserUsername) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserUsername.Merge(m, src)
}
func (m *MsgUpdateUserUsername) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserUsername) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserUsername.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserUsername proto.InternalMessageInfo

func (m *MsgUpdateUserUsername) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateUserUsername) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

type MsgUpdateUserUsernameResponse struct {
}

func (m *MsgUpdateUserUsernameResponse) Reset()         { *m = MsgUpdateUserUsernameResponse{} }
func (m *MsgUpdateUserUsernameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserUsernameResponse) ProtoMessage()    {}
func (*MsgUpdateUserUsernameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{160}
}
func (m *MsgUpdateUserUsernameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserUsernameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserUsernameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserUsernameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserUsernameResponse.Merge(m, src)
}
func (m *MsgUpdateUserUsernameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserUsernameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserUsernameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserUsernameResponse proto.InternalMessageInfo

type MsgUpdateUserName struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (m *MsgUpdateUserName) Reset()         { *m = MsgUpdateUserName{} }
func (m *MsgUpdateUserName) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserName) ProtoMessage()    {}
func (*MsgUpdateUserName) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{161}
}
func (m *MsgUpdateUserName) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserName) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserName.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserName) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserName.Merge(m, src)
}
func (m *MsgUpdateUserName) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserName) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserName.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserName proto.InternalMessageInfo

func (m *MsgUpdateUserName) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateUserName) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type MsgUpdateUserNameResponse struct {
}

func (m *MsgUpdateUserNameResponse) Reset()         { *m = MsgUpdateUserNameResponse{} }
func (m *MsgUpdateUserNameResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserNameResponse) ProtoMessage()    {}
func (*MsgUpdateUserNameResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{162}
}
func (m *MsgUpdateUserNameResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserNameResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserNameResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserNameResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserNameResponse.Merge(m, src)
}
func (m *MsgUpdateUserNameResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserNameResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserNameResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserNameResponse proto.InternalMessageInfo

type MsgUpdateUserBio struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Bio     string `protobuf:"bytes,2,opt,name=bio,proto3" json:"bio,omitempty"`
}

func (m *MsgUpdateUserBio) Reset()         { *m = MsgUpdateUserBio{} }
func (m *MsgUpdateUserBio) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserBio) ProtoMessage()    {}
func (*MsgUpdateUserBio) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{163}
}
func (m *MsgUpdateUserBio) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserBio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserBio.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserBio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserBio.Merge(m, src)
}
func (m *MsgUpdateUserBio) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserBio) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserBio.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserBio proto.InternalMessageInfo

func (m *MsgUpdateUserBio) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateUserBio) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

type MsgUpdateUserBioResponse struct {
}

func (m *MsgUpdateUserBioResponse) Reset()         { *m = MsgUpdateUserBioResponse{} }
func (m *MsgUpdateUserBioResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserBioResponse) ProtoMessage()    {}
func (*MsgUpdateUserBioResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{164}
}
func (m *MsgUpdateUserBioResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserBioResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserBioResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserBioResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserBioResponse.Merge(m, src)
}
func (m *MsgUpdateUserBioResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserBioResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserBioResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserBioResponse proto.InternalMessageInfo

type MsgUpdateUserAvatar struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (m *MsgUpdateUserAvatar) Reset()         { *m = MsgUpdateUserAvatar{} }
func (m *MsgUpdateUserAvatar) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserAvatar) ProtoMessage()    {}
func (*MsgUpdateUserAvatar) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{165}
}
func (m *MsgUpdateUserAvatar) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserAvatar) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserAvatar.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserAvatar) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserAvatar.Merge(m, src)
}
func (m *MsgUpdateUserAvatar) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserAvatar) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserAvatar.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserAvatar proto.InternalMessageInfo

func (m *MsgUpdateUserAvatar) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateUserAvatar) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type MsgUpdateUserAvatarResponse struct {
}

func (m *MsgUpdateUserAvatarResponse) Reset()         { *m = MsgUpdateUserAvatarResponse{} }
func (m *MsgUpdateUserAvatarResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserAvatarResponse) ProtoMessage()    {}
func (*MsgUpdateUserAvatarResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{166}
}
func (m *MsgUpdateUserAvatarResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserAvatarResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserAvatarResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserAvatarResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserAvatarResponse.Merge(m, src)
}
func (m *MsgUpdateUserAvatarResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserAvatarResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserAvatarResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserAvatarResponse proto.InternalMessageInfo

type MsgDeleteUser struct {
	Creator string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgDeleteUser) Reset()         { *m = MsgDeleteUser{} }
func (m *MsgDeleteUser) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteUser) ProtoMessage()    {}
func (*MsgDeleteUser) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{167}
}
func (m *MsgDeleteUser) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteUser) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteUser.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteUser) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteUser.Merge(m, src)
}
func (m *MsgDeleteUser) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteUser) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteUser.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteUser proto.InternalMessageInfo

func (m *MsgDeleteUser) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgDeleteUser) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MsgDeleteUserResponse struct {
}

func (m *MsgDeleteUserResponse) Reset()         { *m = MsgDeleteUserResponse{} }
func (m *MsgDeleteUserResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDeleteUserResponse) ProtoMessage()    {}
func (*MsgDeleteUserResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{168}
}
func (m *MsgDeleteUserResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDeleteUserResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDeleteUserResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDeleteUserResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDeleteUserResponse.Merge(m, src)
}
func (m *MsgDeleteUserResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDeleteUserResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDeleteUserResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDeleteUserResponse proto.InternalMessageInfo

type MsgUpdateUserPinnedRepositories struct {
	Creator      string `protobuf:"bytes,1,opt,name=creator,proto3" json:"creator,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
}

func (m *MsgUpdateUserPinnedRepositories) Reset()         { *m = MsgUpdateUserPinnedRepositories{} }
func (m *MsgUpdateUserPinnedRepositories) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserPinnedRepositories) ProtoMessage()    {}
func (*MsgUpdateUserPinnedRepositories) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{169}
}
func (m *MsgUpdateUserPinnedRepositories) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserPinnedRepositories) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserPinnedRepositories.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserPinnedRepositories) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserPinnedRepositories.Merge(m, src)
}
func (m *MsgUpdateUserPinnedRepositories) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserPinnedRepositories) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserPinnedRepositories.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserPinnedRepositories proto.InternalMessageInfo

func (m *MsgUpdateUserPinnedRepositories) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func (m *MsgUpdateUserPinnedRepositories) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

type MsgUpdateUserPinnedRepositoriesResponse struct {
}

func (m *MsgUpdateUserPinnedRepositoriesResponse) Reset() {
	*m = MsgUpdateUserPinnedRepositoriesResponse{}
}
func (m *MsgUpdateUserPinnedRepositoriesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateUserPinnedRepositoriesResponse) ProtoMessage()    {}
func (*MsgUpdateUserPinnedRepositoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{170}
}
func (m *MsgUpdateUserPinnedRepositoriesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateUserPinnedRepositoriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateUserPinnedRepositoriesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateUserPinnedRepositoriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateUserPinnedRepositoriesResponse.Merge(m, src)
}
func (m *MsgUpdateUserPinnedRepositoriesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateUserPinnedRepositoriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateUserPinnedRepositoriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateUserPinnedRepositoriesResponse proto.InternalMessageInfo

type MsgUpdateDaoPinnedRepositories struct {
	// admin is the account address of the group admin.
	Admin        string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin,omitempty"`
	RepositoryId uint64 `protobuf:"varint,2,opt,name=repositoryId,proto3" json:"repositoryId,omitempty"`
	Id           string `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (m *MsgUpdateDaoPinnedRepositories) Reset()         { *m = MsgUpdateDaoPinnedRepositories{} }
func (m *MsgUpdateDaoPinnedRepositories) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoPinnedRepositories) ProtoMessage()    {}
func (*MsgUpdateDaoPinnedRepositories) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{171}
}
func (m *MsgUpdateDaoPinnedRepositories) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoPinnedRepositories) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoPinnedRepositories.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoPinnedRepositories) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoPinnedRepositories.Merge(m, src)
}
func (m *MsgUpdateDaoPinnedRepositories) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoPinnedRepositories) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoPinnedRepositories.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoPinnedRepositories proto.InternalMessageInfo

func (m *MsgUpdateDaoPinnedRepositories) GetAdmin() string {
	if m != nil {
		return m.Admin
	}
	return ""
}

func (m *MsgUpdateDaoPinnedRepositories) GetRepositoryId() uint64 {
	if m != nil {
		return m.RepositoryId
	}
	return 0
}

func (m *MsgUpdateDaoPinnedRepositories) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type MsgUpdateDaoPinnedRepositoriesResponse struct {
}

func (m *MsgUpdateDaoPinnedRepositoriesResponse) Reset() {
	*m = MsgUpdateDaoPinnedRepositoriesResponse{}
}
func (m *MsgUpdateDaoPinnedRepositoriesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateDaoPinnedRepositoriesResponse) ProtoMessage()    {}
func (*MsgUpdateDaoPinnedRepositoriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{172}
}
func (m *MsgUpdateDaoPinnedRepositoriesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateDaoPinnedRepositoriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateDaoPinnedRepositoriesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateDaoPinnedRepositoriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateDaoPinnedRepositoriesResponse.Merge(m, src)
}
func (m *MsgUpdateDaoPinnedRepositoriesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateDaoPinnedRepositoriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateDaoPinnedRepositoriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateDaoPinnedRepositoriesResponse proto.InternalMessageInfo

type MsgUpdateParams struct {
	// authority is the address of the governance account.
	Authority string `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	// params defines the x/gitopia parameters to update.
	//
	// NOTE: All parameters must be supplied.
	Params Params `protobuf:"bytes,2,opt,name=params,proto3" json:"params"`
}

func (m *MsgUpdateParams) Reset()         { *m = MsgUpdateParams{} }
func (m *MsgUpdateParams) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParams) ProtoMessage()    {}
func (*MsgUpdateParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{173}
}
func (m *MsgUpdateParams) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParams.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParams.Merge(m, src)
}
func (m *MsgUpdateParams) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParams) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParams.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParams proto.InternalMessageInfo

func (m *MsgUpdateParams) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgUpdateParams) GetParams() Params {
	if m != nil {
		return m.Params
	}
	return Params{}
}

type MsgUpdateParamsResponse struct {
}

func (m *MsgUpdateParamsResponse) Reset()         { *m = MsgUpdateParamsResponse{} }
func (m *MsgUpdateParamsResponse) String() string { return proto.CompactTextString(m) }
func (*MsgUpdateParamsResponse) ProtoMessage()    {}
func (*MsgUpdateParamsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{174}
}
func (m *MsgUpdateParamsResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgUpdateParamsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgUpdateParamsResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgUpdateParamsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgUpdateParamsResponse.Merge(m, src)
}
func (m *MsgUpdateParamsResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgUpdateParamsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgUpdateParamsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgUpdateParamsResponse proto.InternalMessageInfo

type MsgDistributePlatformIncentives struct {
	// authority is the address of the governance account.
	Authority string                                    `protobuf:"bytes,1,opt,name=authority,proto3" json:"authority,omitempty"`
	Addresses []MsgDistributePlatformIncentives_Address `protobuf:"bytes,3,rep,name=addresses,proto3" json:"addresses"`
}

func (m *MsgDistributePlatformIncentives) Reset()         { *m = MsgDistributePlatformIncentives{} }
func (m *MsgDistributePlatformIncentives) String() string { return proto.CompactTextString(m) }
func (*MsgDistributePlatformIncentives) ProtoMessage()    {}
func (*MsgDistributePlatformIncentives) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{175}
}
func (m *MsgDistributePlatformIncentives) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDistributePlatformIncentives) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDistributePlatformIncentives.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDistributePlatformIncentives) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDistributePlatformIncentives.Merge(m, src)
}
func (m *MsgDistributePlatformIncentives) XXX_Size() int {
	return m.Size()
}
func (m *MsgDistributePlatformIncentives) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDistributePlatformIncentives.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDistributePlatformIncentives proto.InternalMessageInfo

func (m *MsgDistributePlatformIncentives) GetAuthority() string {
	if m != nil {
		return m.Authority
	}
	return ""
}

func (m *MsgDistributePlatformIncentives) GetAddresses() []MsgDistributePlatformIncentives_Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type MsgDistributePlatformIncentives_Address struct {
	Address string     `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount  types.Coin `protobuf:"bytes,2,opt,name=amount,proto3,castkey=github.com/cosmos/cosmos-sdk/types.Coin" json:"amount"`
}

func (m *MsgDistributePlatformIncentives_Address) Reset() {
	*m = MsgDistributePlatformIncentives_Address{}
}
func (m *MsgDistributePlatformIncentives_Address) String() string { return proto.CompactTextString(m) }
func (*MsgDistributePlatformIncentives_Address) ProtoMessage()    {}
func (*MsgDistributePlatformIncentives_Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{175, 0}
}
func (m *MsgDistributePlatformIncentives_Address) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDistributePlatformIncentives_Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDistributePlatformIncentives_Address.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDistributePlatformIncentives_Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDistributePlatformIncentives_Address.Merge(m, src)
}
func (m *MsgDistributePlatformIncentives_Address) XXX_Size() int {
	return m.Size()
}
func (m *MsgDistributePlatformIncentives_Address) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDistributePlatformIncentives_Address.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDistributePlatformIncentives_Address proto.InternalMessageInfo

func (m *MsgDistributePlatformIncentives_Address) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *MsgDistributePlatformIncentives_Address) GetAmount() types.Coin {
	if m != nil {
		return m.Amount
	}
	return types.Coin{}
}

type MsgDistributePlatformIncentivesResponse struct {
}

func (m *MsgDistributePlatformIncentivesResponse) Reset() {
	*m = MsgDistributePlatformIncentivesResponse{}
}
func (m *MsgDistributePlatformIncentivesResponse) String() string { return proto.CompactTextString(m) }
func (*MsgDistributePlatformIncentivesResponse) ProtoMessage()    {}
func (*MsgDistributePlatformIncentivesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_41815070f70bd877, []int{176}
}
func (m *MsgDistributePlatformIncentivesResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *MsgDistributePlatformIncentivesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_MsgDistributePlatformIncentivesResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *MsgDistributePlatformIncentivesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgDistributePlatformIncentivesResponse.Merge(m, src)
}
func (m *MsgDistributePlatformIncentivesResponse) XXX_Size() int {
	return m.Size()
}
func (m *MsgDistributePlatformIncentivesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgDistributePlatformIncentivesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MsgDistributePlatformIncentivesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*MsgExercise)(nil), "gitopia.gitopia.gitopia.MsgExercise")
	proto.RegisterType((*MsgExerciseResponse)(nil), "gitopia.gitopia.gitopia.MsgExerciseResponse")
	proto.RegisterType((*MsgToggleForcePush)(nil), "gitopia.gitopia.gitopia.MsgToggleForcePush")
	proto.RegisterType((*MsgToggleForcePushResponse)(nil), "gitopia.gitopia.gitopia.MsgToggleForcePushResponse")
	proto.RegisterType((*MsgCreateTask)(nil), "gitopia.gitopia.gitopia.MsgCreateTask")
	proto.RegisterType((*MsgCreateTaskResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateTaskResponse")
	proto.RegisterType((*MsgUpdateTask)(nil), "gitopia.gitopia.gitopia.MsgUpdateTask")
	proto.RegisterType((*MsgUpdateTaskResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateTaskResponse")
	proto.RegisterType((*MsgDeleteTask)(nil), "gitopia.gitopia.gitopia.MsgDeleteTask")
	proto.RegisterType((*MsgUpdateRepositoryBackupRef)(nil), "gitopia.gitopia.gitopia.MsgUpdateRepositoryBackupRef")
	proto.RegisterType((*MsgUpdateRepositoryBackupRefResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateRepositoryBackupRefResponse")
	proto.RegisterType((*MsgAddRepositoryBackupRef)(nil), "gitopia.gitopia.gitopia.MsgAddRepositoryBackupRef")
	proto.RegisterType((*MsgAddRepositoryBackupRefResponse)(nil), "gitopia.gitopia.gitopia.MsgAddRepositoryBackupRefResponse")
	proto.RegisterType((*MsgDeleteTaskResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteTaskResponse")
	proto.RegisterType((*MsgDeleteStorageProviderResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteStorageProviderResponse")
	proto.RegisterType((*MsgSetBranch)(nil), "gitopia.gitopia.gitopia.MsgSetBranch")
	proto.RegisterType((*MsgSetBranch_Branch)(nil), "gitopia.gitopia.gitopia.MsgSetBranch.Branch")
	proto.RegisterType((*MsgSetBranchResponse)(nil), "gitopia.gitopia.gitopia.MsgSetBranchResponse")
	proto.RegisterType((*MsgSetDefaultBranch)(nil), "gitopia.gitopia.gitopia.MsgSetDefaultBranch")
	proto.RegisterType((*MsgSetDefaultBranchResponse)(nil), "gitopia.gitopia.gitopia.MsgSetDefaultBranchResponse")
	proto.RegisterType((*MsgMultiSetBranch)(nil), "gitopia.gitopia.gitopia.MsgMultiSetBranch")
	proto.RegisterType((*MsgMultiSetBranch_Branch)(nil), "gitopia.gitopia.gitopia.MsgMultiSetBranch.Branch")
	proto.RegisterType((*MsgMultiSetBranchResponse)(nil), "gitopia.gitopia.gitopia.MsgMultiSetBranchResponse")
	proto.RegisterType((*MsgDeleteBranch)(nil), "gitopia.gitopia.gitopia.MsgDeleteBranch")
	proto.RegisterType((*MsgDeleteBranchResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteBranchResponse")
	proto.RegisterType((*MsgMultiDeleteBranch)(nil), "gitopia.gitopia.gitopia.MsgMultiDeleteBranch")
	proto.RegisterType((*MsgMultiDeleteBranchResponse)(nil), "gitopia.gitopia.gitopia.MsgMultiDeleteBranchResponse")
	proto.RegisterType((*MsgSetTag)(nil), "gitopia.gitopia.gitopia.MsgSetTag")
	proto.RegisterType((*MsgSetTag_Tag)(nil), "gitopia.gitopia.gitopia.MsgSetTag.Tag")
	proto.RegisterType((*MsgSetTagResponse)(nil), "gitopia.gitopia.gitopia.MsgSetTagResponse")
	proto.RegisterType((*MsgMultiSetTag)(nil), "gitopia.gitopia.gitopia.MsgMultiSetTag")
	proto.RegisterType((*MsgMultiSetTag_Tag)(nil), "gitopia.gitopia.gitopia.MsgMultiSetTag.Tag")
	proto.RegisterType((*MsgMultiSetTagResponse)(nil), "gitopia.gitopia.gitopia.MsgMultiSetTagResponse")
	proto.RegisterType((*MsgDeleteTag)(nil), "gitopia.gitopia.gitopia.MsgDeleteTag")
	proto.RegisterType((*MsgDeleteTagResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteTagResponse")
	proto.RegisterType((*MsgMultiDeleteTag)(nil), "gitopia.gitopia.gitopia.MsgMultiDeleteTag")
	proto.RegisterType((*MsgMultiDeleteTagResponse)(nil), "gitopia.gitopia.gitopia.MsgMultiDeleteTagResponse")
	proto.RegisterType((*MsgCreateBounty)(nil), "gitopia.gitopia.gitopia.MsgCreateBounty")
	proto.RegisterType((*MsgCreateBountyResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateBountyResponse")
	proto.RegisterType((*MsgUpdateBountyExpiry)(nil), "gitopia.gitopia.gitopia.MsgUpdateBountyExpiry")
	proto.RegisterType((*MsgUpdateBountyExpiryResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateBountyExpiryResponse")
	proto.RegisterType((*MsgCloseBounty)(nil), "gitopia.gitopia.gitopia.MsgCloseBounty")
	proto.RegisterType((*MsgCloseBountyResponse)(nil), "gitopia.gitopia.gitopia.MsgCloseBountyResponse")
	proto.RegisterType((*MsgDeleteBounty)(nil), "gitopia.gitopia.gitopia.MsgDeleteBounty")
	proto.RegisterType((*MsgDeleteBountyResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteBountyResponse")
	proto.RegisterType((*MsgCreateRelease)(nil), "gitopia.gitopia.gitopia.MsgCreateRelease")
	proto.RegisterType((*MsgCreateReleaseResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateReleaseResponse")
	proto.RegisterType((*MsgUpdateRelease)(nil), "gitopia.gitopia.gitopia.MsgUpdateRelease")
	proto.RegisterType((*MsgUpdateReleaseResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateReleaseResponse")
	proto.RegisterType((*MsgDeleteRelease)(nil), "gitopia.gitopia.gitopia.MsgDeleteRelease")
	proto.RegisterType((*MsgDeleteReleaseResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteReleaseResponse")
	proto.RegisterType((*MsgCreatePullRequest)(nil), "gitopia.gitopia.gitopia.MsgCreatePullRequest")
	proto.RegisterType((*MsgCreatePullRequestResponse)(nil), "gitopia.gitopia.gitopia.MsgCreatePullRequestResponse")
	proto.RegisterType((*MsgUpdatePullRequestTitle)(nil), "gitopia.gitopia.gitopia.MsgUpdatePullRequestTitle")
	proto.RegisterType((*MsgUpdatePullRequestTitleResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdatePullRequestTitleResponse")
	proto.RegisterType((*MsgUpdatePullRequestDescription)(nil), "gitopia.gitopia.gitopia.MsgUpdatePullRequestDescription")
	proto.RegisterType((*MsgUpdatePullRequestDescriptionResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdatePullRequestDescriptionResponse")
	proto.RegisterType((*MsgInvokeMergePullRequest)(nil), "gitopia.gitopia.gitopia.MsgInvokeMergePullRequest")
	proto.RegisterType((*MsgInvokeMergePullRequestResponse)(nil), "gitopia.gitopia.gitopia.MsgInvokeMergePullRequestResponse")
	proto.RegisterType((*MsgInvokeDaoMergePullRequest)(nil), "gitopia.gitopia.gitopia.MsgInvokeDaoMergePullRequest")
	proto.RegisterType((*MsgInvokeDaoMergePullRequestResponse)(nil), "gitopia.gitopia.gitopia.MsgInvokeDaoMergePullRequestResponse")
	proto.RegisterType((*MsgSetPullRequestState)(nil), "gitopia.gitopia.gitopia.MsgSetPullRequestState")
	proto.RegisterType((*MsgSetPullRequestStateResponse)(nil), "gitopia.gitopia.gitopia.MsgSetPullRequestStateResponse")
	proto.RegisterType((*MsgAddPullRequestReviewers)(nil), "gitopia.gitopia.gitopia.MsgAddPullRequestReviewers")
	proto.RegisterType((*MsgAddPullRequestReviewersResponse)(nil), "gitopia.gitopia.gitopia.MsgAddPullRequestReviewersResponse")
	proto.RegisterType((*MsgRemovePullRequestReviewers)(nil), "gitopia.gitopia.gitopia.MsgRemovePullRequestReviewers")
	proto.RegisterType((*MsgRemovePullRequestReviewersResponse)(nil), "gitopia.gitopia.gitopia.MsgRemovePullRequestReviewersResponse")
	proto.RegisterType((*MsgAddPullRequestAssignees)(nil), "gitopia.gitopia.gitopia.MsgAddPullRequestAssignees")
	proto.RegisterType((*MsgAddPullRequestAssigneesResponse)(nil), "gitopia.gitopia.gitopia.MsgAddPullRequestAssigneesResponse")
	proto.RegisterType((*MsgRemovePullRequestAssignees)(nil), "gitopia.gitopia.gitopia.MsgRemovePullRequestAssignees")
	proto.RegisterType((*MsgRemovePullRequestAssigneesResponse)(nil), "gitopia.gitopia.gitopia.MsgRemovePullRequestAssigneesResponse")
	proto.RegisterType((*MsgLinkPullRequestIssueByIid)(nil), "gitopia.gitopia.gitopia.MsgLinkPullRequestIssueByIid")
	proto.RegisterType((*MsgLinkPullRequestIssueByIidResponse)(nil), "gitopia.gitopia.gitopia.MsgLinkPullRequestIssueByIidResponse")
	proto.RegisterType((*MsgUnlinkPullRequestIssueByIid)(nil), "gitopia.gitopia.gitopia.MsgUnlinkPullRequestIssueByIid")
	proto.RegisterType((*MsgUnlinkPullRequestIssueByIidResponse)(nil), "gitopia.gitopia.gitopia.MsgUnlinkPullRequestIssueByIidResponse")
	proto.RegisterType((*MsgAddPullRequestLabels)(nil), "gitopia.gitopia.gitopia.MsgAddPullRequestLabels")
	proto.RegisterType((*MsgAddPullRequestLabelsResponse)(nil), "gitopia.gitopia.gitopia.MsgAddPullRequestLabelsResponse")
	proto.RegisterType((*MsgRemovePullRequestLabels)(nil), "gitopia.gitopia.gitopia.MsgRemovePullRequestLabels")
	proto.RegisterType((*MsgRemovePullRequestLabelsResponse)(nil), "gitopia.gitopia.gitopia.MsgRemovePullRequestLabelsResponse")
	proto.RegisterType((*MsgDeletePullRequest)(nil), "gitopia.gitopia.gitopia.MsgDeletePullRequest")
	proto.RegisterType((*MsgDeletePullRequestResponse)(nil), "gitopia.gitopia.gitopia.MsgDeletePullRequestResponse")
	proto.RegisterType((*MsgCreateDao)(nil), "gitopia.gitopia.gitopia.MsgCreateDao")
	proto.RegisterType((*MsgCreateDaoResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateDaoResponse")
	proto.RegisterType((*MsgRenameDao)(nil), "gitopia.gitopia.gitopia.MsgRenameDao")
	proto.RegisterType((*MsgRenameDaoResponse)(nil), "gitopia.gitopia.gitopia.MsgRenameDaoResponse")
	proto.RegisterType((*MsgUpdateDaoDescription)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoDescription")
	proto.RegisterType((*MsgUpdateDaoDescriptionResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoDescriptionResponse")
	proto.RegisterType((*MsgUpdateDaoWebsite)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoWebsite")
	proto.RegisterType((*MsgUpdateDaoWebsiteResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoWebsiteResponse")
	proto.RegisterType((*MsgUpdateDaoLocation)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoLocation")
	proto.RegisterType((*MsgUpdateDaoLocationResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoLocationResponse")
	proto.RegisterType((*MsgUpdateDaoAvatar)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoAvatar")
	proto.RegisterType((*MsgUpdateDaoAvatarResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoAvatarResponse")
	proto.RegisterType((*MsgUpdateDaoMetadata)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoMetadata")
	proto.RegisterType((*MsgUpdateDaoMetadataResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoMetadataResponse")
	proto.RegisterType((*MsgDaoTreasurySpend)(nil), "gitopia.gitopia.gitopia.MsgDaoTreasurySpend")
	proto.RegisterType((*MsgDaoTreasurySpendResponse)(nil), "gitopia.gitopia.gitopia.MsgDaoTreasurySpendResponse")
	proto.RegisterType((*MsgUpdateDaoConfig)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoConfig")
	proto.RegisterType((*MsgUpdateDaoConfigResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoConfigResponse")
	proto.RegisterType((*MsgDaoCreateRelease)(nil), "gitopia.gitopia.gitopia.MsgDaoCreateRelease")
	proto.RegisterType((*MsgDaoCreateReleaseResponse)(nil), "gitopia.gitopia.gitopia.MsgDaoCreateReleaseResponse")
	proto.RegisterType((*MsgDeleteDao)(nil), "gitopia.gitopia.gitopia.MsgDeleteDao")
	proto.RegisterType((*MsgDeleteDaoResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteDaoResponse")
	proto.RegisterType((*MsgCreateComment)(nil), "gitopia.gitopia.gitopia.MsgCreateComment")
	proto.RegisterType((*MsgCreateCommentResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateCommentResponse")
	proto.RegisterType((*MsgUpdateComment)(nil), "gitopia.gitopia.gitopia.MsgUpdateComment")
	proto.RegisterType((*MsgUpdateCommentResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateCommentResponse")
	proto.RegisterType((*MsgDeleteComment)(nil), "gitopia.gitopia.gitopia.MsgDeleteComment")
	proto.RegisterType((*MsgDeleteCommentResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteCommentResponse")
	proto.RegisterType((*MsgToggleCommentResolved)(nil), "gitopia.gitopia.gitopia.MsgToggleCommentResolved")
	proto.RegisterType((*MsgToggleCommentResolvedResponse)(nil), "gitopia.gitopia.gitopia.MsgToggleCommentResolvedResponse")
	proto.RegisterType((*MsgCreateIssue)(nil), "gitopia.gitopia.gitopia.MsgCreateIssue")
	proto.RegisterType((*MsgCreateIssueResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateIssueResponse")
	proto.RegisterType((*MsgUpdateIssueTitle)(nil), "gitopia.gitopia.gitopia.MsgUpdateIssueTitle")
	proto.RegisterType((*MsgUpdateIssueTitleResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateIssueTitleResponse")
	proto.RegisterType((*MsgUpdateIssueDescription)(nil), "gitopia.gitopia.gitopia.MsgUpdateIssueDescription")
	proto.RegisterType((*MsgUpdateIssueDescriptionResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateIssueDescriptionResponse")
	proto.RegisterType((*MsgToggleIssueState)(nil), "gitopia.gitopia.gitopia.MsgToggleIssueState")
	proto.RegisterType((*MsgToggleIssueStateResponse)(nil), "gitopia.gitopia.gitopia.MsgToggleIssueStateResponse")
	proto.RegisterType((*MsgAddIssueAssignees)(nil), "gitopia.gitopia.gitopia.MsgAddIssueAssignees")
	proto.RegisterType((*MsgAddIssueAssigneesResponse)(nil), "gitopia.gitopia.gitopia.MsgAddIssueAssigneesResponse")
	proto.RegisterType((*MsgRemoveIssueAssignees)(nil), "gitopia.gitopia.gitopia.MsgRemoveIssueAssignees")
	proto.RegisterType((*MsgRemoveIssueAssigneesResponse)(nil), "gitopia.gitopia.gitopia.MsgRemoveIssueAssigneesResponse")
	proto.RegisterType((*MsgAddIssueLabels)(nil), "gitopia.gitopia.gitopia.MsgAddIssueLabels")
	proto.RegisterType((*MsgAddIssueLabelsResponse)(nil), "gitopia.gitopia.gitopia.MsgAddIssueLabelsResponse")
	proto.RegisterType((*MsgRemoveIssueLabels)(nil), "gitopia.gitopia.gitopia.MsgRemoveIssueLabels")
	proto.RegisterType((*MsgRemoveIssueLabelsResponse)(nil), "gitopia.gitopia.gitopia.MsgRemoveIssueLabelsResponse")
	proto.RegisterType((*MsgDeleteIssue)(nil), "gitopia.gitopia.gitopia.MsgDeleteIssue")
	proto.RegisterType((*MsgDeleteIssueResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteIssueResponse")
	proto.RegisterType((*MsgCreateRepository)(nil), "gitopia.gitopia.gitopia.MsgCreateRepository")
	proto.RegisterType((*MsgCreateRepositoryResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateRepositoryResponse")
	proto.RegisterType((*MsgForkRepository)(nil), "gitopia.gitopia.gitopia.MsgForkRepository")
	proto.RegisterType((*MsgForkRepositoryResponse)(nil), "gitopia.gitopia.gitopia.MsgForkRepositoryResponse")
	proto.RegisterType((*MsgRenameRepository)(nil), "gitopia.gitopia.gitopia.MsgRenameRepository")
	proto.RegisterType((*MsgRenameRepositoryResponse)(nil), "gitopia.gitopia.gitopia.MsgRenameRepositoryResponse")
	proto.RegisterType((*MsgUpdateRepositoryDescription)(nil), "gitopia.gitopia.gitopia.MsgUpdateRepositoryDescription")
	proto.RegisterType((*MsgUpdateRepositoryDescriptionResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateRepositoryDescriptionResponse")
	proto.RegisterType((*MsgToggleRepositoryArchived)(nil), "gitopia.gitopia.gitopia.MsgToggleRepositoryArchived")
	proto.RegisterType((*MsgToggleRepositoryArchivedResponse)(nil), "gitopia.gitopia.gitopia.MsgToggleRepositoryArchivedResponse")
	proto.RegisterType((*MsgChangeOwner)(nil), "gitopia.gitopia.gitopia.MsgChangeOwner")
	proto.RegisterType((*MsgChangeOwnerResponse)(nil), "gitopia.gitopia.gitopia.MsgChangeOwnerResponse")
	proto.RegisterType((*MsgUpdateRepositoryCollaborator)(nil), "gitopia.gitopia.gitopia.MsgUpdateRepositoryCollaborator")
	proto.RegisterType((*MsgUpdateRepositoryCollaboratorResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateRepositoryCollaboratorResponse")
	proto.RegisterType((*MsgUpdateDaoRepositoryCollaborator)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoRepositoryCollaborator")
	proto.RegisterType((*MsgUpdateDaoRepositoryCollaboratorResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoRepositoryCollaboratorResponse")
	proto.RegisterType((*MsgRemoveRepositoryCollaborator)(nil), "gitopia.gitopia.gitopia.MsgRemoveRepositoryCollaborator")
	proto.RegisterType((*MsgRemoveRepositoryCollaboratorResponse)(nil), "gitopia.gitopia.gitopia.MsgRemoveRepositoryCollaboratorResponse")
	proto.RegisterType((*MsgRemoveDaoRepositoryCollaborator)(nil), "gitopia.gitopia.gitopia.MsgRemoveDaoRepositoryCollaborator")
	proto.RegisterType((*MsgRemoveDaoRepositoryCollaboratorResponse)(nil), "gitopia.gitopia.gitopia.MsgRemoveDaoRepositoryCollaboratorResponse")
	proto.RegisterType((*MsgCreateRepositoryLabel)(nil), "gitopia.gitopia.gitopia.MsgCreateRepositoryLabel")
	proto.RegisterType((*MsgCreateRepositoryLabelResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateRepositoryLabelResponse")
	proto.RegisterType((*MsgUpdateRepositoryLabel)(nil), "gitopia.gitopia.gitopia.MsgUpdateRepositoryLabel")
	proto.RegisterType((*MsgUpdateRepositoryLabelResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateRepositoryLabelResponse")
	proto.RegisterType((*MsgDeleteRepositoryLabel)(nil), "gitopia.gitopia.gitopia.MsgDeleteRepositoryLabel")
	proto.RegisterType((*MsgDeleteRepositoryLabelResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteRepositoryLabelResponse")
	proto.RegisterType((*MsgToggleRepositoryForking)(nil), "gitopia.gitopia.gitopia.MsgToggleRepositoryForking")
	proto.RegisterType((*MsgToggleRepositoryForkingResponse)(nil), "gitopia.gitopia.gitopia.MsgToggleRepositoryForkingResponse")
	proto.RegisterType((*MsgToggleArweaveBackup)(nil), "gitopia.gitopia.gitopia.MsgToggleArweaveBackup")
	proto.RegisterType((*MsgToggleArweaveBackupResponse)(nil), "gitopia.gitopia.gitopia.MsgToggleArweaveBackupResponse")
	proto.RegisterType((*MsgDeleteRepository)(nil), "gitopia.gitopia.gitopia.MsgDeleteRepository")
	proto.RegisterType((*MsgDeleteRepositoryResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteRepositoryResponse")
	proto.RegisterType((*MsgCreateUser)(nil), "gitopia.gitopia.gitopia.MsgCreateUser")
	proto.RegisterType((*MsgCreateUserResponse)(nil), "gitopia.gitopia.gitopia.MsgCreateUserResponse")
	proto.RegisterType((*MsgUpdateUserUsername)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserUsername")
	proto.RegisterType((*MsgUpdateUserUsernameResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserUsernameResponse")
	proto.RegisterType((*MsgUpdateUserName)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserName")
	proto.RegisterType((*MsgUpdateUserNameResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserNameResponse")
	proto.RegisterType((*MsgUpdateUserBio)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserBio")
	proto.RegisterType((*MsgUpdateUserBioResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserBioResponse")
	proto.RegisterType((*MsgUpdateUserAvatar)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserAvatar")
	proto.RegisterType((*MsgUpdateUserAvatarResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserAvatarResponse")
	proto.RegisterType((*MsgDeleteUser)(nil), "gitopia.gitopia.gitopia.MsgDeleteUser")
	proto.RegisterType((*MsgDeleteUserResponse)(nil), "gitopia.gitopia.gitopia.MsgDeleteUserResponse")
	proto.RegisterType((*MsgUpdateUserPinnedRepositories)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserPinnedRepositories")
	proto.RegisterType((*MsgUpdateUserPinnedRepositoriesResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateUserPinnedRepositoriesResponse")
	proto.RegisterType((*MsgUpdateDaoPinnedRepositories)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoPinnedRepositories")
	proto.RegisterType((*MsgUpdateDaoPinnedRepositoriesResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateDaoPinnedRepositoriesResponse")
	proto.RegisterType((*MsgUpdateParams)(nil), "gitopia.gitopia.gitopia.MsgUpdateParams")
	proto.RegisterType((*MsgUpdateParamsResponse)(nil), "gitopia.gitopia.gitopia.MsgUpdateParamsResponse")
	proto.RegisterType((*MsgDistributePlatformIncentives)(nil), "gitopia.gitopia.gitopia.MsgDistributePlatformIncentives")
	proto.RegisterType((*MsgDistributePlatformIncentives_Address)(nil), "gitopia.gitopia.gitopia.MsgDistributePlatformIncentives.Address")
	proto.RegisterType((*MsgDistributePlatformIncentivesResponse)(nil), "gitopia.gitopia.gitopia.MsgDistributePlatformIncentivesResponse")
}

func init() { proto.RegisterFile("gitopia/gitopia/gitopia/tx.proto", fileDescriptor_41815070f70bd877) }

var fileDescriptor_41815070f70bd877 = []byte{
	// 5048 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x5d, 0x5f, 0x6c, 0x1c, 0xc7,
	0x79, 0xf7, 0xf2, 0x8e, 0x7f, 0x6e, 0xa4, 0xd0, 0xd2, 0x49, 0x96, 0x8e, 0x2b, 0x85, 0xa2, 0x57,
	0x96, 0x48, 0x51, 0xfc, 0x23, 0x52, 0x96, 0xac, 0xd0, 0xb1, 0x62, 0xfe, 0x51, 0x1a, 0x16, 0x66,
	0x22, 0x1c, 0x29, 0x24, 0xed, 0x43, 0xdd, 0xe5, 0xdd, 0x70, 0xb9, 0xe5, 0xdd, 0xed, 0x75, 0x77,
	0x8f, 0x32, 0xd1, 0x02, 0x46, 0x1d, 0xa7, 0x4e, 0x13, 0x24, 0x88, 0x5b, 0x03, 0x2d, 0xdc, 0x14,
	0x2d, 0xda, 0x97, 0xa4, 0x40, 0x0b, 0x17, 0xc8, 0x43, 0x9f, 0xfa, 0x9c, 0xa7, 0xd6, 0x0d, 0xd0,
	0xa2, 0x7d, 0xa9, 0x03, 0xfb, 0xc1, 0x0f, 0x7d, 0x08, 0xfa, 0x50, 0xa0, 0x8f, 0xc5, 0xfc, 0xd9,
	0xd9, 0x99, 0xdd, 0x9d, 0xd9, 0xd9, 0x23, 0x45, 0xca, 0x69, 0x5f, 0xa4, 0xdb, 0xdd, 0xef, 0x9b,
	0xf9, 0xcd, 0x37, 0xdf, 0x7c, 0x33, 0xf3, 0xcd, 0xf7, 0x0d, 0xc1, 0x84, 0xe3, 0x86, 0x5e, 0xd7,
	0xb5, 0xe7, 0x93, 0xff, 0x87, 0x6f, 0xcc, 0x75, 0x7d, 0x2f, 0xf4, 0xaa, 0x17, 0xe9, 0x9b, 0xb9,
	0xc4, 0xff, 0xe6, 0x79, 0xc7, 0x73, 0x3c, 0x4c, 0x33, 0x8f, 0x7e, 0x11, 0x72, 0xd3, 0x92, 0x16,
	0x68, 0x07, 0x7b, 0x94, 0xe6, 0x05, 0x19, 0xcd, 0xb6, 0x6f, 0x77, 0x1a, 0xbb, 0x94, 0xea, 0x79,
	0x79, 0x49, 0x4e, 0x6e, 0x41, 0x5e, 0xaf, 0x13, 0x1e, 0x50, 0xaa, 0x6b, 0x32, 0x2a, 0x1f, 0xb6,
	0xa0, 0x1d, 0x40, 0x4a, 0x76, 0x43, 0x46, 0xd6, 0xed, 0xb5, 0x5a, 0x75, 0xf8, 0xdb, 0x3d, 0x18,
	0x84, 0x79, 0xd0, 0x9a, 0xb6, 0x97, 0x57, 0x69, 0xc3, 0x6b, 0xb7, 0x61, 0x27, 0x2a, 0xe9, 0xaa,
	0x8c, 0xcc, 0x0d, 0x82, 0x5e, 0x84, 0x6c, 0x4a, 0xde, 0x80, 0xae, 0x17, 0xb8, 0xa1, 0xe7, 0x1f,
	0xe4, 0x15, 0xf7, 0x78, 0xd7, 0x73, 0x03, 0x4a, 0x34, 0xde, 0xf0, 0x82, 0xb6, 0x17, 0xcc, 0x6f,
	0xdb, 0x01, 0x9c, 0xdf, 0x5f, 0xd8, 0x86, 0xa1, 0xbd, 0x30, 0xdf, 0xf0, 0xdc, 0x4e, 0x5e, 0x75,
	0x76, 0x18, 0xda, 0x8d, 0x5d, 0x0e, 0xfd, 0x75, 0x39, 0x30, 0xbb, 0x11, 0xba, 0x5e, 0x27, 0xaf,
	0x9f, 0xba, 0xb6, 0x6f, 0xb7, 0x23, 0x5c, 0x17, 0x29, 0xae, 0x76, 0xe0, 0xcc, 0xef, 0x2f, 0xa0,
	0xff, 0xe8, 0x87, 0x31, 0xf2, 0xe1, 0x75, 0xa2, 0x6c, 0xe4, 0x81, 0x7e, 0xba, 0x44, 0x79, 0x1c,
	0xdf, 0xeb, 0x75, 0x11, 0x57, 0x78, 0xd0, 0x85, 0xd1, 0xc7, 0xb3, 0x76, 0xdb, 0xed, 0x78, 0xf3,
	0xf8, 0x5f, 0xf2, 0xca, 0xfa, 0x53, 0x03, 0x9c, 0xda, 0x08, 0x9c, 0x07, 0x6f, 0x40, 0xbf, 0xe1,
	0x06, 0xb0, 0x5a, 0x03, 0xc3, 0x0d, 0x1f, 0xda, 0xa1, 0xe7, 0xd7, 0x8c, 0x09, 0x63, 0xaa, 0x52,
	0x8f, 0x1e, 0xab, 0xdb, 0x60, 0xc8, 0x6e, 0x23, 0x35, 0xaa, 0x0d, 0x4c, 0x18, 0x53, 0xa7, 0x16,
	0xc7, 0xe6, 0x68, 0xc5, 0x48, 0x6c, 0x73, 0x54, 0x6c, 0x73, 0xab, 0x9e, 0xdb, 0x59, 0x99, 0xff,
	0xe9, 0x7f, 0x5c, 0x79, 0xe6, 0xad, 0x8f, 0xae, 0x4c, 0x3a, 0x6e, 0xb8, 0xdb, 0xdb, 0x9e, 0x6b,
	0x78, 0x6d, 0x8a, 0x92, 0xfe, 0x37, 0x1b, 0x34, 0xf7, 0x28, 0x32, 0xc4, 0x50, 0xa7, 0x25, 0x57,
	0x47, 0xc1, 0x40, 0xe8, 0xd5, 0x4a, 0xb8, 0xe2, 0x81, 0xd0, 0xb3, 0x9e, 0x03, 0xe7, 0x38, 0x70,
	0x75, 0x18, 0x74, 0xbd, 0x4e, 0x00, 0xad, 0x3f, 0x37, 0x40, 0x75, 0x23, 0x70, 0xb6, 0x3c, 0xc7,
	0x69, 0xc1, 0x2f, 0x7b, 0x7e, 0x03, 0x3e, 0xec, 0x05, 0xbb, 0x0a, 0xec, 0x5f, 0x03, 0xa7, 0x63,
	0xd5, 0x58, 0x6f, 0xd2, 0x16, 0x5c, 0x9b, 0x93, 0x0c, 0xe5, 0xb9, 0x3a, 0x47, 0xbc, 0x52, 0x46,
	0xad, 0xa9, 0x0b, 0x05, 0x54, 0xc7, 0x01, 0x20, 0x63, 0xf3, 0xab, 0x76, 0x1b, 0x52, 0xc0, 0xdc,
	0x1b, 0xeb, 0x32, 0x30, 0xd3, 0x00, 0x19, 0xfe, 0xb7, 0x0d, 0xf0, 0xb9, 0x8d, 0xc0, 0x59, 0x45,
	0xe8, 0xe0, 0x96, 0x1d, 0xec, 0x29, 0xa0, 0xbf, 0x02, 0x46, 0x90, 0xa5, 0xd8, 0x3a, 0xe8, 0x42,
	0x0c, 0x7b, 0x74, 0xf1, 0x79, 0x29, 0xec, 0x2d, 0x4a, 0x58, 0x67, 0x2c, 0x55, 0x13, 0x8c, 0x74,
	0x7d, 0x6f, 0xdf, 0x6d, 0x42, 0x9f, 0xc2, 0x64, 0xcf, 0xd6, 0x24, 0x78, 0x4e, 0x40, 0x11, 0xe1,
	0x43, 0xdd, 0xe0, 0x36, 0x31, 0x90, 0x72, 0x7d, 0xc0, 0x6d, 0x5a, 0xdf, 0x23, 0x78, 0x1f, 0x75,
	0x9b, 0xf9, 0x78, 0x09, 0xef, 0x40, 0xc4, 0x5b, 0xbd, 0x07, 0x06, 0x83, 0xd0, 0x0e, 0x89, 0x90,
	0x46, 0x17, 0x2d, 0x25, 0xf8, 0x4d, 0x44, 0x59, 0x27, 0x0c, 0xa8, 0x8e, 0x36, 0x0c, 0x02, 0xdb,
	0x81, 0xb5, 0x32, 0xa9, 0x83, 0x3e, 0x5a, 0x17, 0x31, 0xf0, 0x18, 0x0e, 0x13, 0xec, 0x17, 0x30,
	0xce, 0x35, 0xd8, 0x82, 0x45, 0x71, 0x5a, 0x1f, 0x1b, 0xe0, 0x32, 0x2b, 0x34, 0xee, 0xff, 0x15,
	0xbb, 0xb1, 0xd7, 0xeb, 0xd6, 0xe1, 0xce, 0x71, 0x6a, 0xd7, 0x03, 0x24, 0x33, 0xcf, 0x8f, 0x64,
	0x36, 0xaf, 0x51, 0x12, 0xc1, 0x39, 0xb7, 0x89, 0xd8, 0xea, 0x84, 0xbb, 0x7a, 0x06, 0x94, 0x7c,
	0xb8, 0x43, 0x85, 0x87, 0x7e, 0x5a, 0xd7, 0xc1, 0x0b, 0xaa, 0x36, 0x32, 0x39, 0x7e, 0x64, 0x80,
	0xb1, 0x8d, 0xc0, 0x59, 0x6e, 0x36, 0x7f, 0x59, 0x25, 0x71, 0x15, 0x3c, 0x2f, 0x6d, 0x20, 0x13,
	0x03, 0xd1, 0xb3, 0x58, 0x9d, 0xd8, 0x07, 0x0b, 0x4c, 0xb0, 0x0f, 0xa8, 0x22, 0xdb, 0x81, 0x0f,
	0xe9, 0xa8, 0x62, 0x34, 0xff, 0x6d, 0x80, 0xd3, 0x1b, 0x81, 0xb3, 0x09, 0xc3, 0x15, 0x6c, 0x17,
	0x8e, 0x53, 0x6c, 0xbf, 0x0a, 0x86, 0x88, 0x31, 0xc2, 0x72, 0x3b, 0xb5, 0x38, 0x23, 0x2d, 0x8a,
	0x47, 0x38, 0x47, 0xfe, 0xa3, 0x25, 0xd2, 0x12, 0xcc, 0x39, 0x30, 0x44, 0x1b, 0x50, 0x05, 0xe5,
	0x0e, 0x32, 0x77, 0x04, 0x3d, 0xfe, 0x8d, 0x24, 0x1b, 0xec, 0xda, 0x18, 0x71, 0xa5, 0x8e, 0x7e,
	0x5a, 0x17, 0xc0, 0x79, 0xbe, 0x50, 0x26, 0x8f, 0x3f, 0x31, 0xb0, 0x31, 0xdf, 0x84, 0xe1, 0x1a,
	0xdc, 0xb1, 0x7b, 0xad, 0x13, 0x10, 0xcb, 0x05, 0x41, 0x2c, 0x95, 0xa8, 0x89, 0xd6, 0xe7, 0xc1,
	0xa5, 0x0c, 0x64, 0x0c, 0xf9, 0x37, 0x07, 0xc0, 0xd9, 0x8d, 0xc0, 0xd9, 0xe8, 0xb5, 0x42, 0xf7,
	0x44, 0xba, 0x73, 0x13, 0x8c, 0x10, 0xa4, 0x30, 0xa8, 0x95, 0x26, 0x4a, 0x53, 0xa7, 0x16, 0x17,
	0x54, 0x1d, 0x2a, 0x02, 0x15, 0x7b, 0x95, 0x15, 0x54, 0xb8, 0x5f, 0x2f, 0x61, 0x93, 0x20, 0x96,
	0xcd, 0x44, 0xf4, 0x9e, 0x01, 0x9e, 0x65, 0x23, 0xe2, 0xe9, 0xe9, 0xd8, 0x31, 0x70, 0x31, 0x81,
	0x8a, 0x21, 0xfe, 0x33, 0x03, 0xeb, 0x29, 0x6e, 0xcf, 0x49, 0xc1, 0x36, 0x13, 0xfd, 0x5a, 0x89,
	0xbb, 0xc7, 0x1a, 0xc7, 0xd3, 0x51, 0x0a, 0x1e, 0xc3, 0xff, 0x89, 0x01, 0x2a, 0x44, 0x69, 0xb7,
	0x6c, 0xe7, 0x38, 0x41, 0xdf, 0x07, 0xa5, 0xd0, 0x76, 0xa8, 0x61, 0xb9, 0x9e, 0x63, 0x58, 0xb6,
	0x6c, 0x67, 0x6e, 0xcb, 0x76, 0x68, 0x41, 0x88, 0xd1, 0xbc, 0x09, 0x4a, 0x08, 0xb1, 0x9e, 0xd2,
	0x9d, 0xc3, 0x23, 0x8f, 0x14, 0xc4, 0x9a, 0xfe, 0x0b, 0x03, 0x8c, 0x72, 0xaa, 0x78, 0xcc, 0xed,
	0x7f, 0x00, 0xca, 0xa1, 0xed, 0x44, 0x03, 0xf1, 0xa6, 0xce, 0x40, 0x14, 0xa5, 0x80, 0xd9, 0x8b,
	0x89, 0xa1, 0x06, 0x2e, 0x88, 0xc5, 0x31, 0x59, 0x7c, 0x97, 0xcc, 0x32, 0xd1, 0x1c, 0x75, 0xac,
	0x92, 0x38, 0x13, 0x6b, 0x42, 0x05, 0xf7, 0x2d, 0xb5, 0xfd, 0x0c, 0x0c, 0x43, 0xf9, 0x87, 0x46,
	0x6c, 0x41, 0x4f, 0x04, 0x6a, 0x95, 0xeb, 0xb4, 0x0a, 0xe9, 0x01, 0xde, 0xa0, 0xa5, 0x11, 0xff,
	0x78, 0x00, 0x1b, 0x34, 0xb2, 0x38, 0x5e, 0xc1, 0xbb, 0x67, 0x05, 0xde, 0x06, 0xb7, 0x37, 0x2a,
	0xa9, 0xf7, 0x46, 0xb7, 0x10, 0xba, 0xbf, 0xfe, 0xe8, 0xca, 0x94, 0xe6, 0xde, 0x28, 0x60, 0x9b,
	0xa3, 0x0b, 0x60, 0x08, 0xbe, 0xd1, 0x75, 0xfd, 0x03, 0x2c, 0xf1, 0x52, 0x9d, 0x3e, 0x55, 0xad,
	0x84, 0xb0, 0xca, 0x78, 0x4d, 0x2b, 0xb6, 0xff, 0x32, 0xa8, 0x74, 0x6d, 0x1f, 0x76, 0xc2, 0x75,
	0xb7, 0x59, 0x1b, 0xc4, 0x04, 0xf1, 0x8b, 0xea, 0x2b, 0x60, 0x88, 0x3c, 0xd4, 0x86, 0xf0, 0x32,
	0x4b, 0x2e, 0x68, 0x22, 0x89, 0x87, 0x98, 0xb8, 0x4e, 0x99, 0xac, 0x1b, 0xd8, 0xca, 0xf2, 0xa2,
	0x92, 0xee, 0x24, 0x7e, 0x8d, 0x5b, 0xb9, 0x13, 0xd2, 0x07, 0xa4, 0x11, 0xfa, 0x1b, 0x0a, 0x89,
	0x18, 0xac, 0x2b, 0xe0, 0xf3, 0x99, 0x45, 0xb3, 0x2e, 0x5d, 0xc2, 0x56, 0x63, 0xb5, 0xe5, 0x05,
	0xf9, 0x1d, 0x9a, 0xdc, 0x1d, 0x90, 0x01, 0xc8, 0xf1, 0xb2, 0x52, 0x5f, 0xe6, 0x27, 0xbe, 0xa2,
	0xc5, 0x0a, 0xf3, 0x93, 0x58, 0xee, 0x2f, 0x06, 0xc0, 0x19, 0x26, 0xd5, 0x3a, 0x71, 0xcc, 0x1c,
	0xe7, 0x88, 0xa9, 0x81, 0xe1, 0xd0, 0x76, 0xb8, 0xed, 0x6d, 0xf4, 0x88, 0x3a, 0x20, 0xb4, 0x7d,
	0x07, 0x86, 0x74, 0x3d, 0x4d, 0x9f, 0x98, 0x29, 0x1b, 0xe4, 0x4c, 0xd9, 0x04, 0x38, 0xd5, 0x84,
	0x41, 0xc3, 0x77, 0xbb, 0xa1, 0xeb, 0x75, 0xb0, 0x7a, 0x55, 0xea, 0xfc, 0x2b, 0x44, 0x11, 0xbb,
	0x51, 0x82, 0xda, 0x30, 0xa1, 0xe0, 0x5e, 0x55, 0xcf, 0x83, 0xc1, 0xa6, 0x6f, 0xef, 0x84, 0xb5,
	0x91, 0x09, 0x63, 0x6a, 0xa4, 0x4e, 0x1e, 0xd0, 0x0e, 0xbc, 0xeb, 0x47, 0x82, 0xa9, 0x55, 0xf0,
	0x27, 0xee, 0x0d, 0xe2, 0x72, 0x83, 0x2d, 0xdb, 0xa9, 0x01, 0xc2, 0x85, 0x1f, 0x84, 0xed, 0xf0,
	0xa9, 0xc4, 0x76, 0x78, 0x1a, 0xd4, 0x92, 0x02, 0x97, 0xea, 0xf1, 0xdf, 0x92, 0xde, 0x89, 0x76,
	0x52, 0x79, 0xbd, 0x93, 0xd4, 0xe1, 0xff, 0x7b, 0xc2, 0x35, 0xb1, 0x70, 0x05, 0x79, 0x31, 0x55,
	0xff, 0x06, 0x96, 0x25, 0x19, 0x05, 0xc5, 0x65, 0xa9, 0xf2, 0x70, 0x90, 0x5a, 0x85, 0x92, 0x59,
	0xad, 0x1f, 0x96, 0xf0, 0x64, 0x45, 0xfa, 0xfb, 0x61, 0xec, 0xd2, 0x54, 0x54, 0x7d, 0x1e, 0x0c,
	0x86, 0x6e, 0xd8, 0x82, 0x74, 0x6a, 0x26, 0x0f, 0xc9, 0x6e, 0x28, 0xa5, 0xbb, 0x61, 0x1c, 0x80,
	0x5d, 0x68, 0x37, 0xc9, 0x0a, 0x8e, 0x76, 0x2c, 0xf7, 0xa6, 0xfa, 0x75, 0x70, 0x06, 0x3d, 0xf1,
	0x63, 0x12, 0x77, 0x74, 0xc1, 0x01, 0x9c, 0x2a, 0x04, 0xbb, 0xa9, 0xec, 0x80, 0x2e, 0x1d, 0xa9,
	0x82, 0x70, 0x6f, 0x50, 0xc5, 0xdb, 0x58, 0x26, 0x5c, 0xc5, 0xc3, 0x7d, 0x54, 0x9c, 0x2c, 0x04,
	0xcd, 0x37, 0x3e, 0xdc, 0x77, 0xe1, 0x63, 0xe8, 0x07, 0xb5, 0x11, 0x3c, 0xe9, 0xc6, 0x2f, 0xd0,
	0x57, 0x3b, 0x08, 0x5c, 0xa7, 0x03, 0x61, 0x50, 0xab, 0x90, 0xaf, 0xec, 0x05, 0xea, 0xd0, 0x96,
	0xbd, 0x0d, 0x5b, 0xeb, 0xcd, 0xa0, 0x06, 0x26, 0x4a, 0x53, 0xe5, 0x3a, 0x7b, 0x46, 0x9c, 0xd8,
	0x11, 0xbc, 0xee, 0x36, 0x83, 0xda, 0x29, 0xfc, 0x31, 0x7e, 0x61, 0xbd, 0x8a, 0xd7, 0xcc, 0xa9,
	0x1e, 0x95, 0x8d, 0x62, 0xb4, 0x80, 0x71, 0x99, 0x2e, 0xa1, 0x9f, 0xd6, 0xef, 0x11, 0xc7, 0x07,
	0xd1, 0x53, 0xae, 0x88, 0x2d, 0xdc, 0xd3, 0x72, 0xcd, 0xb0, 0x32, 0xcc, 0x6f, 0x39, 0xbd, 0x5c,
	0x42, 0xb5, 0x95, 0x58, 0x6d, 0xb1, 0x3e, 0x95, 0x39, 0x7d, 0xa2, 0xae, 0x89, 0x6c, 0x08, 0x4c,
	0x7b, 0xff, 0xc8, 0x00, 0x57, 0xb2, 0xa8, 0xd6, 0x38, 0xb5, 0x3b, 0x6a, 0xb8, 0x09, 0x45, 0x2f,
	0xa7, 0x14, 0xdd, 0xba, 0x01, 0x26, 0x73, 0x40, 0xb1, 0x06, 0xbc, 0x43, 0x24, 0xbd, 0xde, 0xd9,
	0xf7, 0xf6, 0xe0, 0x06, 0xf4, 0x1d, 0xcd, 0x31, 0xd8, 0x1f, 0x74, 0xde, 0x48, 0x94, 0x13, 0x46,
	0x82, 0xc8, 0x3b, 0x1b, 0x08, 0x83, 0xfb, 0x33, 0xe2, 0x1e, 0x24, 0x54, 0x6b, 0xb6, 0x97, 0x42,
	0x3c, 0x07, 0x06, 0xed, 0x66, 0xdb, 0xed, 0x10, 0xbc, 0x2b, 0xb5, 0x9f, 0xfd, 0x64, 0xf6, 0x3c,
	0x5d, 0x04, 0x2e, 0x37, 0x9b, 0x3e, 0x0c, 0x82, 0xcd, 0xd0, 0x77, 0x3b, 0x4e, 0x9d, 0x90, 0x1d,
	0x7d, 0x3b, 0x96, 0x6e, 0xbd, 0xf5, 0xe9, 0x07, 0xd3, 0xa4, 0xf4, 0xef, 0x7c, 0xfa, 0xc1, 0x34,
	0x3b, 0x93, 0x91, 0x62, 0xa6, 0xee, 0x40, 0xe9, 0x77, 0xd6, 0xf8, 0x9f, 0x1b, 0x78, 0xf9, 0xb3,
	0x09, 0x43, 0xee, 0xeb, 0x66, 0xe4, 0xa4, 0x3d, 0xea, 0x21, 0x41, 0xdc, 0xc5, 0x74, 0x48, 0x10,
	0x57, 0xf0, 0x75, 0x30, 0xda, 0x46, 0xe0, 0x56, 0xbd, 0x76, 0xdb, 0x0d, 0x37, 0x77, 0x6d, 0x3a,
	0x0f, 0x26, 0xde, 0x22, 0x0d, 0xa5, 0xc7, 0x49, 0x2b, 0x5e, 0xf3, 0x20, 0x9a, 0x11, 0xb9, 0x57,
	0x64, 0x7e, 0x0d, 0xf6, 0xa8, 0x9d, 0x2b, 0xd7, 0xe9, 0x93, 0x75, 0x17, 0x8c, 0x67, 0xb7, 0x90,
	0x19, 0x0f, 0x86, 0xcc, 0xe0, 0x90, 0x59, 0xdf, 0x31, 0xb0, 0xa7, 0x7f, 0xb9, 0xd9, 0x14, 0x04,
	0x17, 0x59, 0xba, 0xa3, 0x16, 0x8f, 0x60, 0x57, 0xcb, 0x09, 0xbb, 0x6a, 0xbd, 0x00, 0x2c, 0x39,
	0x16, 0xd6, 0x9b, 0xdf, 0x33, 0xf0, 0x4a, 0xb9, 0x0e, 0xdb, 0xde, 0x3e, 0x7c, 0x0a, 0x50, 0x4f,
	0x82, 0x6b, 0x4a, 0x38, 0x0c, 0x78, 0xa6, 0xac, 0x97, 0xd9, 0xbc, 0xf1, 0x04, 0x50, 0xc7, 0xb3,
	0x54, 0x39, 0x31, 0x4b, 0x65, 0xca, 0x9a, 0x61, 0xc9, 0x95, 0xf5, 0x49, 0xa1, 0x96, 0xc8, 0x3a,
	0x0d, 0xfc, 0x2f, 0x88, 0xbd, 0x7b, 0xcd, 0xed, 0xec, 0x71, 0x74, 0xeb, 0x68, 0xaa, 0x5d, 0x39,
	0x58, 0x27, 0x4b, 0xd8, 0x43, 0xe0, 0xbe, 0x0e, 0x46, 0xb9, 0x53, 0xe4, 0x75, 0xd6, 0x84, 0xc4,
	0x5b, 0x64, 0xef, 0xa2, 0xe9, 0x9d, 0xee, 0x6b, 0xd9, 0x33, 0xb5, 0x5e, 0x52, 0x84, 0xac, 0x29,
	0x7f, 0x69, 0xe0, 0xb1, 0xfd, 0xa8, 0xd3, 0x7a, 0x8a, 0x1b, 0x33, 0x05, 0xae, 0xab, 0x31, 0xb2,
	0xe6, 0x7c, 0xcb, 0xc0, 0x9b, 0x46, 0x51, 0xf3, 0x5e, 0x43, 0x0b, 0xa4, 0xe0, 0x49, 0x4c, 0x9b,
	0x6c, 0x29, 0x56, 0x16, 0x97, 0x62, 0xd6, 0xf3, 0x78, 0x01, 0x92, 0x05, 0x83, 0x41, 0xfd, 0x36,
	0x19, 0xb0, 0x29, 0x75, 0x3b, 0x01, 0xb4, 0x64, 0xb8, 0x4a, 0x90, 0x30, 0xc0, 0x3b, 0x9c, 0xff,
	0xea, 0x09, 0x2e, 0x47, 0xa8, 0x73, 0x37, 0x55, 0x0f, 0xc3, 0xf1, 0x3f, 0x03, 0xd8, 0xab, 0x47,
	0x56, 0xb2, 0x6b, 0xb6, 0xa7, 0x00, 0x10, 0x6d, 0x0c, 0x07, 0xe4, 0x1b, 0xc3, 0x8c, 0x1d, 0x09,
	0xb2, 0x12, 0xfb, 0x76, 0x68, 0xfb, 0x8f, 0xfc, 0x16, 0x9d, 0x6a, 0xe3, 0x17, 0x58, 0x90, 0x5e,
	0xc3, 0xc6, 0xcc, 0x64, 0xa2, 0x65, 0xcf, 0x08, 0xc9, 0x63, 0xb8, 0x1d, 0xb8, 0x21, 0xa4, 0xd3,
	0x6b, 0xf4, 0x58, 0x5d, 0x05, 0xc3, 0x6d, 0xd8, 0xde, 0x46, 0x36, 0x7e, 0x18, 0x7b, 0xc1, 0xc6,
	0x23, 0x2f, 0x18, 0x0e, 0x46, 0x98, 0xdb, 0x5f, 0x98, 0xdb, 0xc0, 0xdf, 0x69, 0x6b, 0x57, 0x2a,
	0x68, 0xf3, 0xf0, 0xa3, 0x4f, 0x3f, 0x98, 0x36, 0xea, 0x11, 0x67, 0xf5, 0x2a, 0xf8, 0xdc, 0xbe,
	0x17, 0xba, 0x1d, 0xe7, 0xf5, 0x2e, 0xf4, 0x5d, 0xaf, 0x89, 0xf7, 0xa5, 0x95, 0xfa, 0x69, 0xf2,
	0xf2, 0x21, 0x7e, 0x87, 0xb7, 0xa7, 0xd0, 0x6f, 0xc0, 0x4e, 0x68, 0x3b, 0x64, 0x7b, 0x5a, 0xa9,
	0x73, 0x6f, 0xaa, 0x4b, 0x60, 0xa8, 0xe1, 0x75, 0x76, 0x5c, 0xb2, 0x3f, 0x3d, 0xa5, 0x38, 0x74,
	0x5e, 0xb3, 0xbd, 0x55, 0x4c, 0x59, 0xa7, 0x1c, 0xd6, 0x75, 0x6e, 0x57, 0xb8, 0x66, 0x7b, 0x19,
	0x7b, 0x87, 0x0a, 0xf6, 0x00, 0xbc, 0x4d, 0x1c, 0xaf, 0x75, 0x88, 0x24, 0x8e, 0xba, 0xa8, 0xe8,
	0x02, 0x30, 0xde, 0xc7, 0xe2, 0x02, 0x59, 0x47, 0x96, 0xe2, 0x8e, 0x5c, 0x9a, 0x10, 0x97, 0x74,
	0x67, 0xa3, 0x25, 0x1d, 0xab, 0x95, 0x7a, 0x5c, 0xd9, 0x33, 0xd3, 0xa0, 0x1f, 0x11, 0x2b, 0x41,
	0x96, 0xe2, 0x6b, 0xb6, 0xc7, 0xef, 0x0b, 0x0e, 0x8b, 0x34, 0x57, 0xbd, 0x96, 0x6e, 0x8a, 0xb8,
	0x2f, 0x47, 0xb8, 0xb3, 0xe0, 0x50, 0x43, 0x92, 0xf5, 0x89, 0xb5, 0xe6, 0x07, 0xe4, 0xec, 0x90,
	0xd1, 0x7c, 0x9d, 0xaa, 0xdc, 0x61, 0x5b, 0x72, 0x06, 0x94, 0x7a, 0x7e, 0x2b, 0xf2, 0x60, 0xf7,
	0xfc, 0xd6, 0xd2, 0xa4, 0x88, 0xbc, 0x96, 0x42, 0x4e, 0xab, 0xa6, 0x67, 0x86, 0xc9, 0xd7, 0x0c,
	0xf1, 0x0f, 0xc9, 0xf1, 0x12, 0xfb, 0xfe, 0x5a, 0x34, 0x7e, 0x0e, 0x0b, 0x99, 0x1f, 0x9b, 0x25,
	0x71, 0x6c, 0x2e, 0x4d, 0x89, 0xe0, 0xc7, 0x52, 0xe0, 0x23, 0x14, 0xd4, 0x00, 0xa5, 0xde, 0x33,
	0xf8, 0xdf, 0x27, 0x11, 0x36, 0x8c, 0x60, 0x19, 0xdb, 0x86, 0x27, 0x20, 0xef, 0xeb, 0x22, 0xe4,
	0x8b, 0x29, 0xc8, 0xa4, 0x66, 0x1a, 0x50, 0x93, 0x78, 0x1b, 0xaf, 0x0c, 0x07, 0x44, 0x69, 0x6f,
	0xc0, 0xd0, 0x6e, 0xda, 0xa1, 0xfd, 0x24, 0x06, 0x65, 0xfe, 0x36, 0x58, 0xb4, 0xae, 0x83, 0x2a,
	0xeb, 0x3a, 0x24, 0xb7, 0xae, 0xc3, 0x82, 0x75, 0xcd, 0xef, 0xdb, 0xa8, 0xcd, 0xc9, 0xbe, 0x8d,
	0xde, 0x33, 0x61, 0xfd, 0xfe, 0x00, 0x1e, 0x4c, 0x6b, 0xb6, 0xb7, 0xe5, 0x43, 0x3b, 0xe8, 0xf9,
	0x07, 0x9b, 0x5d, 0xd8, 0x69, 0x1e, 0x5a, 0x56, 0x78, 0x95, 0xdf, 0x70, 0xbb, 0x2e, 0xec, 0x84,
	0x54, 0x60, 0xf1, 0x8b, 0xea, 0x2e, 0x3b, 0x22, 0x29, 0xe7, 0x1d, 0x91, 0xdc, 0x29, 0x7a, 0x44,
	0x42, 0xe6, 0x10, 0x5a, 0xbe, 0x74, 0x08, 0x27, 0x1b, 0x4c, 0x87, 0x70, 0xf2, 0x35, 0x93, 0xd3,
	0x3f, 0x24, 0xc6, 0x00, 0x99, 0x28, 0x0e, 0x2d, 0xa6, 0x57, 0xd9, 0xe4, 0x54, 0xd2, 0x9d, 0x9c,
	0xa2, 0x88, 0x0c, 0xc2, 0x97, 0x3f, 0x66, 0x08, 0x57, 0x72, 0xcc, 0xd0, 0x89, 0x2e, 0x6a, 0xde,
	0xdf, 0x95, 0x22, 0x35, 0x10, 0xcf, 0x18, 0x8a, 0xb6, 0xef, 0xff, 0x4f, 0x1e, 0x0e, 0xeb, 0x1c,
	0x57, 0x69, 0xac, 0xd0, 0x37, 0xd6, 0x6c, 0xa4, 0xb1, 0x7a, 0xa7, 0x14, 0x5d, 0xee, 0x6c, 0xf8,
	0x08, 0x96, 0x28, 0xd2, 0xe5, 0x08, 0xab, 0x41, 0x38, 0x00, 0xe6, 0x97, 0x23, 0xff, 0xc2, 0x9f,
	0x66, 0xad, 0x12, 0x7f, 0xcc, 0x21, 0x57, 0xd5, 0xc2, 0x91, 0x66, 0x29, 0x79, 0xa4, 0x79, 0x9f,
	0x1d, 0x69, 0x96, 0xf1, 0x91, 0xa6, 0x3c, 0x50, 0x81, 0xa2, 0x11, 0xcf, 0x34, 0x91, 0x4a, 0x6d,
	0x7b, 0xcd, 0x83, 0x48, 0xa5, 0xd0, 0xef, 0xea, 0x03, 0x51, 0x61, 0x86, 0xb0, 0x1d, 0xbb, 0x2a,
	0x2d, 0x78, 0x99, 0xd1, 0x8a, 0x5a, 0x65, 0x82, 0x91, 0xa6, 0xbb, 0xb3, 0xf3, 0x95, 0x5e, 0x67,
	0x8f, 0x2a, 0x1d, 0x7b, 0x46, 0xd5, 0x76, 0xed, 0x70, 0x97, 0xae, 0x7a, 0xf1, 0x6f, 0xac, 0x39,
	0xa8, 0xd9, 0x48, 0x8d, 0x2b, 0x64, 0xdb, 0x18, 0x3d, 0x0b, 0x67, 0x56, 0xb4, 0x21, 0x52, 0x6d,
	0xf8, 0x31, 0x7f, 0x66, 0xf5, 0x59, 0xe8, 0x83, 0x71, 0x00, 0xa8, 0xeb, 0x2e, 0x3e, 0xb5, 0xe6,
	0xde, 0xb0, 0x3e, 0x1a, 0x92, 0xf7, 0xd1, 0x70, 0x7f, 0x7d, 0x24, 0x1c, 0x57, 0x25, 0xe4, 0x6a,
	0xfd, 0xa3, 0xc1, 0x9d, 0x57, 0xfd, 0x12, 0xc8, 0x51, 0x38, 0x25, 0x4b, 0x36, 0xf6, 0x5f, 0x0d,
	0xfc, 0x91, 0x44, 0x32, 0xc7, 0x1f, 0xbd, 0xd6, 0x3e, 0x6c, 0x7e, 0xa6, 0x1b, 0x7d, 0x1f, 0x87,
	0x70, 0x66, 0xb6, 0x8b, 0x8d, 0x20, 0x13, 0x8c, 0xf8, 0xf4, 0x1d, 0x6e, 0xe0, 0x48, 0x9d, 0x3d,
	0x5b, 0xef, 0x97, 0x48, 0x38, 0x01, 0x1e, 0x7a, 0xd8, 0x4d, 0x73, 0x9c, 0xa7, 0xf3, 0xec, 0xe4,
	0xa8, 0xa4, 0x38, 0x89, 0xcc, 0x58, 0x99, 0xf2, 0x2e, 0x92, 0xc1, 0xc4, 0xd9, 0xda, 0x05, 0x30,
	0xf4, 0x18, 0xba, 0xce, 0x2e, 0x89, 0x02, 0x29, 0xd7, 0xe9, 0x93, 0xe8, 0x51, 0x1c, 0x4e, 0x9e,
	0xd6, 0x79, 0xe0, 0x34, 0x49, 0x2e, 0x59, 0x26, 0xab, 0xbb, 0x91, 0xa3, 0x0f, 0x80, 0x11, 0x2a,
	0x40, 0xaa, 0xb5, 0xcd, 0x85, 0x77, 0x60, 0x93, 0x58, 0xaa, 0x0b, 0xef, 0xac, 0x25, 0x12, 0xae,
	0x11, 0xf7, 0x4d, 0x81, 0x23, 0xc0, 0xdf, 0xe1, 0xb6, 0x9a, 0x98, 0xf7, 0x38, 0xcf, 0xfe, 0xf8,
	0x5d, 0x65, 0x5c, 0x39, 0xef, 0x4e, 0x1e, 0x13, 0xbf, 0x9f, 0xec, 0x79, 0x1f, 0x7f, 0x54, 0x99,
	0x84, 0xc3, 0x9f, 0xf4, 0x9d, 0x63, 0x43, 0x0d, 0x53, 0x3d, 0x99, 0xa3, 0xa3, 0xc4, 0xe1, 0x4f,
	0x39, 0x75, 0xf8, 0x63, 0xdd, 0xc6, 0xd2, 0x4d, 0x02, 0xc9, 0x39, 0xe1, 0x79, 0x9b, 0xec, 0xe4,
	0x97, 0x9b, 0x4d, 0xcc, 0x72, 0x52, 0x9e, 0x7b, 0xb2, 0xab, 0x4b, 0xa1, 0xe0, 0xa5, 0x7c, 0x91,
	0x79, 0x38, 0x4f, 0x14, 0x29, 0xf1, 0xe7, 0x64, 0x01, 0x61, 0x60, 0xdf, 0xc4, 0xe1, 0x80, 0x51,
	0x63, 0x4e, 0xc0, 0x1d, 0x7c, 0x29, 0xca, 0x6f, 0xe0, 0x00, 0x30, 0x74, 0x6f, 0x19, 0xd4, 0xa9,
	0xc6, 0x5a, 0x70, 0x02, 0x08, 0x49, 0x7f, 0xa7, 0x30, 0x30, 0x90, 0xbf, 0x89, 0xa7, 0x1f, 0x32,
	0x69, 0xe7, 0x4d, 0x3f, 0xfd, 0x39, 0xa9, 0x49, 0xcc, 0x1b, 0x57, 0x03, 0xab, 0x9b, 0x98, 0xc8,
	0x68, 0x0f, 0x12, 0x15, 0x52, 0xd0, 0x49, 0x7d, 0x1e, 0x0c, 0x7a, 0x8f, 0x3b, 0x2c, 0x68, 0x87,
	0x3c, 0x68, 0xd8, 0x9c, 0x0e, 0x1e, 0xc4, 0xc9, 0xca, 0xd9, 0x20, 0x3e, 0xea, 0xa9, 0xd6, 0x7a,
	0x9f, 0x44, 0xff, 0x7f, 0xd9, 0xf3, 0xf7, 0xb4, 0xda, 0x7a, 0xe4, 0x73, 0xfd, 0x1c, 0xa8, 0xee,
	0x08, 0x95, 0x73, 0x5b, 0xe3, 0x8c, 0x2f, 0xd5, 0x2f, 0x82, 0x31, 0xf1, 0xed, 0x5a, 0x4a, 0xa0,
	0x72, 0x02, 0x2e, 0x94, 0x7e, 0x90, 0x0f, 0xa5, 0x8f, 0xbb, 0x6b, 0x88, 0xeb, 0x2e, 0xeb, 0x26,
	0x1e, 0x47, 0xa2, 0x6c, 0xa4, 0x1b, 0x90, 0xf7, 0xc8, 0x44, 0x40, 0x9c, 0xd5, 0x27, 0x23, 0xcb,
	0x0c, 0x7f, 0x1e, 0x9d, 0x73, 0x93, 0xa8, 0x98, 0xb2, 0xff, 0x0d, 0x3d, 0x3e, 0x4c, 0x24, 0x4d,
	0xe9, 0x4d, 0xbc, 0x47, 0xde, 0x80, 0x5c, 0xdf, 0x7b, 0x74, 0x92, 0x28, 0x87, 0xcb, 0x1f, 0xcf,
	0xc5, 0xf3, 0x61, 0x4c, 0xba, 0xec, 0x37, 0x76, 0x5d, 0xf5, 0xf2, 0xfe, 0xc8, 0x07, 0xd9, 0x35,
	0x70, 0x55, 0x81, 0x84, 0x21, 0x7e, 0x97, 0x44, 0xfe, 0xaf, 0xee, 0xda, 0x1d, 0x07, 0x7e, 0x0d,
	0x1b, 0x8c, 0xe3, 0x5d, 0x74, 0xa7, 0x2d, 0x56, 0x14, 0x1a, 0x1c, 0x43, 0x62, 0x68, 0x7f, 0xc2,
	0xc7, 0x68, 0xc5, 0xa5, 0xaf, 0x7a, 0xad, 0x96, 0xbd, 0xed, 0xf9, 0x18, 0xe4, 0xf1, 0xea, 0x7e,
	0x2f, 0x60, 0xe8, 0xf1, 0x6f, 0xf4, 0xce, 0xf7, 0xd8, 0x22, 0x14, 0xff, 0x16, 0x82, 0xb8, 0xb2,
	0x51, 0xc7, 0x67, 0xd1, 0x03, 0xf8, 0x58, 0x95, 0xb9, 0x18, 0x25, 0x8d, 0x3c, 0x71, 0x97, 0xa2,
	0x66, 0xd3, 0x97, 0xee, 0x8a, 0x0e, 0xae, 0xc9, 0x94, 0x67, 0x35, 0xbb, 0x81, 0xd6, 0x0c, 0x98,
	0xce, 0x17, 0x03, 0x1f, 0x5b, 0x11, 0xaf, 0x90, 0x9e, 0x4a, 0xbd, 0xa0, 0x3a, 0xa0, 0x42, 0xc8,
	0x5a, 0xf3, 0x5f, 0x06, 0x77, 0xb4, 0xfe, 0xd9, 0xd2, 0x01, 0x69, 0x7f, 0xe7, 0x34, 0x86, 0xf6,
	0x77, 0x0e, 0x15, 0x93, 0xd0, 0x3f, 0x1b, 0x42, 0x64, 0x79, 0x44, 0x8b, 0x17, 0x74, 0x27, 0x3c,
	0xf9, 0x21, 0x9b, 0xd6, 0xf0, 0x5a, 0x5e, 0x14, 0x4d, 0x48, 0x1e, 0x92, 0xb3, 0xcc, 0x60, 0x7a,
	0x96, 0x59, 0xc4, 0xee, 0x93, 0xcc, 0x26, 0x49, 0xe7, 0xff, 0xff, 0x34, 0x84, 0x20, 0xf0, 0x13,
	0x93, 0x43, 0x0d, 0x0c, 0xd3, 0x65, 0x36, 0x5d, 0xee, 0x46, 0x8f, 0x4c, 0x42, 0xe5, 0x2c, 0x09,
	0x0d, 0x2a, 0x24, 0x94, 0x3e, 0x5e, 0xa0, 0x39, 0xc2, 0x99, 0x8d, 0xe5, 0x2f, 0x32, 0xe0, 0x03,
	0xd4, 0x9f, 0x3e, 0x89, 0x08, 0x99, 0xce, 0xb2, 0x56, 0xbc, 0x63, 0x70, 0xb7, 0x1d, 0xc4, 0x44,
	0x68, 0x55, 0xe8, 0x76, 0x8e, 0x33, 0xcd, 0xcb, 0xfa, 0x0a, 0x36, 0x45, 0x12, 0x20, 0x4c, 0x2f,
	0x2d, 0x70, 0xda, 0x6e, 0xb5, 0xbc, 0xc7, 0xf4, 0x3d, 0x75, 0xed, 0x09, 0xef, 0xac, 0x6f, 0x92,
	0x90, 0x57, 0x52, 0xd4, 0xb2, 0xff, 0x18, 0xda, 0xfb, 0x90, 0x24, 0x88, 0x1f, 0x67, 0x7b, 0xea,
	0x78, 0xe9, 0x99, 0x01, 0x82, 0xb5, 0xe5, 0x16, 0x38, 0x07, 0x3b, 0xf6, 0x76, 0xe2, 0x33, 0x6d,
	0x52, 0xd6, 0x27, 0xeb, 0x87, 0x64, 0x15, 0x9e, 0xec, 0xd2, 0x63, 0xce, 0x7b, 0x95, 0xa6, 0x6c,
	0xd0, 0x43, 0xd9, 0x04, 0x3a, 0xa6, 0x6b, 0x7f, 0xc0, 0x5f, 0x9d, 0xf1, 0x28, 0x50, 0x2e, 0x00,
	0x4d, 0x30, 0x82, 0xac, 0x3c, 0xb7, 0xf3, 0x64, 0xcf, 0x99, 0xb6, 0x50, 0x1d, 0x14, 0x75, 0x06,
	0x94, 0xb6, 0x5d, 0x8f, 0x5a, 0x01, 0xf4, 0x53, 0xb8, 0x3f, 0x03, 0x41, 0x91, 0xc6, 0x0a, 0x6d,
	0x70, 0x59, 0x6f, 0x88, 0xf0, 0x51, 0x84, 0xa2, 0x2f, 0xec, 0x42, 0xa6, 0x1b, 0x5f, 0x1c, 0x13,
	0xd2, 0x32, 0xde, 0xb1, 0xc6, 0x04, 0x5f, 0x55, 0xd7, 0x95, 0xb1, 0x3b, 0xa7, 0x0e, 0x12, 0xb1,
	0x08, 0x56, 0xfe, 0x7d, 0xee, 0x20, 0x09, 0x7d, 0x5c, 0x71, 0x55, 0x11, 0x6a, 0x54, 0x70, 0x03,
	0xb1, 0xe0, 0xf8, 0xd3, 0x15, 0xca, 0xcf, 0x61, 0x3f, 0x27, 0x7c, 0xa3, 0x91, 0x27, 0xca, 0xe2,
	0x7b, 0x7e, 0x2b, 0x2a, 0xbe, 0xe7, 0xb7, 0x04, 0x27, 0x6a, 0x5c, 0x44, 0xe6, 0x25, 0x21, 0x39,
	0x1a, 0x94, 0x38, 0x00, 0x15, 0x2e, 0x84, 0xe0, 0x7b, 0xdc, 0x7a, 0x9d, 0x5b, 0xe9, 0xa3, 0x0f,
	0x0f, 0xdd, 0x4e, 0x07, 0xc6, 0xb9, 0x38, 0xee, 0x61, 0x9d, 0x70, 0xc2, 0xa2, 0x3c, 0xbb, 0x02,
	0x86, 0xe5, 0xef, 0xf9, 0x0d, 0xeb, 0x9a, 0xed, 0x65, 0x60, 0x79, 0x12, 0xc9, 0x0a, 0x44, 0x56,
	0x25, 0x76, 0x58, 0xbc, 0x28, 0xae, 0xad, 0xae, 0xa6, 0xd6, 0xd2, 0x69, 0x5c, 0xc2, 0xde, 0x35,
	0x93, 0x82, 0xbf, 0x4d, 0xe2, 0xd9, 0x38, 0xd5, 0x04, 0xdf, 0x9a, 0x54, 0xbd, 0x0b, 0x2a, 0x76,
	0x2f, 0xdc, 0xf5, 0x7c, 0x37, 0x3c, 0xc8, 0x6d, 0x59, 0x4c, 0x4a, 0xd3, 0x5f, 0xed, 0x76, 0x40,
	0x2d, 0xdb, 0x15, 0xa9, 0x65, 0x23, 0x15, 0x45, 0xe1, 0x18, 0x84, 0x69, 0x69, 0x14, 0x35, 0x34,
	0x2e, 0x8e, 0x26, 0x75, 0xf2, 0xc8, 0x18, 0xea, 0x7f, 0x1f, 0xc0, 0x7a, 0xb2, 0xe6, 0x06, 0xa1,
	0xef, 0x6e, 0xf7, 0x42, 0xf8, 0xb0, 0x65, 0x87, 0x3b, 0x9e, 0xdf, 0x5e, 0xef, 0x34, 0x60, 0x27,
	0x74, 0xf7, 0x61, 0xff, 0xad, 0x68, 0x82, 0x8a, 0x4d, 0xbe, 0xb1, 0x5b, 0x22, 0x5e, 0x55, 0x25,
	0xa7, 0xab, 0x40, 0x44, 0xb5, 0xd0, 0x96, 0xc6, 0x05, 0x9b, 0xef, 0x18, 0x60, 0x98, 0x7e, 0x44,
	0x1a, 0x4d, 0x3f, 0x44, 0x1a, 0x4d, 0x1f, 0x8f, 0xe3, 0xae, 0xa8, 0x94, 0xd8, 0xc9, 0x08, 0x51,
	0xb5, 0x2a, 0xea, 0x86, 0xc5, 0x7f, 0x7a, 0x04, 0x4a, 0x1b, 0x81, 0x53, 0x0d, 0xc0, 0xb3, 0xc9,
	0x3b, 0xa4, 0x94, 0xf9, 0xfc, 0x09, 0x62, 0xf3, 0x76, 0x01, 0x62, 0x36, 0x39, 0x34, 0x01, 0xe0,
	0x2e, 0x7e, 0x52, 0x5e, 0xa0, 0x10, 0xd3, 0x99, 0x73, 0x7a, 0x74, 0x7c, 0x2d, 0xdc, 0x75, 0x4d,
	0xca, 0x5a, 0x62, 0x3a, 0x75, 0x2d, 0xe9, 0xfb, 0x96, 0x50, 0x2d, 0xdc, 0x65, 0x4b, 0xca, 0x5a,
	0x62, 0x3a, 0x75, 0x2d, 0xe9, 0xdb, 0x76, 0xaa, 0x36, 0xa8, 0xc4, 0xd7, 0xae, 0x5c, 0xd3, 0xba,
	0xca, 0xc6, 0x9c, 0xd5, 0x22, 0x63, 0x55, 0x74, 0xc1, 0x68, 0xe2, 0x7a, 0x97, 0x69, 0xfd, 0x1b,
	0x56, 0xcc, 0x45, 0x7d, 0x5a, 0x56, 0xe3, 0x6f, 0x81, 0xd3, 0xc2, 0xb5, 0x23, 0x53, 0xf9, 0x42,
	0xa1, 0xb5, 0xdd, 0xd2, 0xa5, 0x64, 0x75, 0x1d, 0x80, 0xb3, 0xe9, 0x7b, 0x4e, 0x66, 0x73, 0x41,
	0x0b, 0xb5, 0xde, 0x29, 0x44, 0xce, 0xaa, 0xfe, 0x06, 0x18, 0xa2, 0x57, 0x74, 0x58, 0xf9, 0x57,
	0x85, 0x98, 0xd3, 0xf9, 0x34, 0xac, 0x64, 0x07, 0x9c, 0xe2, 0x6f, 0x00, 0x99, 0xd4, 0xbc, 0x88,
	0xc3, 0x9c, 0xd7, 0x24, 0xe4, 0xd5, 0x2f, 0xbe, 0xb3, 0xe2, 0x9a, 0x8e, 0xee, 0x3a, 0x6a, 0xf5,
	0x4b, 0xdd, 0x36, 0xc1, 0xd4, 0x2f, 0xae, 0x67, 0x5a, 0x53, 0xdc, 0xa8, 0xb2, 0x45, 0x7d, 0x5a,
	0x5e, 0xfd, 0x84, 0xbb, 0x2d, 0xa6, 0xf2, 0xed, 0x0b, 0xa1, 0x54, 0xab, 0x5f, 0xe6, 0x25, 0x10,
	0xbf, 0x0b, 0xaa, 0x19, 0x37, 0x3e, 0x68, 0xd8, 0x1a, 0x9e, 0xde, 0xbc, 0x5b, 0x8c, 0x9e, 0xd7,
	0x13, 0xfe, 0xce, 0x07, 0xa5, 0x9e, 0x70, 0x84, 0x6a, 0x3d, 0xc9, 0xb8, 0x09, 0x82, 0x1b, 0xd1,
	0x1a, 0x22, 0xe5, 0x29, 0xb5, 0x46, 0xb4, 0x58, 0xd7, 0x6f, 0x80, 0x11, 0x76, 0x65, 0xe3, 0x0b,
	0x2a, 0xee, 0x88, 0xca, 0x9c, 0xd1, 0xa1, 0x62, 0xe5, 0xb7, 0xc1, 0xe7, 0xc4, 0xa8, 0xd0, 0x1b,
	0xf9, 0xbd, 0x4e, 0x49, 0xcd, 0x05, 0x6d, 0x52, 0xbe, 0x3a, 0xf1, 0x2a, 0x85, 0x1b, 0xf9, 0x9d,
	0xad, 0x55, 0x5d, 0xe6, 0x85, 0x03, 0xa8, 0x3a, 0xf1, 0xb6, 0x81, 0x1b, 0xf9, 0x1d, 0xa0, 0x55,
	0x5d, 0xe6, 0x4d, 0x03, 0xc8, 0xfc, 0xa6, 0x6f, 0x19, 0x98, 0xcd, 0x97, 0x12, 0x47, 0xae, 0x36,
	0xbf, 0xf2, 0x8c, 0xf7, 0x6f, 0x1b, 0xe0, 0x82, 0x24, 0x99, 0x7d, 0x31, 0x5f, 0x6e, 0x49, 0x1e,
	0x73, 0xa9, 0x38, 0x0f, 0x83, 0xf2, 0xbe, 0x01, 0x2e, 0x2b, 0xd3, 0xd5, 0xef, 0x15, 0x2a, 0x9c,
	0xe3, 0x34, 0x5f, 0xed, 0x97, 0x53, 0x90, 0x93, 0x24, 0x15, 0x5d, 0x29, 0xa7, 0x6c, 0x1e, 0xb5,
	0x9c, 0xd4, 0x99, 0xe6, 0xd5, 0x77, 0x0d, 0x30, 0x26, 0x4f, 0x33, 0xbf, 0x93, 0x5f, 0x72, 0x06,
	0x9b, 0xf9, 0x4a, 0x5f, 0x6c, 0x0c, 0xd3, 0x9b, 0xe0, 0x5c, 0x56, 0xf2, 0xf7, 0x7c, 0xce, 0x74,
	0x9d, 0x64, 0x30, 0x5f, 0x2a, 0xc8, 0xc0, 0x00, 0x7c, 0xd7, 0x00, 0x17, 0x65, 0x39, 0xd6, 0xca,
	0x55, 0xb8, 0x84, 0xc9, 0x7c, 0xb9, 0x0f, 0x26, 0x86, 0xe6, 0x3d, 0x03, 0x98, 0x8a, 0xf4, 0x69,
	0xe5, 0x4c, 0x25, 0xe7, 0x33, 0xef, 0xf7, 0xc7, 0xa7, 0x10, 0x52, 0x1c, 0x02, 0x54, 0x40, 0x48,
	0x8c, 0xa9, 0x88, 0x90, 0x52, 0x31, 0x3e, 0xd9, 0x42, 0x8a, 0x01, 0x15, 0x13, 0x52, 0x8c, 0xe9,
	0x7e, 0x7f, 0x7c, 0xc2, 0xf0, 0x92, 0x67, 0x35, 0x2b, 0x87, 0x97, 0x94, 0x4d, 0x3d, 0xbc, 0x72,
	0x33, 0x94, 0xab, 0x7f, 0x6c, 0x80, 0x4b, 0xaa, 0xf4, 0x64, 0xe5, 0xb0, 0x51, 0x30, 0x9a, 0x5f,
	0xea, 0x93, 0x91, 0x21, 0x7b, 0xcb, 0x00, 0xe7, 0x33, 0x33, 0x8d, 0x6f, 0xe9, 0xab, 0x06, 0xe1,
	0x30, 0xef, 0x15, 0xe5, 0x10, 0xf4, 0x5a, 0x96, 0x43, 0x7c, 0xbb, 0x90, 0x3a, 0x50, 0x28, 0x2f,
	0xf7, 0xc1, 0xc4, 0xcf, 0xe6, 0xe9, 0x04, 0x61, 0x8d, 0xf5, 0xbe, 0xf6, 0x6c, 0x2e, 0x4d, 0x0b,
	0x46, 0x3b, 0x91, 0x38, 0x25, 0xf8, 0x5a, 0xfe, 0x8a, 0x60, 0xcd, 0xf6, 0xcc, 0x59, 0x2d, 0x32,
	0xbe, 0x8a, 0x38, 0xa5, 0xf5, 0x9a, 0x5a, 0x4e, 0x94, 0x4c, 0x5d, 0x45, 0x2a, 0x35, 0x15, 0xeb,
	0x54, 0x66, 0x5e, 0xea, 0xad, 0xfc, 0x69, 0x5c, 0xe4, 0x30, 0xef, 0x15, 0xe5, 0x60, 0x20, 0xf6,
	0xc1, 0x99, 0x54, 0x36, 0xe9, 0x8c, 0x56, 0x69, 0x94, 0xda, 0x7c, 0xb1, 0x08, 0x35, 0xaf, 0x3d,
	0xe9, 0x9c, 0xd0, 0x59, 0xad, 0xa2, 0x22, 0x72, 0xb5, 0xf6, 0x48, 0x73, 0x3a, 0xab, 0x01, 0x78,
	0x36, 0x99, 0xcf, 0x79, 0x53, 0xab, 0x24, 0x42, 0xac, 0xf6, 0x76, 0x49, 0x32, 0x33, 0x85, 0xf6,
	0xb2, 0xac, 0x4c, 0xbd, 0xf6, 0x46, 0xe4, 0x9a, 0xed, 0x4d, 0xe6, 0x39, 0xa2, 0x2e, 0x4e, 0xe5,
	0x38, 0x2a, 0xbb, 0x38, 0x49, 0xad, 0xee, 0x62, 0x59, 0xde, 0xa0, 0x20, 0x67, 0x9a, 0x33, 0xa8,
	0x27, 0x67, 0x42, 0xac, 0x29, 0x67, 0x31, 0x9b, 0x8f, 0x36, 0x56, 0xdc, 0xb3, 0xe5, 0x35, 0x56,
	0xdc, 0xb6, 0xbd, 0x58, 0x84, 0x3a, 0xed, 0x1c, 0xc9, 0xb5, 0x17, 0x8c, 0x4c, 0xc7, 0x39, 0xc2,
	0xdb, 0x0b, 0xb6, 0x17, 0x8d, 0x72, 0x6d, 0x34, 0xf6, 0xa2, 0x94, 0x54, 0x67, 0x2f, 0x9a, 0x4c,
	0x9b, 0x62, 0x7b, 0x51, 0xad, 0xea, 0x04, 0x52, 0x9d, 0xbd, 0x68, 0x46, 0x75, 0x62, 0x26, 0x91,
	0xc6, 0x5e, 0x54, 0xab, 0xba, 0xcc, 0x7c, 0x9e, 0xea, 0xb7, 0x0c, 0xf0, 0x5c, 0x76, 0x32, 0xcf,
	0x42, 0xbe, 0x33, 0x3b, 0xc1, 0x62, 0x7e, 0xa1, 0x30, 0x8b, 0xe0, 0x95, 0xe1, 0x52, 0x67, 0x26,
	0xf3, 0xfb, 0x09, 0x13, 0xe6, 0x78, 0x65, 0x32, 0x12, 0x3e, 0x98, 0xa1, 0xe7, 0x72, 0x39, 0x34,
	0x0c, 0x7d, 0x4c, 0xad, 0x63, 0xe8, 0xd3, 0xa9, 0x1a, 0xdc, 0xce, 0x3b, 0x95, 0xa7, 0xb1, 0xa8,
	0x59, 0x20, 0x3f, 0xd3, 0x2d, 0x15, 0xe7, 0xe1, 0x45, 0x90, 0x4a, 0xbe, 0x98, 0xc9, 0xef, 0xba,
	0x98, 0x5a, 0x2d, 0x02, 0x69, 0x3e, 0xc5, 0x01, 0x38, 0x9b, 0xce, 0x9a, 0x98, 0xcd, 0x59, 0x06,
	0x8a, 0xe4, 0x6a, 0xdb, 0x2f, 0xcd, 0x86, 0xc0, 0x6b, 0x8c, 0xcc, 0x54, 0x88, 0x5b, 0xf9, 0x4b,
	0xbf, 0x04, 0x82, 0x7b, 0x45, 0x39, 0x78, 0xaf, 0x6e, 0x22, 0xc5, 0x61, 0x5a, 0xa7, 0x35, 0x74,
	0x91, 0xba, 0xa8, 0x4f, 0xcb, 0x4b, 0x3c, 0x9d, 0xb5, 0x30, 0xab, 0xd9, 0x00, 0x5a, 0xef, 0x9d,
	0x42, 0xe4, 0xfc, 0x80, 0xe6, 0x93, 0x11, 0x26, 0xf3, 0x4d, 0x93, 0xc6, 0x80, 0xce, 0x48, 0x3e,
	0x40, 0xda, 0x9c, 0xca, 0x3c, 0x98, 0xd1, 0x71, 0x39, 0x46, 0xd4, 0x6a, 0x6d, 0x96, 0x26, 0x16,
	0x74, 0xc1, 0x68, 0x22, 0x07, 0x40, 0xd9, 0x9b, 0x22, 0xad, 0xba, 0x37, 0x25, 0xf1, 0xf3, 0xfb,
	0xe0, 0x4c, 0x2a, 0x56, 0x7e, 0x26, 0x7f, 0xad, 0xad, 0xdb, 0x52, 0x59, 0xc4, 0x3b, 0xd9, 0x8e,
	0x2a, 0xc2, 0xdd, 0x5f, 0xd2, 0xf1, 0xb8, 0x66, 0x30, 0xe6, 0x6c, 0x47, 0xf3, 0x23, 0xd6, 0xab,
	0xdf, 0x37, 0x40, 0x4d, 0x1a, 0xae, 0xae, 0x61, 0xa4, 0xd2, 0x5c, 0xe6, 0x17, 0xfb, 0xe1, 0x12,
	0xa6, 0x31, 0x2e, 0x18, 0x5d, 0x3d, 0x8d, 0xc5, 0x84, 0x39, 0xd3, 0x58, 0x3a, 0x96, 0x9c, 0xf3,
	0x9e, 0x4a, 0xe2, 0x6b, 0xef, 0x15, 0x91, 0x2d, 0xcf, 0xa9, 0xe3, 0x3d, 0x55, 0x07, 0xb8, 0x56,
	0xff, 0xca, 0x00, 0x57, 0xf2, 0x62, 0xc0, 0x5f, 0xd6, 0x5a, 0xd5, 0x4a, 0x20, 0xae, 0x1e, 0x82,
	0x59, 0x10, 0xa1, 0x32, 0xe6, 0x5a, 0xc3, 0xd2, 0xf7, 0x23, 0x42, 0x9d, 0x28, 0x6a, 0x2c, 0xc2,
	0xbc, 0x10, 0x6a, 0x0d, 0xb7, 0x45, 0x9f, 0x22, 0xd4, 0x8c, 0x64, 0xc6, 0xab, 0xc7, 0xec, 0x30,
	0xe6, 0x85, 0x22, 0x36, 0x15, 0xb3, 0xa8, 0x57, 0x8f, 0xea, 0xc8, 0x62, 0x84, 0x23, 0x3b, 0x8c,
	0x78, 0xa1, 0x88, 0x32, 0x6b, 0xe0, 0x50, 0xc6, 0xef, 0x62, 0x1c, 0xd9, 0xc1, 0xbb, 0x5a, 0xc7,
	0x44, 0x05, 0x70, 0x28, 0x23, 0x70, 0xd1, 0x4c, 0x91, 0xfa, 0xbb, 0x3a, 0x79, 0x7f, 0xf3, 0x47,
	0xa0, 0x56, 0xcf, 0x14, 0xb2, 0xbf, 0x8c, 0x83, 0x3d, 0x73, 0xb2, 0xb0, 0xdf, 0xdb, 0x45, 0x0c,
	0x2b, 0x65, 0x52, 0x7b, 0xe6, 0xf2, 0xe2, 0x7a, 0xdf, 0x04, 0xe7, 0xb2, 0xe2, 0x75, 0xe7, 0xf3,
	0xcb, 0x14, 0x18, 0xd4, 0xa7, 0x14, 0xaa, 0x60, 0x5c, 0xb4, 0x09, 0x4f, 0x86, 0xd5, 0xce, 0x14,
	0xe9, 0xd5, 0x9c, 0x4d, 0xb8, 0x24, 0x28, 0x36, 0x0e, 0x29, 0xc2, 0xe1, 0x8c, 0x1a, 0x21, 0x45,
	0x88, 0x4e, 0x27, 0xa4, 0x48, 0x88, 0x6a, 0x65, 0xc7, 0xf8, 0x42, 0x08, 0xab, 0xc6, 0x31, 0x3e,
	0x4f, 0xaf, 0x73, 0x8c, 0x9f, 0x15, 0xd3, 0x8a, 0x96, 0x5f, 0x89, 0x80, 0xd6, 0x69, 0xbd, 0x92,
	0x10, 0xad, 0xb9, 0xa8, 0x4f, 0x9b, 0x76, 0x04, 0x44, 0x21, 0xae, 0x37, 0xf4, 0x0a, 0x59, 0x71,
	0x3d, 0x1d, 0x47, 0x40, 0x22, 0xf0, 0x35, 0xde, 0xa8, 0x72, 0x51, 0xaf, 0x33, 0x7a, 0xc5, 0x50,
	0x07, 0xdd, 0x8b, 0x45, 0xa8, 0xd3, 0x31, 0x5c, 0xf9, 0xca, 0x13, 0xd3, 0xe9, 0xc4, 0x70, 0x09,
	0xca, 0xf3, 0xae, 0x01, 0xc6, 0xe4, 0x7f, 0x5b, 0xef, 0x4e, 0x11, 0x13, 0xcc, 0xd8, 0xd4, 0xc7,
	0x2e, 0xb9, 0x7f, 0xe5, 0x0e, 0x6f, 0xd1, 0x25, 0x7f, 0xe2, 0x2e, 0x6f, 0xf3, 0x95, 0x85, 0x66,
	0xa9, 0x38, 0x4f, 0xc6, 0xf2, 0x4e, 0x12, 0x3d, 0x7c, 0x4f, 0xaf, 0x6f, 0xd3, 0x9c, 0x3a, 0xcb,
	0x3b, 0x75, 0x40, 0x31, 0xb7, 0x1f, 0xc8, 0x8e, 0x26, 0x7e, 0x49, 0x6b, 0x75, 0x96, 0x01, 0xed,
	0x4b, 0x7d, 0x32, 0xf2, 0x21, 0x37, 0x42, 0x04, 0xf0, 0x94, 0x46, 0x20, 0x00, 0xa6, 0x34, 0x6f,
	0xe9, 0x52, 0x0a, 0x5d, 0xa4, 0x0c, 0xdc, 0xbd, 0xd7, 0x6f, 0xb4, 0xad, 0xd9, 0x77, 0x9c, 0x6e,
	0x04, 0x6e, 0xe5, 0x57, 0x7e, 0xfa, 0xf1, 0xb8, 0xf1, 0xe1, 0xc7, 0xe3, 0xc6, 0xcf, 0x3f, 0x1e,
	0x37, 0x7e, 0xf0, 0xc9, 0xf8, 0x33, 0x1f, 0x7e, 0x32, 0xfe, 0xcc, 0xbf, 0x7d, 0x32, 0xfe, 0xcc,
	0xaf, 0xcf, 0x72, 0x71, 0xb5, 0xc9, 0xbf, 0x36, 0xbb, 0x7f, 0x77, 0xfe, 0x8d, 0xf8, 0xaf, 0x08,
	0x1f, 0x74, 0x61, 0xb0, 0x3d, 0x84, 0xff, 0x2c, 0xec, 0xed, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff,
	0xbf, 0xc1, 0x8f, 0x8d, 0x08, 0x79, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MsgClient is the client API for Msg service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgClient interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	ToggleForcePush(ctx context.Context, in *MsgToggleForcePush, opts ...grpc.CallOption) (*MsgToggleForcePushResponse, error)
	CreateTask(ctx context.Context, in *MsgCreateTask, opts ...grpc.CallOption) (*MsgCreateTaskResponse, error)
	UpdateTask(ctx context.Context, in *MsgUpdateTask, opts ...grpc.CallOption) (*MsgUpdateTaskResponse, error)
	DeleteTask(ctx context.Context, in *MsgDeleteTask, opts ...grpc.CallOption) (*MsgDeleteTaskResponse, error)
	SetBranch(ctx context.Context, in *MsgSetBranch, opts ...grpc.CallOption) (*MsgSetBranchResponse, error)
	MultiSetBranch(ctx context.Context, in *MsgMultiSetBranch, opts ...grpc.CallOption) (*MsgMultiSetBranchResponse, error)
	DeleteBranch(ctx context.Context, in *MsgDeleteBranch, opts ...grpc.CallOption) (*MsgDeleteBranchResponse, error)
	MultiDeleteBranch(ctx context.Context, in *MsgMultiDeleteBranch, opts ...grpc.CallOption) (*MsgMultiDeleteBranchResponse, error)
	SetTag(ctx context.Context, in *MsgSetTag, opts ...grpc.CallOption) (*MsgSetTagResponse, error)
	MultiSetTag(ctx context.Context, in *MsgMultiSetTag, opts ...grpc.CallOption) (*MsgMultiSetTagResponse, error)
	DeleteTag(ctx context.Context, in *MsgDeleteTag, opts ...grpc.CallOption) (*MsgDeleteTagResponse, error)
	MultiDeleteTag(ctx context.Context, in *MsgMultiDeleteTag, opts ...grpc.CallOption) (*MsgMultiDeleteTagResponse, error)
	CreateBounty(ctx context.Context, in *MsgCreateBounty, opts ...grpc.CallOption) (*MsgCreateBountyResponse, error)
	UpdateBountyExpiry(ctx context.Context, in *MsgUpdateBountyExpiry, opts ...grpc.CallOption) (*MsgUpdateBountyExpiryResponse, error)
	CloseBounty(ctx context.Context, in *MsgCloseBounty, opts ...grpc.CallOption) (*MsgCloseBountyResponse, error)
	DeleteBounty(ctx context.Context, in *MsgDeleteBounty, opts ...grpc.CallOption) (*MsgDeleteBountyResponse, error)
	// this line is used by starport scaffolding # proto/tx/rpc
	Exercise(ctx context.Context, in *MsgExercise, opts ...grpc.CallOption) (*MsgExerciseResponse, error)
	CreateRelease(ctx context.Context, in *MsgCreateRelease, opts ...grpc.CallOption) (*MsgCreateReleaseResponse, error)
	UpdateRelease(ctx context.Context, in *MsgUpdateRelease, opts ...grpc.CallOption) (*MsgUpdateReleaseResponse, error)
	DeleteRelease(ctx context.Context, in *MsgDeleteRelease, opts ...grpc.CallOption) (*MsgDeleteReleaseResponse, error)
	CreatePullRequest(ctx context.Context, in *MsgCreatePullRequest, opts ...grpc.CallOption) (*MsgCreatePullRequestResponse, error)
	UpdatePullRequestTitle(ctx context.Context, in *MsgUpdatePullRequestTitle, opts ...grpc.CallOption) (*MsgUpdatePullRequestTitleResponse, error)
	UpdatePullRequestDescription(ctx context.Context, in *MsgUpdatePullRequestDescription, opts ...grpc.CallOption) (*MsgUpdatePullRequestDescriptionResponse, error)
	InvokeMergePullRequest(ctx context.Context, in *MsgInvokeMergePullRequest, opts ...grpc.CallOption) (*MsgInvokeMergePullRequestResponse, error)
	InvokeDaoMergePullRequest(ctx context.Context, in *MsgInvokeDaoMergePullRequest, opts ...grpc.CallOption) (*MsgInvokeDaoMergePullRequestResponse, error)
	SetPullRequestState(ctx context.Context, in *MsgSetPullRequestState, opts ...grpc.CallOption) (*MsgSetPullRequestStateResponse, error)
	AddPullRequestReviewers(ctx context.Context, in *MsgAddPullRequestReviewers, opts ...grpc.CallOption) (*MsgAddPullRequestReviewersResponse, error)
	RemovePullRequestReviewers(ctx context.Context, in *MsgRemovePullRequestReviewers, opts ...grpc.CallOption) (*MsgRemovePullRequestReviewersResponse, error)
	AddPullRequestAssignees(ctx context.Context, in *MsgAddPullRequestAssignees, opts ...grpc.CallOption) (*MsgAddPullRequestAssigneesResponse, error)
	RemovePullRequestAssignees(ctx context.Context, in *MsgRemovePullRequestAssignees, opts ...grpc.CallOption) (*MsgRemovePullRequestAssigneesResponse, error)
	LinkPullRequestIssueByIid(ctx context.Context, in *MsgLinkPullRequestIssueByIid, opts ...grpc.CallOption) (*MsgLinkPullRequestIssueByIidResponse, error)
	UnlinkPullRequestIssueByIid(ctx context.Context, in *MsgUnlinkPullRequestIssueByIid, opts ...grpc.CallOption) (*MsgUnlinkPullRequestIssueByIidResponse, error)
	AddPullRequestLabels(ctx context.Context, in *MsgAddPullRequestLabels, opts ...grpc.CallOption) (*MsgAddPullRequestLabelsResponse, error)
	RemovePullRequestLabels(ctx context.Context, in *MsgRemovePullRequestLabels, opts ...grpc.CallOption) (*MsgRemovePullRequestLabelsResponse, error)
	DeletePullRequest(ctx context.Context, in *MsgDeletePullRequest, opts ...grpc.CallOption) (*MsgDeletePullRequestResponse, error)
	CreateDao(ctx context.Context, in *MsgCreateDao, opts ...grpc.CallOption) (*MsgCreateDaoResponse, error)
	RenameDao(ctx context.Context, in *MsgRenameDao, opts ...grpc.CallOption) (*MsgRenameDaoResponse, error)
	UpdateDaoDescription(ctx context.Context, in *MsgUpdateDaoDescription, opts ...grpc.CallOption) (*MsgUpdateDaoDescriptionResponse, error)
	UpdateDaoWebsite(ctx context.Context, in *MsgUpdateDaoWebsite, opts ...grpc.CallOption) (*MsgUpdateDaoWebsiteResponse, error)
	UpdateDaoLocation(ctx context.Context, in *MsgUpdateDaoLocation, opts ...grpc.CallOption) (*MsgUpdateDaoLocationResponse, error)
	UpdateDaoAvatar(ctx context.Context, in *MsgUpdateDaoAvatar, opts ...grpc.CallOption) (*MsgUpdateDaoAvatarResponse, error)
	UpdateDaoMetadata(ctx context.Context, in *MsgUpdateDaoMetadata, opts ...grpc.CallOption) (*MsgUpdateDaoMetadataResponse, error)
	DaoTreasurySpend(ctx context.Context, in *MsgDaoTreasurySpend, opts ...grpc.CallOption) (*MsgDaoTreasurySpendResponse, error)
	UpdateDaoConfig(ctx context.Context, in *MsgUpdateDaoConfig, opts ...grpc.CallOption) (*MsgUpdateDaoConfigResponse, error)
	DaoCreateRelease(ctx context.Context, in *MsgDaoCreateRelease, opts ...grpc.CallOption) (*MsgDaoCreateReleaseResponse, error)
	DeleteDao(ctx context.Context, in *MsgDeleteDao, opts ...grpc.CallOption) (*MsgDeleteDaoResponse, error)
	CreateComment(ctx context.Context, in *MsgCreateComment, opts ...grpc.CallOption) (*MsgCreateCommentResponse, error)
	UpdateComment(ctx context.Context, in *MsgUpdateComment, opts ...grpc.CallOption) (*MsgUpdateCommentResponse, error)
	DeleteComment(ctx context.Context, in *MsgDeleteComment, opts ...grpc.CallOption) (*MsgDeleteCommentResponse, error)
	ToggleCommentResolved(ctx context.Context, in *MsgToggleCommentResolved, opts ...grpc.CallOption) (*MsgToggleCommentResolvedResponse, error)
	CreateIssue(ctx context.Context, in *MsgCreateIssue, opts ...grpc.CallOption) (*MsgCreateIssueResponse, error)
	UpdateIssueTitle(ctx context.Context, in *MsgUpdateIssueTitle, opts ...grpc.CallOption) (*MsgUpdateIssueTitleResponse, error)
	UpdateIssueDescription(ctx context.Context, in *MsgUpdateIssueDescription, opts ...grpc.CallOption) (*MsgUpdateIssueDescriptionResponse, error)
	ToggleIssueState(ctx context.Context, in *MsgToggleIssueState, opts ...grpc.CallOption) (*MsgToggleIssueStateResponse, error)
	AddIssueAssignees(ctx context.Context, in *MsgAddIssueAssignees, opts ...grpc.CallOption) (*MsgAddIssueAssigneesResponse, error)
	RemoveIssueAssignees(ctx context.Context, in *MsgRemoveIssueAssignees, opts ...grpc.CallOption) (*MsgRemoveIssueAssigneesResponse, error)
	AddIssueLabels(ctx context.Context, in *MsgAddIssueLabels, opts ...grpc.CallOption) (*MsgAddIssueLabelsResponse, error)
	RemoveIssueLabels(ctx context.Context, in *MsgRemoveIssueLabels, opts ...grpc.CallOption) (*MsgRemoveIssueLabelsResponse, error)
	DeleteIssue(ctx context.Context, in *MsgDeleteIssue, opts ...grpc.CallOption) (*MsgDeleteIssueResponse, error)
	CreateRepository(ctx context.Context, in *MsgCreateRepository, opts ...grpc.CallOption) (*MsgCreateRepositoryResponse, error)
	ForkRepository(ctx context.Context, in *MsgForkRepository, opts ...grpc.CallOption) (*MsgForkRepositoryResponse, error)
	RenameRepository(ctx context.Context, in *MsgRenameRepository, opts ...grpc.CallOption) (*MsgRenameRepositoryResponse, error)
	UpdateRepositoryDescription(ctx context.Context, in *MsgUpdateRepositoryDescription, opts ...grpc.CallOption) (*MsgUpdateRepositoryDescriptionResponse, error)
	ToggleRepositoryArchived(ctx context.Context, in *MsgToggleRepositoryArchived, opts ...grpc.CallOption) (*MsgToggleRepositoryArchivedResponse, error)
	ChangeOwner(ctx context.Context, in *MsgChangeOwner, opts ...grpc.CallOption) (*MsgChangeOwnerResponse, error)
	UpdateRepositoryCollaborator(ctx context.Context, in *MsgUpdateRepositoryCollaborator, opts ...grpc.CallOption) (*MsgUpdateRepositoryCollaboratorResponse, error)
	UpdateDaoRepositoryCollaborator(ctx context.Context, in *MsgUpdateDaoRepositoryCollaborator, opts ...grpc.CallOption) (*MsgUpdateDaoRepositoryCollaboratorResponse, error)
	RemoveRepositoryCollaborator(ctx context.Context, in *MsgRemoveRepositoryCollaborator, opts ...grpc.CallOption) (*MsgRemoveRepositoryCollaboratorResponse, error)
	RemoveDaoRepositoryCollaborator(ctx context.Context, in *MsgRemoveDaoRepositoryCollaborator, opts ...grpc.CallOption) (*MsgRemoveDaoRepositoryCollaboratorResponse, error)
	CreateRepositoryLabel(ctx context.Context, in *MsgCreateRepositoryLabel, opts ...grpc.CallOption) (*MsgCreateRepositoryLabelResponse, error)
	UpdateRepositoryLabel(ctx context.Context, in *MsgUpdateRepositoryLabel, opts ...grpc.CallOption) (*MsgUpdateRepositoryLabelResponse, error)
	DeleteRepositoryLabel(ctx context.Context, in *MsgDeleteRepositoryLabel, opts ...grpc.CallOption) (*MsgDeleteRepositoryLabelResponse, error)
	SetDefaultBranch(ctx context.Context, in *MsgSetDefaultBranch, opts ...grpc.CallOption) (*MsgSetDefaultBranchResponse, error)
	ToggleRepositoryForking(ctx context.Context, in *MsgToggleRepositoryForking, opts ...grpc.CallOption) (*MsgToggleRepositoryForkingResponse, error)
	ToggleArweaveBackup(ctx context.Context, in *MsgToggleArweaveBackup, opts ...grpc.CallOption) (*MsgToggleArweaveBackupResponse, error)
	DeleteRepository(ctx context.Context, in *MsgDeleteRepository, opts ...grpc.CallOption) (*MsgDeleteRepositoryResponse, error)
	CreateUser(ctx context.Context, in *MsgCreateUser, opts ...grpc.CallOption) (*MsgCreateUserResponse, error)
	UpdateUserUsername(ctx context.Context, in *MsgUpdateUserUsername, opts ...grpc.CallOption) (*MsgUpdateUserUsernameResponse, error)
	UpdateUserName(ctx context.Context, in *MsgUpdateUserName, opts ...grpc.CallOption) (*MsgUpdateUserNameResponse, error)
	UpdateUserBio(ctx context.Context, in *MsgUpdateUserBio, opts ...grpc.CallOption) (*MsgUpdateUserBioResponse, error)
	UpdateUserAvatar(ctx context.Context, in *MsgUpdateUserAvatar, opts ...grpc.CallOption) (*MsgUpdateUserAvatarResponse, error)
	DeleteUser(ctx context.Context, in *MsgDeleteUser, opts ...grpc.CallOption) (*MsgDeleteUserResponse, error)
	// rpc TransferUser(MsgTransferUser) returns (MsgTransferUserResponse);
	UpdateRepositoryBackupRef(ctx context.Context, in *MsgUpdateRepositoryBackupRef, opts ...grpc.CallOption) (*MsgUpdateRepositoryBackupRefResponse, error)
	AddRepositoryBackupRef(ctx context.Context, in *MsgAddRepositoryBackupRef, opts ...grpc.CallOption) (*MsgAddRepositoryBackupRefResponse, error)
	UpdateUserPinnedRepositories(ctx context.Context, in *MsgUpdateUserPinnedRepositories, opts ...grpc.CallOption) (*MsgUpdateUserPinnedRepositoriesResponse, error)
	UpdateDaoPinnedRepositories(ctx context.Context, in *MsgUpdateDaoPinnedRepositories, opts ...grpc.CallOption) (*MsgUpdateDaoPinnedRepositoriesResponse, error)
	// UpdateParams defines a governance operation for updating the x/gitopia module
	// parameters. The authority is hard-coded to the x/gov module account.
	UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error)
	DistributePlatformIncentives(ctx context.Context, in *MsgDistributePlatformIncentives, opts ...grpc.CallOption) (*MsgDistributePlatformIncentivesResponse, error)
}

type msgClient struct {
	cc grpc1.ClientConn
}

func NewMsgClient(cc grpc1.ClientConn) MsgClient {
	return &msgClient{cc}
}

func (c *msgClient) ToggleForcePush(ctx context.Context, in *MsgToggleForcePush, opts ...grpc.CallOption) (*MsgToggleForcePushResponse, error) {
	out := new(MsgToggleForcePushResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/ToggleForcePush", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateTask(ctx context.Context, in *MsgCreateTask, opts ...grpc.CallOption) (*MsgCreateTaskResponse, error) {
	out := new(MsgCreateTaskResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateTask(ctx context.Context, in *MsgUpdateTask, opts ...grpc.CallOption) (*MsgUpdateTaskResponse, error) {
	out := new(MsgUpdateTaskResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTask(ctx context.Context, in *MsgDeleteTask, opts ...grpc.CallOption) (*MsgDeleteTaskResponse, error) {
	out := new(MsgDeleteTaskResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteTask", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetBranch(ctx context.Context, in *MsgSetBranch, opts ...grpc.CallOption) (*MsgSetBranchResponse, error) {
	out := new(MsgSetBranchResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/SetBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MultiSetBranch(ctx context.Context, in *MsgMultiSetBranch, opts ...grpc.CallOption) (*MsgMultiSetBranchResponse, error) {
	out := new(MsgMultiSetBranchResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/MultiSetBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteBranch(ctx context.Context, in *MsgDeleteBranch, opts ...grpc.CallOption) (*MsgDeleteBranchResponse, error) {
	out := new(MsgDeleteBranchResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MultiDeleteBranch(ctx context.Context, in *MsgMultiDeleteBranch, opts ...grpc.CallOption) (*MsgMultiDeleteBranchResponse, error) {
	out := new(MsgMultiDeleteBranchResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/MultiDeleteBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetTag(ctx context.Context, in *MsgSetTag, opts ...grpc.CallOption) (*MsgSetTagResponse, error) {
	out := new(MsgSetTagResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/SetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MultiSetTag(ctx context.Context, in *MsgMultiSetTag, opts ...grpc.CallOption) (*MsgMultiSetTagResponse, error) {
	out := new(MsgMultiSetTagResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/MultiSetTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteTag(ctx context.Context, in *MsgDeleteTag, opts ...grpc.CallOption) (*MsgDeleteTagResponse, error) {
	out := new(MsgDeleteTagResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) MultiDeleteTag(ctx context.Context, in *MsgMultiDeleteTag, opts ...grpc.CallOption) (*MsgMultiDeleteTagResponse, error) {
	out := new(MsgMultiDeleteTagResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/MultiDeleteTag", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateBounty(ctx context.Context, in *MsgCreateBounty, opts ...grpc.CallOption) (*MsgCreateBountyResponse, error) {
	out := new(MsgCreateBountyResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateBounty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateBountyExpiry(ctx context.Context, in *MsgUpdateBountyExpiry, opts ...grpc.CallOption) (*MsgUpdateBountyExpiryResponse, error) {
	out := new(MsgUpdateBountyExpiryResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateBountyExpiry", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CloseBounty(ctx context.Context, in *MsgCloseBounty, opts ...grpc.CallOption) (*MsgCloseBountyResponse, error) {
	out := new(MsgCloseBountyResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CloseBounty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteBounty(ctx context.Context, in *MsgDeleteBounty, opts ...grpc.CallOption) (*MsgDeleteBountyResponse, error) {
	out := new(MsgDeleteBountyResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteBounty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) Exercise(ctx context.Context, in *MsgExercise, opts ...grpc.CallOption) (*MsgExerciseResponse, error) {
	out := new(MsgExerciseResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/Exercise", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateRelease(ctx context.Context, in *MsgCreateRelease, opts ...grpc.CallOption) (*MsgCreateReleaseResponse, error) {
	out := new(MsgCreateReleaseResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRelease(ctx context.Context, in *MsgUpdateRelease, opts ...grpc.CallOption) (*MsgUpdateReleaseResponse, error) {
	out := new(MsgUpdateReleaseResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteRelease(ctx context.Context, in *MsgDeleteRelease, opts ...grpc.CallOption) (*MsgDeleteReleaseResponse, error) {
	out := new(MsgDeleteReleaseResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreatePullRequest(ctx context.Context, in *MsgCreatePullRequest, opts ...grpc.CallOption) (*MsgCreatePullRequestResponse, error) {
	out := new(MsgCreatePullRequestResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreatePullRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePullRequestTitle(ctx context.Context, in *MsgUpdatePullRequestTitle, opts ...grpc.CallOption) (*MsgUpdatePullRequestTitleResponse, error) {
	out := new(MsgUpdatePullRequestTitleResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdatePullRequestTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdatePullRequestDescription(ctx context.Context, in *MsgUpdatePullRequestDescription, opts ...grpc.CallOption) (*MsgUpdatePullRequestDescriptionResponse, error) {
	out := new(MsgUpdatePullRequestDescriptionResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdatePullRequestDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InvokeMergePullRequest(ctx context.Context, in *MsgInvokeMergePullRequest, opts ...grpc.CallOption) (*MsgInvokeMergePullRequestResponse, error) {
	out := new(MsgInvokeMergePullRequestResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/InvokeMergePullRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) InvokeDaoMergePullRequest(ctx context.Context, in *MsgInvokeDaoMergePullRequest, opts ...grpc.CallOption) (*MsgInvokeDaoMergePullRequestResponse, error) {
	out := new(MsgInvokeDaoMergePullRequestResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/InvokeDaoMergePullRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetPullRequestState(ctx context.Context, in *MsgSetPullRequestState, opts ...grpc.CallOption) (*MsgSetPullRequestStateResponse, error) {
	out := new(MsgSetPullRequestStateResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/SetPullRequestState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddPullRequestReviewers(ctx context.Context, in *MsgAddPullRequestReviewers, opts ...grpc.CallOption) (*MsgAddPullRequestReviewersResponse, error) {
	out := new(MsgAddPullRequestReviewersResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/AddPullRequestReviewers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemovePullRequestReviewers(ctx context.Context, in *MsgRemovePullRequestReviewers, opts ...grpc.CallOption) (*MsgRemovePullRequestReviewersResponse, error) {
	out := new(MsgRemovePullRequestReviewersResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RemovePullRequestReviewers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddPullRequestAssignees(ctx context.Context, in *MsgAddPullRequestAssignees, opts ...grpc.CallOption) (*MsgAddPullRequestAssigneesResponse, error) {
	out := new(MsgAddPullRequestAssigneesResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/AddPullRequestAssignees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemovePullRequestAssignees(ctx context.Context, in *MsgRemovePullRequestAssignees, opts ...grpc.CallOption) (*MsgRemovePullRequestAssigneesResponse, error) {
	out := new(MsgRemovePullRequestAssigneesResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RemovePullRequestAssignees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) LinkPullRequestIssueByIid(ctx context.Context, in *MsgLinkPullRequestIssueByIid, opts ...grpc.CallOption) (*MsgLinkPullRequestIssueByIidResponse, error) {
	out := new(MsgLinkPullRequestIssueByIidResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/LinkPullRequestIssueByIid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UnlinkPullRequestIssueByIid(ctx context.Context, in *MsgUnlinkPullRequestIssueByIid, opts ...grpc.CallOption) (*MsgUnlinkPullRequestIssueByIidResponse, error) {
	out := new(MsgUnlinkPullRequestIssueByIidResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UnlinkPullRequestIssueByIid", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddPullRequestLabels(ctx context.Context, in *MsgAddPullRequestLabels, opts ...grpc.CallOption) (*MsgAddPullRequestLabelsResponse, error) {
	out := new(MsgAddPullRequestLabelsResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/AddPullRequestLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemovePullRequestLabels(ctx context.Context, in *MsgRemovePullRequestLabels, opts ...grpc.CallOption) (*MsgRemovePullRequestLabelsResponse, error) {
	out := new(MsgRemovePullRequestLabelsResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RemovePullRequestLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeletePullRequest(ctx context.Context, in *MsgDeletePullRequest, opts ...grpc.CallOption) (*MsgDeletePullRequestResponse, error) {
	out := new(MsgDeletePullRequestResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeletePullRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateDao(ctx context.Context, in *MsgCreateDao, opts ...grpc.CallOption) (*MsgCreateDaoResponse, error) {
	out := new(MsgCreateDaoResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RenameDao(ctx context.Context, in *MsgRenameDao, opts ...grpc.CallOption) (*MsgRenameDaoResponse, error) {
	out := new(MsgRenameDaoResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RenameDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDaoDescription(ctx context.Context, in *MsgUpdateDaoDescription, opts ...grpc.CallOption) (*MsgUpdateDaoDescriptionResponse, error) {
	out := new(MsgUpdateDaoDescriptionResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateDaoDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDaoWebsite(ctx context.Context, in *MsgUpdateDaoWebsite, opts ...grpc.CallOption) (*MsgUpdateDaoWebsiteResponse, error) {
	out := new(MsgUpdateDaoWebsiteResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateDaoWebsite", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDaoLocation(ctx context.Context, in *MsgUpdateDaoLocation, opts ...grpc.CallOption) (*MsgUpdateDaoLocationResponse, error) {
	out := new(MsgUpdateDaoLocationResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateDaoLocation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDaoAvatar(ctx context.Context, in *MsgUpdateDaoAvatar, opts ...grpc.CallOption) (*MsgUpdateDaoAvatarResponse, error) {
	out := new(MsgUpdateDaoAvatarResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateDaoAvatar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDaoMetadata(ctx context.Context, in *MsgUpdateDaoMetadata, opts ...grpc.CallOption) (*MsgUpdateDaoMetadataResponse, error) {
	out := new(MsgUpdateDaoMetadataResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateDaoMetadata", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DaoTreasurySpend(ctx context.Context, in *MsgDaoTreasurySpend, opts ...grpc.CallOption) (*MsgDaoTreasurySpendResponse, error) {
	out := new(MsgDaoTreasurySpendResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DaoTreasurySpend", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDaoConfig(ctx context.Context, in *MsgUpdateDaoConfig, opts ...grpc.CallOption) (*MsgUpdateDaoConfigResponse, error) {
	out := new(MsgUpdateDaoConfigResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateDaoConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DaoCreateRelease(ctx context.Context, in *MsgDaoCreateRelease, opts ...grpc.CallOption) (*MsgDaoCreateReleaseResponse, error) {
	out := new(MsgDaoCreateReleaseResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DaoCreateRelease", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteDao(ctx context.Context, in *MsgDeleteDao, opts ...grpc.CallOption) (*MsgDeleteDaoResponse, error) {
	out := new(MsgDeleteDaoResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteDao", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateComment(ctx context.Context, in *MsgCreateComment, opts ...grpc.CallOption) (*MsgCreateCommentResponse, error) {
	out := new(MsgCreateCommentResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateComment(ctx context.Context, in *MsgUpdateComment, opts ...grpc.CallOption) (*MsgUpdateCommentResponse, error) {
	out := new(MsgUpdateCommentResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteComment(ctx context.Context, in *MsgDeleteComment, opts ...grpc.CallOption) (*MsgDeleteCommentResponse, error) {
	out := new(MsgDeleteCommentResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteComment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ToggleCommentResolved(ctx context.Context, in *MsgToggleCommentResolved, opts ...grpc.CallOption) (*MsgToggleCommentResolvedResponse, error) {
	out := new(MsgToggleCommentResolvedResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/ToggleCommentResolved", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateIssue(ctx context.Context, in *MsgCreateIssue, opts ...grpc.CallOption) (*MsgCreateIssueResponse, error) {
	out := new(MsgCreateIssueResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateIssueTitle(ctx context.Context, in *MsgUpdateIssueTitle, opts ...grpc.CallOption) (*MsgUpdateIssueTitleResponse, error) {
	out := new(MsgUpdateIssueTitleResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateIssueTitle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateIssueDescription(ctx context.Context, in *MsgUpdateIssueDescription, opts ...grpc.CallOption) (*MsgUpdateIssueDescriptionResponse, error) {
	out := new(MsgUpdateIssueDescriptionResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateIssueDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ToggleIssueState(ctx context.Context, in *MsgToggleIssueState, opts ...grpc.CallOption) (*MsgToggleIssueStateResponse, error) {
	out := new(MsgToggleIssueStateResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/ToggleIssueState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddIssueAssignees(ctx context.Context, in *MsgAddIssueAssignees, opts ...grpc.CallOption) (*MsgAddIssueAssigneesResponse, error) {
	out := new(MsgAddIssueAssigneesResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/AddIssueAssignees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveIssueAssignees(ctx context.Context, in *MsgRemoveIssueAssignees, opts ...grpc.CallOption) (*MsgRemoveIssueAssigneesResponse, error) {
	out := new(MsgRemoveIssueAssigneesResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RemoveIssueAssignees", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddIssueLabels(ctx context.Context, in *MsgAddIssueLabels, opts ...grpc.CallOption) (*MsgAddIssueLabelsResponse, error) {
	out := new(MsgAddIssueLabelsResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/AddIssueLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveIssueLabels(ctx context.Context, in *MsgRemoveIssueLabels, opts ...grpc.CallOption) (*MsgRemoveIssueLabelsResponse, error) {
	out := new(MsgRemoveIssueLabelsResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RemoveIssueLabels", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteIssue(ctx context.Context, in *MsgDeleteIssue, opts ...grpc.CallOption) (*MsgDeleteIssueResponse, error) {
	out := new(MsgDeleteIssueResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteIssue", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateRepository(ctx context.Context, in *MsgCreateRepository, opts ...grpc.CallOption) (*MsgCreateRepositoryResponse, error) {
	out := new(MsgCreateRepositoryResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ForkRepository(ctx context.Context, in *MsgForkRepository, opts ...grpc.CallOption) (*MsgForkRepositoryResponse, error) {
	out := new(MsgForkRepositoryResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/ForkRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RenameRepository(ctx context.Context, in *MsgRenameRepository, opts ...grpc.CallOption) (*MsgRenameRepositoryResponse, error) {
	out := new(MsgRenameRepositoryResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RenameRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRepositoryDescription(ctx context.Context, in *MsgUpdateRepositoryDescription, opts ...grpc.CallOption) (*MsgUpdateRepositoryDescriptionResponse, error) {
	out := new(MsgUpdateRepositoryDescriptionResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateRepositoryDescription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ToggleRepositoryArchived(ctx context.Context, in *MsgToggleRepositoryArchived, opts ...grpc.CallOption) (*MsgToggleRepositoryArchivedResponse, error) {
	out := new(MsgToggleRepositoryArchivedResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/ToggleRepositoryArchived", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ChangeOwner(ctx context.Context, in *MsgChangeOwner, opts ...grpc.CallOption) (*MsgChangeOwnerResponse, error) {
	out := new(MsgChangeOwnerResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/ChangeOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRepositoryCollaborator(ctx context.Context, in *MsgUpdateRepositoryCollaborator, opts ...grpc.CallOption) (*MsgUpdateRepositoryCollaboratorResponse, error) {
	out := new(MsgUpdateRepositoryCollaboratorResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateRepositoryCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDaoRepositoryCollaborator(ctx context.Context, in *MsgUpdateDaoRepositoryCollaborator, opts ...grpc.CallOption) (*MsgUpdateDaoRepositoryCollaboratorResponse, error) {
	out := new(MsgUpdateDaoRepositoryCollaboratorResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateDaoRepositoryCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveRepositoryCollaborator(ctx context.Context, in *MsgRemoveRepositoryCollaborator, opts ...grpc.CallOption) (*MsgRemoveRepositoryCollaboratorResponse, error) {
	out := new(MsgRemoveRepositoryCollaboratorResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RemoveRepositoryCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) RemoveDaoRepositoryCollaborator(ctx context.Context, in *MsgRemoveDaoRepositoryCollaborator, opts ...grpc.CallOption) (*MsgRemoveDaoRepositoryCollaboratorResponse, error) {
	out := new(MsgRemoveDaoRepositoryCollaboratorResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/RemoveDaoRepositoryCollaborator", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateRepositoryLabel(ctx context.Context, in *MsgCreateRepositoryLabel, opts ...grpc.CallOption) (*MsgCreateRepositoryLabelResponse, error) {
	out := new(MsgCreateRepositoryLabelResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateRepositoryLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRepositoryLabel(ctx context.Context, in *MsgUpdateRepositoryLabel, opts ...grpc.CallOption) (*MsgUpdateRepositoryLabelResponse, error) {
	out := new(MsgUpdateRepositoryLabelResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateRepositoryLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteRepositoryLabel(ctx context.Context, in *MsgDeleteRepositoryLabel, opts ...grpc.CallOption) (*MsgDeleteRepositoryLabelResponse, error) {
	out := new(MsgDeleteRepositoryLabelResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteRepositoryLabel", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) SetDefaultBranch(ctx context.Context, in *MsgSetDefaultBranch, opts ...grpc.CallOption) (*MsgSetDefaultBranchResponse, error) {
	out := new(MsgSetDefaultBranchResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/SetDefaultBranch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ToggleRepositoryForking(ctx context.Context, in *MsgToggleRepositoryForking, opts ...grpc.CallOption) (*MsgToggleRepositoryForkingResponse, error) {
	out := new(MsgToggleRepositoryForkingResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/ToggleRepositoryForking", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) ToggleArweaveBackup(ctx context.Context, in *MsgToggleArweaveBackup, opts ...grpc.CallOption) (*MsgToggleArweaveBackupResponse, error) {
	out := new(MsgToggleArweaveBackupResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/ToggleArweaveBackup", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteRepository(ctx context.Context, in *MsgDeleteRepository, opts ...grpc.CallOption) (*MsgDeleteRepositoryResponse, error) {
	out := new(MsgDeleteRepositoryResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) CreateUser(ctx context.Context, in *MsgCreateUser, opts ...grpc.CallOption) (*MsgCreateUserResponse, error) {
	out := new(MsgCreateUserResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateUserUsername(ctx context.Context, in *MsgUpdateUserUsername, opts ...grpc.CallOption) (*MsgUpdateUserUsernameResponse, error) {
	out := new(MsgUpdateUserUsernameResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateUserUsername", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateUserName(ctx context.Context, in *MsgUpdateUserName, opts ...grpc.CallOption) (*MsgUpdateUserNameResponse, error) {
	out := new(MsgUpdateUserNameResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateUserName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateUserBio(ctx context.Context, in *MsgUpdateUserBio, opts ...grpc.CallOption) (*MsgUpdateUserBioResponse, error) {
	out := new(MsgUpdateUserBioResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateUserBio", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateUserAvatar(ctx context.Context, in *MsgUpdateUserAvatar, opts ...grpc.CallOption) (*MsgUpdateUserAvatarResponse, error) {
	out := new(MsgUpdateUserAvatarResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateUserAvatar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DeleteUser(ctx context.Context, in *MsgDeleteUser, opts ...grpc.CallOption) (*MsgDeleteUserResponse, error) {
	out := new(MsgDeleteUserResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateRepositoryBackupRef(ctx context.Context, in *MsgUpdateRepositoryBackupRef, opts ...grpc.CallOption) (*MsgUpdateRepositoryBackupRefResponse, error) {
	out := new(MsgUpdateRepositoryBackupRefResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateRepositoryBackupRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) AddRepositoryBackupRef(ctx context.Context, in *MsgAddRepositoryBackupRef, opts ...grpc.CallOption) (*MsgAddRepositoryBackupRefResponse, error) {
	out := new(MsgAddRepositoryBackupRefResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/AddRepositoryBackupRef", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateUserPinnedRepositories(ctx context.Context, in *MsgUpdateUserPinnedRepositories, opts ...grpc.CallOption) (*MsgUpdateUserPinnedRepositoriesResponse, error) {
	out := new(MsgUpdateUserPinnedRepositoriesResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateUserPinnedRepositories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateDaoPinnedRepositories(ctx context.Context, in *MsgUpdateDaoPinnedRepositories, opts ...grpc.CallOption) (*MsgUpdateDaoPinnedRepositoriesResponse, error) {
	out := new(MsgUpdateDaoPinnedRepositoriesResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateDaoPinnedRepositories", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) UpdateParams(ctx context.Context, in *MsgUpdateParams, opts ...grpc.CallOption) (*MsgUpdateParamsResponse, error) {
	out := new(MsgUpdateParamsResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/UpdateParams", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgClient) DistributePlatformIncentives(ctx context.Context, in *MsgDistributePlatformIncentives, opts ...grpc.CallOption) (*MsgDistributePlatformIncentivesResponse, error) {
	out := new(MsgDistributePlatformIncentivesResponse)
	err := c.cc.Invoke(ctx, "/gitopia.gitopia.gitopia.Msg/DistributePlatformIncentives", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgServer is the server API for Msg service.
type MsgServer interface {
	// this line is used by starport scaffolding # proto/tx/rpc
	ToggleForcePush(context.Context, *MsgToggleForcePush) (*MsgToggleForcePushResponse, error)
	CreateTask(context.Context, *MsgCreateTask) (*MsgCreateTaskResponse, error)
	UpdateTask(context.Context, *MsgUpdateTask) (*MsgUpdateTaskResponse, error)
	DeleteTask(context.Context, *MsgDeleteTask) (*MsgDeleteTaskResponse, error)
	SetBranch(context.Context, *MsgSetBranch) (*MsgSetBranchResponse, error)
	MultiSetBranch(context.Context, *MsgMultiSetBranch) (*MsgMultiSetBranchResponse, error)
	DeleteBranch(context.Context, *MsgDeleteBranch) (*MsgDeleteBranchResponse, error)
	MultiDeleteBranch(context.Context, *MsgMultiDeleteBranch) (*MsgMultiDeleteBranchResponse, error)
	SetTag(context.Context, *MsgSetTag) (*MsgSetTagResponse, error)
	MultiSetTag(context.Context, *MsgMultiSetTag) (*MsgMultiSetTagResponse, error)
	DeleteTag(context.Context, *MsgDeleteTag) (*MsgDeleteTagResponse, error)
	MultiDeleteTag(context.Context, *MsgMultiDeleteTag) (*MsgMultiDeleteTagResponse, error)
	CreateBounty(context.Context, *MsgCreateBounty) (*MsgCreateBountyResponse, error)
	UpdateBountyExpiry(context.Context, *MsgUpdateBountyExpiry) (*MsgUpdateBountyExpiryResponse, error)
	CloseBounty(context.Context, *MsgCloseBounty) (*MsgCloseBountyResponse, error)
	DeleteBounty(context.Context, *MsgDeleteBounty) (*MsgDeleteBountyResponse, error)
	// this line is used by starport scaffolding # proto/tx/rpc
	Exercise(context.Context, *MsgExercise) (*MsgExerciseResponse, error)
	CreateRelease(context.Context, *MsgCreateRelease) (*MsgCreateReleaseResponse, error)
	UpdateRelease(context.Context, *MsgUpdateRelease) (*MsgUpdateReleaseResponse, error)
	DeleteRelease(context.Context, *MsgDeleteRelease) (*MsgDeleteReleaseResponse, error)
	CreatePullRequest(context.Context, *MsgCreatePullRequest) (*MsgCreatePullRequestResponse, error)
	UpdatePullRequestTitle(context.Context, *MsgUpdatePullRequestTitle) (*MsgUpdatePullRequestTitleResponse, error)
	UpdatePullRequestDescription(context.Context, *MsgUpdatePullRequestDescription) (*MsgUpdatePullRequestDescriptionResponse, error)
	InvokeMergePullRequest(context.Context, *MsgInvokeMergePullRequest) (*MsgInvokeMergePullRequestResponse, error)
	InvokeDaoMergePullRequest(context.Context, *MsgInvokeDaoMergePullRequest) (*MsgInvokeDaoMergePullRequestResponse, error)
	SetPullRequestState(context.Context, *MsgSetPullRequestState) (*MsgSetPullRequestStateResponse, error)
	AddPullRequestReviewers(context.Context, *MsgAddPullRequestReviewers) (*MsgAddPullRequestReviewersResponse, error)
	RemovePullRequestReviewers(context.Context, *MsgRemovePullRequestReviewers) (*MsgRemovePullRequestReviewersResponse, error)
	AddPullRequestAssignees(context.Context, *MsgAddPullRequestAssignees) (*MsgAddPullRequestAssigneesResponse, error)
	RemovePullRequestAssignees(context.Context, *MsgRemovePullRequestAssignees) (*MsgRemovePullRequestAssigneesResponse, error)
	LinkPullRequestIssueByIid(context.Context, *MsgLinkPullRequestIssueByIid) (*MsgLinkPullRequestIssueByIidResponse, error)
	UnlinkPullRequestIssueByIid(context.Context, *MsgUnlinkPullRequestIssueByIid) (*MsgUnlinkPullRequestIssueByIidResponse, error)
	AddPullRequestLabels(context.Context, *MsgAddPullRequestLabels) (*MsgAddPullRequestLabelsResponse, error)
	RemovePullRequestLabels(context.Context, *MsgRemovePullRequestLabels) (*MsgRemovePullRequestLabelsResponse, error)
	DeletePullRequest(context.Context, *MsgDeletePullRequest) (*MsgDeletePullRequestResponse, error)
	CreateDao(context.Context, *MsgCreateDao) (*MsgCreateDaoResponse, error)
	RenameDao(context.Context, *MsgRenameDao) (*MsgRenameDaoResponse, error)
	UpdateDaoDescription(context.Context, *MsgUpdateDaoDescription) (*MsgUpdateDaoDescriptionResponse, error)
	UpdateDaoWebsite(context.Context, *MsgUpdateDaoWebsite) (*MsgUpdateDaoWebsiteResponse, error)
	UpdateDaoLocation(context.Context, *MsgUpdateDaoLocation) (*MsgUpdateDaoLocationResponse, error)
	UpdateDaoAvatar(context.Context, *MsgUpdateDaoAvatar) (*MsgUpdateDaoAvatarResponse, error)
	UpdateDaoMetadata(context.Context, *MsgUpdateDaoMetadata) (*MsgUpdateDaoMetadataResponse, error)
	DaoTreasurySpend(context.Context, *MsgDaoTreasurySpend) (*MsgDaoTreasurySpendResponse, error)
	UpdateDaoConfig(context.Context, *MsgUpdateDaoConfig) (*MsgUpdateDaoConfigResponse, error)
	DaoCreateRelease(context.Context, *MsgDaoCreateRelease) (*MsgDaoCreateReleaseResponse, error)
	DeleteDao(context.Context, *MsgDeleteDao) (*MsgDeleteDaoResponse, error)
	CreateComment(context.Context, *MsgCreateComment) (*MsgCreateCommentResponse, error)
	UpdateComment(context.Context, *MsgUpdateComment) (*MsgUpdateCommentResponse, error)
	DeleteComment(context.Context, *MsgDeleteComment) (*MsgDeleteCommentResponse, error)
	ToggleCommentResolved(context.Context, *MsgToggleCommentResolved) (*MsgToggleCommentResolvedResponse, error)
	CreateIssue(context.Context, *MsgCreateIssue) (*MsgCreateIssueResponse, error)
	UpdateIssueTitle(context.Context, *MsgUpdateIssueTitle) (*MsgUpdateIssueTitleResponse, error)
	UpdateIssueDescription(context.Context, *MsgUpdateIssueDescription) (*MsgUpdateIssueDescriptionResponse, error)
	ToggleIssueState(context.Context, *MsgToggleIssueState) (*MsgToggleIssueStateResponse, error)
	AddIssueAssignees(context.Context, *MsgAddIssueAssignees) (*MsgAddIssueAssigneesResponse, error)
	RemoveIssueAssignees(context.Context, *MsgRemoveIssueAssignees) (*MsgRemoveIssueAssigneesResponse, error)
	AddIssueLabels(context.Context, *MsgAddIssueLabels) (*MsgAddIssueLabelsResponse, error)
	RemoveIssueLabels(context.Context, *MsgRemoveIssueLabels) (*MsgRemoveIssueLabelsResponse, error)
	DeleteIssue(context.Context, *MsgDeleteIssue) (*MsgDeleteIssueResponse, error)
	CreateRepository(context.Context, *MsgCreateRepository) (*MsgCreateRepositoryResponse, error)
	ForkRepository(context.Context, *MsgForkRepository) (*MsgForkRepositoryResponse, error)
	RenameRepository(context.Context, *MsgRenameRepository) (*MsgRenameRepositoryResponse, error)
	UpdateRepositoryDescription(context.Context, *MsgUpdateRepositoryDescription) (*MsgUpdateRepositoryDescriptionResponse, error)
	ToggleRepositoryArchived(context.Context, *MsgToggleRepositoryArchived) (*MsgToggleRepositoryArchivedResponse, error)
	ChangeOwner(context.Context, *MsgChangeOwner) (*MsgChangeOwnerResponse, error)
	UpdateRepositoryCollaborator(context.Context, *MsgUpdateRepositoryCollaborator) (*MsgUpdateRepositoryCollaboratorResponse, error)
	UpdateDaoRepositoryCollaborator(context.Context, *MsgUpdateDaoRepositoryCollaborator) (*MsgUpdateDaoRepositoryCollaboratorResponse, error)
	RemoveRepositoryCollaborator(context.Context, *MsgRemoveRepositoryCollaborator) (*MsgRemoveRepositoryCollaboratorResponse, error)
	RemoveDaoRepositoryCollaborator(context.Context, *MsgRemoveDaoRepositoryCollaborator) (*MsgRemoveDaoRepositoryCollaboratorResponse, error)
	CreateRepositoryLabel(context.Context, *MsgCreateRepositoryLabel) (*MsgCreateRepositoryLabelResponse, error)
	UpdateRepositoryLabel(context.Context, *MsgUpdateRepositoryLabel) (*MsgUpdateRepositoryLabelResponse, error)
	DeleteRepositoryLabel(context.Context, *MsgDeleteRepositoryLabel) (*MsgDeleteRepositoryLabelResponse, error)
	SetDefaultBranch(context.Context, *MsgSetDefaultBranch) (*MsgSetDefaultBranchResponse, error)
	ToggleRepositoryForking(context.Context, *MsgToggleRepositoryForking) (*MsgToggleRepositoryForkingResponse, error)
	ToggleArweaveBackup(context.Context, *MsgToggleArweaveBackup) (*MsgToggleArweaveBackupResponse, error)
	DeleteRepository(context.Context, *MsgDeleteRepository) (*MsgDeleteRepositoryResponse, error)
	CreateUser(context.Context, *MsgCreateUser) (*MsgCreateUserResponse, error)
	UpdateUserUsername(context.Context, *MsgUpdateUserUsername) (*MsgUpdateUserUsernameResponse, error)
	UpdateUserName(context.Context, *MsgUpdateUserName) (*MsgUpdateUserNameResponse, error)
	UpdateUserBio(context.Context, *MsgUpdateUserBio) (*MsgUpdateUserBioResponse, error)
	UpdateUserAvatar(context.Context, *MsgUpdateUserAvatar) (*MsgUpdateUserAvatarResponse, error)
	DeleteUser(context.Context, *MsgDeleteUser) (*MsgDeleteUserResponse, error)
	// rpc TransferUser(MsgTransferUser) returns (MsgTransferUserResponse);
	UpdateRepositoryBackupRef(context.Context, *MsgUpdateRepositoryBackupRef) (*MsgUpdateRepositoryBackupRefResponse, error)
	AddRepositoryBackupRef(context.Context, *MsgAddRepositoryBackupRef) (*MsgAddRepositoryBackupRefResponse, error)
	UpdateUserPinnedRepositories(context.Context, *MsgUpdateUserPinnedRepositories) (*MsgUpdateUserPinnedRepositoriesResponse, error)
	UpdateDaoPinnedRepositories(context.Context, *MsgUpdateDaoPinnedRepositories) (*MsgUpdateDaoPinnedRepositoriesResponse, error)
	// UpdateParams defines a governance operation for updating the x/gitopia module
	// parameters. The authority is hard-coded to the x/gov module account.
	UpdateParams(context.Context, *MsgUpdateParams) (*MsgUpdateParamsResponse, error)
	DistributePlatformIncentives(context.Context, *MsgDistributePlatformIncentives) (*MsgDistributePlatformIncentivesResponse, error)
}

// UnimplementedMsgServer can be embedded to have forward compatible implementations.
type UnimplementedMsgServer struct {
}

func (*UnimplementedMsgServer) ToggleForcePush(ctx context.Context, req *MsgToggleForcePush) (*MsgToggleForcePushResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleForcePush not implemented")
}
func (*UnimplementedMsgServer) CreateTask(ctx context.Context, req *MsgCreateTask) (*MsgCreateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateTask not implemented")
}
func (*UnimplementedMsgServer) UpdateTask(ctx context.Context, req *MsgUpdateTask) (*MsgUpdateTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateTask not implemented")
}
func (*UnimplementedMsgServer) DeleteTask(ctx context.Context, req *MsgDeleteTask) (*MsgDeleteTaskResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTask not implemented")
}
func (*UnimplementedMsgServer) SetBranch(ctx context.Context, req *MsgSetBranch) (*MsgSetBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetBranch not implemented")
}
func (*UnimplementedMsgServer) MultiSetBranch(ctx context.Context, req *MsgMultiSetBranch) (*MsgMultiSetBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiSetBranch not implemented")
}
func (*UnimplementedMsgServer) DeleteBranch(ctx context.Context, req *MsgDeleteBranch) (*MsgDeleteBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBranch not implemented")
}
func (*UnimplementedMsgServer) MultiDeleteBranch(ctx context.Context, req *MsgMultiDeleteBranch) (*MsgMultiDeleteBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiDeleteBranch not implemented")
}
func (*UnimplementedMsgServer) SetTag(ctx context.Context, req *MsgSetTag) (*MsgSetTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetTag not implemented")
}
func (*UnimplementedMsgServer) MultiSetTag(ctx context.Context, req *MsgMultiSetTag) (*MsgMultiSetTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiSetTag not implemented")
}
func (*UnimplementedMsgServer) DeleteTag(ctx context.Context, req *MsgDeleteTag) (*MsgDeleteTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteTag not implemented")
}
func (*UnimplementedMsgServer) MultiDeleteTag(ctx context.Context, req *MsgMultiDeleteTag) (*MsgMultiDeleteTagResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiDeleteTag not implemented")
}
func (*UnimplementedMsgServer) CreateBounty(ctx context.Context, req *MsgCreateBounty) (*MsgCreateBountyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBounty not implemented")
}
func (*UnimplementedMsgServer) UpdateBountyExpiry(ctx context.Context, req *MsgUpdateBountyExpiry) (*MsgUpdateBountyExpiryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBountyExpiry not implemented")
}
func (*UnimplementedMsgServer) CloseBounty(ctx context.Context, req *MsgCloseBounty) (*MsgCloseBountyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CloseBounty not implemented")
}
func (*UnimplementedMsgServer) DeleteBounty(ctx context.Context, req *MsgDeleteBounty) (*MsgDeleteBountyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBounty not implemented")
}
func (*UnimplementedMsgServer) Exercise(ctx context.Context, req *MsgExercise) (*MsgExerciseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exercise not implemented")
}
func (*UnimplementedMsgServer) CreateRelease(ctx context.Context, req *MsgCreateRelease) (*MsgCreateReleaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRelease not implemented")
}
func (*UnimplementedMsgServer) UpdateRelease(ctx context.Context, req *MsgUpdateRelease) (*MsgUpdateReleaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRelease not implemented")
}
func (*UnimplementedMsgServer) DeleteRelease(ctx context.Context, req *MsgDeleteRelease) (*MsgDeleteReleaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRelease not implemented")
}
func (*UnimplementedMsgServer) CreatePullRequest(ctx context.Context, req *MsgCreatePullRequest) (*MsgCreatePullRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePullRequest not implemented")
}
func (*UnimplementedMsgServer) UpdatePullRequestTitle(ctx context.Context, req *MsgUpdatePullRequestTitle) (*MsgUpdatePullRequestTitleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePullRequestTitle not implemented")
}
func (*UnimplementedMsgServer) UpdatePullRequestDescription(ctx context.Context, req *MsgUpdatePullRequestDescription) (*MsgUpdatePullRequestDescriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePullRequestDescription not implemented")
}
func (*UnimplementedMsgServer) InvokeMergePullRequest(ctx context.Context, req *MsgInvokeMergePullRequest) (*MsgInvokeMergePullRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeMergePullRequest not implemented")
}
func (*UnimplementedMsgServer) InvokeDaoMergePullRequest(ctx context.Context, req *MsgInvokeDaoMergePullRequest) (*MsgInvokeDaoMergePullRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InvokeDaoMergePullRequest not implemented")
}
func (*UnimplementedMsgServer) SetPullRequestState(ctx context.Context, req *MsgSetPullRequestState) (*MsgSetPullRequestStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPullRequestState not implemented")
}
func (*UnimplementedMsgServer) AddPullRequestReviewers(ctx context.Context, req *MsgAddPullRequestReviewers) (*MsgAddPullRequestReviewersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPullRequestReviewers not implemented")
}
func (*UnimplementedMsgServer) RemovePullRequestReviewers(ctx context.Context, req *MsgRemovePullRequestReviewers) (*MsgRemovePullRequestReviewersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePullRequestReviewers not implemented")
}
func (*UnimplementedMsgServer) AddPullRequestAssignees(ctx context.Context, req *MsgAddPullRequestAssignees) (*MsgAddPullRequestAssigneesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPullRequestAssignees not implemented")
}
func (*UnimplementedMsgServer) RemovePullRequestAssignees(ctx context.Context, req *MsgRemovePullRequestAssignees) (*MsgRemovePullRequestAssigneesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePullRequestAssignees not implemented")
}
func (*UnimplementedMsgServer) LinkPullRequestIssueByIid(ctx context.Context, req *MsgLinkPullRequestIssueByIid) (*MsgLinkPullRequestIssueByIidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LinkPullRequestIssueByIid not implemented")
}
func (*UnimplementedMsgServer) UnlinkPullRequestIssueByIid(ctx context.Context, req *MsgUnlinkPullRequestIssueByIid) (*MsgUnlinkPullRequestIssueByIidResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlinkPullRequestIssueByIid not implemented")
}
func (*UnimplementedMsgServer) AddPullRequestLabels(ctx context.Context, req *MsgAddPullRequestLabels) (*MsgAddPullRequestLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPullRequestLabels not implemented")
}
func (*UnimplementedMsgServer) RemovePullRequestLabels(ctx context.Context, req *MsgRemovePullRequestLabels) (*MsgRemovePullRequestLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePullRequestLabels not implemented")
}
func (*UnimplementedMsgServer) DeletePullRequest(ctx context.Context, req *MsgDeletePullRequest) (*MsgDeletePullRequestResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePullRequest not implemented")
}
func (*UnimplementedMsgServer) CreateDao(ctx context.Context, req *MsgCreateDao) (*MsgCreateDaoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateDao not implemented")
}
func (*UnimplementedMsgServer) RenameDao(ctx context.Context, req *MsgRenameDao) (*MsgRenameDaoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenameDao not implemented")
}
func (*UnimplementedMsgServer) UpdateDaoDescription(ctx context.Context, req *MsgUpdateDaoDescription) (*MsgUpdateDaoDescriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDaoDescription not implemented")
}
func (*UnimplementedMsgServer) UpdateDaoWebsite(ctx context.Context, req *MsgUpdateDaoWebsite) (*MsgUpdateDaoWebsiteResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDaoWebsite not implemented")
}
func (*UnimplementedMsgServer) UpdateDaoLocation(ctx context.Context, req *MsgUpdateDaoLocation) (*MsgUpdateDaoLocationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDaoLocation not implemented")
}
func (*UnimplementedMsgServer) UpdateDaoAvatar(ctx context.Context, req *MsgUpdateDaoAvatar) (*MsgUpdateDaoAvatarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDaoAvatar not implemented")
}
func (*UnimplementedMsgServer) UpdateDaoMetadata(ctx context.Context, req *MsgUpdateDaoMetadata) (*MsgUpdateDaoMetadataResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDaoMetadata not implemented")
}
func (*UnimplementedMsgServer) DaoTreasurySpend(ctx context.Context, req *MsgDaoTreasurySpend) (*MsgDaoTreasurySpendResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DaoTreasurySpend not implemented")
}
func (*UnimplementedMsgServer) UpdateDaoConfig(ctx context.Context, req *MsgUpdateDaoConfig) (*MsgUpdateDaoConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDaoConfig not implemented")
}
func (*UnimplementedMsgServer) DaoCreateRelease(ctx context.Context, req *MsgDaoCreateRelease) (*MsgDaoCreateReleaseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DaoCreateRelease not implemented")
}
func (*UnimplementedMsgServer) DeleteDao(ctx context.Context, req *MsgDeleteDao) (*MsgDeleteDaoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteDao not implemented")
}
func (*UnimplementedMsgServer) CreateComment(ctx context.Context, req *MsgCreateComment) (*MsgCreateCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateComment not implemented")
}
func (*UnimplementedMsgServer) UpdateComment(ctx context.Context, req *MsgUpdateComment) (*MsgUpdateCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateComment not implemented")
}
func (*UnimplementedMsgServer) DeleteComment(ctx context.Context, req *MsgDeleteComment) (*MsgDeleteCommentResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteComment not implemented")
}
func (*UnimplementedMsgServer) ToggleCommentResolved(ctx context.Context, req *MsgToggleCommentResolved) (*MsgToggleCommentResolvedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleCommentResolved not implemented")
}
func (*UnimplementedMsgServer) CreateIssue(ctx context.Context, req *MsgCreateIssue) (*MsgCreateIssueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateIssue not implemented")
}
func (*UnimplementedMsgServer) UpdateIssueTitle(ctx context.Context, req *MsgUpdateIssueTitle) (*MsgUpdateIssueTitleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIssueTitle not implemented")
}
func (*UnimplementedMsgServer) UpdateIssueDescription(ctx context.Context, req *MsgUpdateIssueDescription) (*MsgUpdateIssueDescriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateIssueDescription not implemented")
}
func (*UnimplementedMsgServer) ToggleIssueState(ctx context.Context, req *MsgToggleIssueState) (*MsgToggleIssueStateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleIssueState not implemented")
}
func (*UnimplementedMsgServer) AddIssueAssignees(ctx context.Context, req *MsgAddIssueAssignees) (*MsgAddIssueAssigneesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddIssueAssignees not implemented")
}
func (*UnimplementedMsgServer) RemoveIssueAssignees(ctx context.Context, req *MsgRemoveIssueAssignees) (*MsgRemoveIssueAssigneesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveIssueAssignees not implemented")
}
func (*UnimplementedMsgServer) AddIssueLabels(ctx context.Context, req *MsgAddIssueLabels) (*MsgAddIssueLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddIssueLabels not implemented")
}
func (*UnimplementedMsgServer) RemoveIssueLabels(ctx context.Context, req *MsgRemoveIssueLabels) (*MsgRemoveIssueLabelsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveIssueLabels not implemented")
}
func (*UnimplementedMsgServer) DeleteIssue(ctx context.Context, req *MsgDeleteIssue) (*MsgDeleteIssueResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteIssue not implemented")
}
func (*UnimplementedMsgServer) CreateRepository(ctx context.Context, req *MsgCreateRepository) (*MsgCreateRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepository not implemented")
}
func (*UnimplementedMsgServer) ForkRepository(ctx context.Context, req *MsgForkRepository) (*MsgForkRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ForkRepository not implemented")
}
func (*UnimplementedMsgServer) RenameRepository(ctx context.Context, req *MsgRenameRepository) (*MsgRenameRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RenameRepository not implemented")
}
func (*UnimplementedMsgServer) UpdateRepositoryDescription(ctx context.Context, req *MsgUpdateRepositoryDescription) (*MsgUpdateRepositoryDescriptionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRepositoryDescription not implemented")
}
func (*UnimplementedMsgServer) ToggleRepositoryArchived(ctx context.Context, req *MsgToggleRepositoryArchived) (*MsgToggleRepositoryArchivedResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleRepositoryArchived not implemented")
}
func (*UnimplementedMsgServer) ChangeOwner(ctx context.Context, req *MsgChangeOwner) (*MsgChangeOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeOwner not implemented")
}
func (*UnimplementedMsgServer) UpdateRepositoryCollaborator(ctx context.Context, req *MsgUpdateRepositoryCollaborator) (*MsgUpdateRepositoryCollaboratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRepositoryCollaborator not implemented")
}
func (*UnimplementedMsgServer) UpdateDaoRepositoryCollaborator(ctx context.Context, req *MsgUpdateDaoRepositoryCollaborator) (*MsgUpdateDaoRepositoryCollaboratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDaoRepositoryCollaborator not implemented")
}
func (*UnimplementedMsgServer) RemoveRepositoryCollaborator(ctx context.Context, req *MsgRemoveRepositoryCollaborator) (*MsgRemoveRepositoryCollaboratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveRepositoryCollaborator not implemented")
}
func (*UnimplementedMsgServer) RemoveDaoRepositoryCollaborator(ctx context.Context, req *MsgRemoveDaoRepositoryCollaborator) (*MsgRemoveDaoRepositoryCollaboratorResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveDaoRepositoryCollaborator not implemented")
}
func (*UnimplementedMsgServer) CreateRepositoryLabel(ctx context.Context, req *MsgCreateRepositoryLabel) (*MsgCreateRepositoryLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepositoryLabel not implemented")
}
func (*UnimplementedMsgServer) UpdateRepositoryLabel(ctx context.Context, req *MsgUpdateRepositoryLabel) (*MsgUpdateRepositoryLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRepositoryLabel not implemented")
}
func (*UnimplementedMsgServer) DeleteRepositoryLabel(ctx context.Context, req *MsgDeleteRepositoryLabel) (*MsgDeleteRepositoryLabelResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepositoryLabel not implemented")
}
func (*UnimplementedMsgServer) SetDefaultBranch(ctx context.Context, req *MsgSetDefaultBranch) (*MsgSetDefaultBranchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDefaultBranch not implemented")
}
func (*UnimplementedMsgServer) ToggleRepositoryForking(ctx context.Context, req *MsgToggleRepositoryForking) (*MsgToggleRepositoryForkingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleRepositoryForking not implemented")
}
func (*UnimplementedMsgServer) ToggleArweaveBackup(ctx context.Context, req *MsgToggleArweaveBackup) (*MsgToggleArweaveBackupResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleArweaveBackup not implemented")
}
func (*UnimplementedMsgServer) DeleteRepository(ctx context.Context, req *MsgDeleteRepository) (*MsgDeleteRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteRepository not implemented")
}
func (*UnimplementedMsgServer) CreateUser(ctx context.Context, req *MsgCreateUser) (*MsgCreateUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateUser not implemented")
}
func (*UnimplementedMsgServer) UpdateUserUsername(ctx context.Context, req *MsgUpdateUserUsername) (*MsgUpdateUserUsernameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserUsername not implemented")
}
func (*UnimplementedMsgServer) UpdateUserName(ctx context.Context, req *MsgUpdateUserName) (*MsgUpdateUserNameResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserName not implemented")
}
func (*UnimplementedMsgServer) UpdateUserBio(ctx context.Context, req *MsgUpdateUserBio) (*MsgUpdateUserBioResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserBio not implemented")
}
func (*UnimplementedMsgServer) UpdateUserAvatar(ctx context.Context, req *MsgUpdateUserAvatar) (*MsgUpdateUserAvatarResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserAvatar not implemented")
}
func (*UnimplementedMsgServer) DeleteUser(ctx context.Context, req *MsgDeleteUser) (*MsgDeleteUserResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}
func (*UnimplementedMsgServer) UpdateRepositoryBackupRef(ctx context.Context, req *MsgUpdateRepositoryBackupRef) (*MsgUpdateRepositoryBackupRefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateRepositoryBackupRef not implemented")
}
func (*UnimplementedMsgServer) AddRepositoryBackupRef(ctx context.Context, req *MsgAddRepositoryBackupRef) (*MsgAddRepositoryBackupRefResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddRepositoryBackupRef not implemented")
}
func (*UnimplementedMsgServer) UpdateUserPinnedRepositories(ctx context.Context, req *MsgUpdateUserPinnedRepositories) (*MsgUpdateUserPinnedRepositoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUserPinnedRepositories not implemented")
}
func (*UnimplementedMsgServer) UpdateDaoPinnedRepositories(ctx context.Context, req *MsgUpdateDaoPinnedRepositories) (*MsgUpdateDaoPinnedRepositoriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateDaoPinnedRepositories not implemented")
}
func (*UnimplementedMsgServer) UpdateParams(ctx context.Context, req *MsgUpdateParams) (*MsgUpdateParamsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateParams not implemented")
}
func (*UnimplementedMsgServer) DistributePlatformIncentives(ctx context.Context, req *MsgDistributePlatformIncentives) (*MsgDistributePlatformIncentivesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DistributePlatformIncentives not implemented")
}

func RegisterMsgServer(s grpc1.Server, srv MsgServer) {
	s.RegisterService(&_Msg_serviceDesc, srv)
}

func _Msg_ToggleForcePush_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToggleForcePush)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ToggleForcePush(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/ToggleForcePush",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ToggleForcePush(ctx, req.(*MsgToggleForcePush))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateTask(ctx, req.(*MsgCreateTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateTask(ctx, req.(*MsgUpdateTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTask_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTask)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTask(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteTask",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTask(ctx, req.(*MsgDeleteTask))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/SetBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetBranch(ctx, req.(*MsgSetBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MultiSetBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMultiSetBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MultiSetBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/MultiSetBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MultiSetBranch(ctx, req.(*MsgMultiSetBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteBranch(ctx, req.(*MsgDeleteBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MultiDeleteBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMultiDeleteBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MultiDeleteBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/MultiDeleteBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MultiDeleteBranch(ctx, req.(*MsgMultiDeleteBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/SetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetTag(ctx, req.(*MsgSetTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MultiSetTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMultiSetTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MultiSetTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/MultiSetTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MultiSetTag(ctx, req.(*MsgMultiSetTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteTag(ctx, req.(*MsgDeleteTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_MultiDeleteTag_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgMultiDeleteTag)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).MultiDeleteTag(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/MultiDeleteTag",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).MultiDeleteTag(ctx, req.(*MsgMultiDeleteTag))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateBounty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateBounty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateBounty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateBounty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateBounty(ctx, req.(*MsgCreateBounty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateBountyExpiry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateBountyExpiry)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateBountyExpiry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateBountyExpiry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateBountyExpiry(ctx, req.(*MsgUpdateBountyExpiry))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CloseBounty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCloseBounty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CloseBounty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CloseBounty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CloseBounty(ctx, req.(*MsgCloseBounty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteBounty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteBounty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteBounty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteBounty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteBounty(ctx, req.(*MsgDeleteBounty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_Exercise_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgExercise)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).Exercise(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/Exercise",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).Exercise(ctx, req.(*MsgExercise))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRelease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRelease(ctx, req.(*MsgCreateRelease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRelease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRelease(ctx, req.(*MsgUpdateRelease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteRelease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteRelease(ctx, req.(*MsgDeleteRelease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreatePullRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreatePullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreatePullRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreatePullRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreatePullRequest(ctx, req.(*MsgCreatePullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePullRequestTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePullRequestTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePullRequestTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdatePullRequestTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePullRequestTitle(ctx, req.(*MsgUpdatePullRequestTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdatePullRequestDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdatePullRequestDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdatePullRequestDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdatePullRequestDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdatePullRequestDescription(ctx, req.(*MsgUpdatePullRequestDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InvokeMergePullRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInvokeMergePullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InvokeMergePullRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/InvokeMergePullRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InvokeMergePullRequest(ctx, req.(*MsgInvokeMergePullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_InvokeDaoMergePullRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgInvokeDaoMergePullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).InvokeDaoMergePullRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/InvokeDaoMergePullRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).InvokeDaoMergePullRequest(ctx, req.(*MsgInvokeDaoMergePullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetPullRequestState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetPullRequestState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetPullRequestState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/SetPullRequestState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetPullRequestState(ctx, req.(*MsgSetPullRequestState))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddPullRequestReviewers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddPullRequestReviewers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddPullRequestReviewers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/AddPullRequestReviewers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddPullRequestReviewers(ctx, req.(*MsgAddPullRequestReviewers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemovePullRequestReviewers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemovePullRequestReviewers)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemovePullRequestReviewers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RemovePullRequestReviewers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemovePullRequestReviewers(ctx, req.(*MsgRemovePullRequestReviewers))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddPullRequestAssignees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddPullRequestAssignees)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddPullRequestAssignees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/AddPullRequestAssignees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddPullRequestAssignees(ctx, req.(*MsgAddPullRequestAssignees))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemovePullRequestAssignees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemovePullRequestAssignees)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemovePullRequestAssignees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RemovePullRequestAssignees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemovePullRequestAssignees(ctx, req.(*MsgRemovePullRequestAssignees))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_LinkPullRequestIssueByIid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgLinkPullRequestIssueByIid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).LinkPullRequestIssueByIid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/LinkPullRequestIssueByIid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).LinkPullRequestIssueByIid(ctx, req.(*MsgLinkPullRequestIssueByIid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UnlinkPullRequestIssueByIid_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUnlinkPullRequestIssueByIid)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UnlinkPullRequestIssueByIid(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UnlinkPullRequestIssueByIid",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UnlinkPullRequestIssueByIid(ctx, req.(*MsgUnlinkPullRequestIssueByIid))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddPullRequestLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddPullRequestLabels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddPullRequestLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/AddPullRequestLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddPullRequestLabels(ctx, req.(*MsgAddPullRequestLabels))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemovePullRequestLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemovePullRequestLabels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemovePullRequestLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RemovePullRequestLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemovePullRequestLabels(ctx, req.(*MsgRemovePullRequestLabels))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeletePullRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeletePullRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeletePullRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeletePullRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeletePullRequest(ctx, req.(*MsgDeletePullRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateDao(ctx, req.(*MsgCreateDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RenameDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRenameDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RenameDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RenameDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RenameDao(ctx, req.(*MsgRenameDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDaoDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDaoDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDaoDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateDaoDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDaoDescription(ctx, req.(*MsgUpdateDaoDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDaoWebsite_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDaoWebsite)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDaoWebsite(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateDaoWebsite",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDaoWebsite(ctx, req.(*MsgUpdateDaoWebsite))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDaoLocation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDaoLocation)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDaoLocation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateDaoLocation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDaoLocation(ctx, req.(*MsgUpdateDaoLocation))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDaoAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDaoAvatar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDaoAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateDaoAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDaoAvatar(ctx, req.(*MsgUpdateDaoAvatar))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDaoMetadata_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDaoMetadata)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDaoMetadata(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateDaoMetadata",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDaoMetadata(ctx, req.(*MsgUpdateDaoMetadata))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DaoTreasurySpend_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDaoTreasurySpend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DaoTreasurySpend(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DaoTreasurySpend",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DaoTreasurySpend(ctx, req.(*MsgDaoTreasurySpend))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDaoConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDaoConfig)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDaoConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateDaoConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDaoConfig(ctx, req.(*MsgUpdateDaoConfig))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DaoCreateRelease_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDaoCreateRelease)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DaoCreateRelease(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DaoCreateRelease",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DaoCreateRelease(ctx, req.(*MsgDaoCreateRelease))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteDao_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteDao)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteDao(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteDao",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteDao(ctx, req.(*MsgDeleteDao))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateComment(ctx, req.(*MsgCreateComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateComment(ctx, req.(*MsgUpdateComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteComment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteComment(ctx, req.(*MsgDeleteComment))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ToggleCommentResolved_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToggleCommentResolved)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ToggleCommentResolved(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/ToggleCommentResolved",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ToggleCommentResolved(ctx, req.(*MsgToggleCommentResolved))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateIssue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateIssue(ctx, req.(*MsgCreateIssue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateIssueTitle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateIssueTitle)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateIssueTitle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateIssueTitle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateIssueTitle(ctx, req.(*MsgUpdateIssueTitle))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateIssueDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateIssueDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateIssueDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateIssueDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateIssueDescription(ctx, req.(*MsgUpdateIssueDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ToggleIssueState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToggleIssueState)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ToggleIssueState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/ToggleIssueState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ToggleIssueState(ctx, req.(*MsgToggleIssueState))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddIssueAssignees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddIssueAssignees)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddIssueAssignees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/AddIssueAssignees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddIssueAssignees(ctx, req.(*MsgAddIssueAssignees))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveIssueAssignees_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveIssueAssignees)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveIssueAssignees(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RemoveIssueAssignees",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveIssueAssignees(ctx, req.(*MsgRemoveIssueAssignees))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddIssueLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddIssueLabels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddIssueLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/AddIssueLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddIssueLabels(ctx, req.(*MsgAddIssueLabels))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveIssueLabels_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveIssueLabels)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveIssueLabels(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RemoveIssueLabels",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveIssueLabels(ctx, req.(*MsgRemoveIssueLabels))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteIssue_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteIssue)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteIssue(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteIssue",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteIssue(ctx, req.(*MsgDeleteIssue))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRepository(ctx, req.(*MsgCreateRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ForkRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgForkRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ForkRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/ForkRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ForkRepository(ctx, req.(*MsgForkRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RenameRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRenameRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RenameRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RenameRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RenameRepository(ctx, req.(*MsgRenameRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRepositoryDescription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRepositoryDescription)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRepositoryDescription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateRepositoryDescription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRepositoryDescription(ctx, req.(*MsgUpdateRepositoryDescription))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ToggleRepositoryArchived_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToggleRepositoryArchived)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ToggleRepositoryArchived(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/ToggleRepositoryArchived",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ToggleRepositoryArchived(ctx, req.(*MsgToggleRepositoryArchived))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ChangeOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgChangeOwner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ChangeOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/ChangeOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ChangeOwner(ctx, req.(*MsgChangeOwner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRepositoryCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRepositoryCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRepositoryCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateRepositoryCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRepositoryCollaborator(ctx, req.(*MsgUpdateRepositoryCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDaoRepositoryCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDaoRepositoryCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDaoRepositoryCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateDaoRepositoryCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDaoRepositoryCollaborator(ctx, req.(*MsgUpdateDaoRepositoryCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveRepositoryCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveRepositoryCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveRepositoryCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RemoveRepositoryCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveRepositoryCollaborator(ctx, req.(*MsgRemoveRepositoryCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_RemoveDaoRepositoryCollaborator_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgRemoveDaoRepositoryCollaborator)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).RemoveDaoRepositoryCollaborator(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/RemoveDaoRepositoryCollaborator",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).RemoveDaoRepositoryCollaborator(ctx, req.(*MsgRemoveDaoRepositoryCollaborator))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateRepositoryLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateRepositoryLabel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateRepositoryLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateRepositoryLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateRepositoryLabel(ctx, req.(*MsgCreateRepositoryLabel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRepositoryLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRepositoryLabel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRepositoryLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateRepositoryLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRepositoryLabel(ctx, req.(*MsgUpdateRepositoryLabel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteRepositoryLabel_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteRepositoryLabel)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteRepositoryLabel(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteRepositoryLabel",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteRepositoryLabel(ctx, req.(*MsgDeleteRepositoryLabel))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_SetDefaultBranch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgSetDefaultBranch)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).SetDefaultBranch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/SetDefaultBranch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).SetDefaultBranch(ctx, req.(*MsgSetDefaultBranch))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ToggleRepositoryForking_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToggleRepositoryForking)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ToggleRepositoryForking(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/ToggleRepositoryForking",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ToggleRepositoryForking(ctx, req.(*MsgToggleRepositoryForking))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_ToggleArweaveBackup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgToggleArweaveBackup)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).ToggleArweaveBackup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/ToggleArweaveBackup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).ToggleArweaveBackup(ctx, req.(*MsgToggleArweaveBackup))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteRepository)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteRepository(ctx, req.(*MsgDeleteRepository))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgCreateUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).CreateUser(ctx, req.(*MsgCreateUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateUserUsername_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateUserUsername)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateUserUsername(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateUserUsername",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateUserUsername(ctx, req.(*MsgUpdateUserUsername))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateUserName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateUserName)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateUserName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateUserName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateUserName(ctx, req.(*MsgUpdateUserName))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateUserBio_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateUserBio)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateUserBio(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateUserBio",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateUserBio(ctx, req.(*MsgUpdateUserBio))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateUserAvatar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateUserAvatar)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateUserAvatar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateUserAvatar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateUserAvatar(ctx, req.(*MsgUpdateUserAvatar))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDeleteUser)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DeleteUser(ctx, req.(*MsgDeleteUser))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateRepositoryBackupRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateRepositoryBackupRef)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateRepositoryBackupRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateRepositoryBackupRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateRepositoryBackupRef(ctx, req.(*MsgUpdateRepositoryBackupRef))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_AddRepositoryBackupRef_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgAddRepositoryBackupRef)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).AddRepositoryBackupRef(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/AddRepositoryBackupRef",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).AddRepositoryBackupRef(ctx, req.(*MsgAddRepositoryBackupRef))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateUserPinnedRepositories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateUserPinnedRepositories)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateUserPinnedRepositories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateUserPinnedRepositories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateUserPinnedRepositories(ctx, req.(*MsgUpdateUserPinnedRepositories))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateDaoPinnedRepositories_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateDaoPinnedRepositories)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateDaoPinnedRepositories(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateDaoPinnedRepositories",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateDaoPinnedRepositories(ctx, req.(*MsgUpdateDaoPinnedRepositories))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_UpdateParams_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgUpdateParams)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).UpdateParams(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/UpdateParams",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).UpdateParams(ctx, req.(*MsgUpdateParams))
	}
	return interceptor(ctx, in, info, handler)
}

func _Msg_DistributePlatformIncentives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgDistributePlatformIncentives)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgServer).DistributePlatformIncentives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/gitopia.gitopia.gitopia.Msg/DistributePlatformIncentives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgServer).DistributePlatformIncentives(ctx, req.(*MsgDistributePlatformIncentives))
	}
	return interceptor(ctx, in, info, handler)
}

var _Msg_serviceDesc = grpc.ServiceDesc{
	ServiceName: "gitopia.gitopia.gitopia.Msg",
	HandlerType: (*MsgServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ToggleForcePush",
			Handler:    _Msg_ToggleForcePush_Handler,
		},
		{
			MethodName: "CreateTask",
			Handler:    _Msg_CreateTask_Handler,
		},
		{
			MethodName: "UpdateTask",
			Handler:    _Msg_UpdateTask_Handler,
		},
		{
			MethodName: "DeleteTask",
			Handler:    _Msg_DeleteTask_Handler,
		},
		{
			MethodName: "SetBranch",
			Handler:    _Msg_SetBranch_Handler,
		},
		{
			MethodName: "MultiSetBranch",
			Handler:    _Msg_MultiSetBranch_Handler,
		},
		{
			MethodName: "DeleteBranch",
			Handler:    _Msg_DeleteBranch_Handler,
		},
		{
			MethodName: "MultiDeleteBranch",
			Handler:    _Msg_MultiDeleteBranch_Handler,
		},
		{
			MethodName: "SetTag",
			Handler:    _Msg_SetTag_Handler,
		},
		{
			MethodName: "MultiSetTag",
			Handler:    _Msg_MultiSetTag_Handler,
		},
		{
			MethodName: "DeleteTag",
			Handler:    _Msg_DeleteTag_Handler,
		},
		{
			MethodName: "MultiDeleteTag",
			Handler:    _Msg_MultiDeleteTag_Handler,
		},
		{
			MethodName: "CreateBounty",
			Handler:    _Msg_CreateBounty_Handler,
		},
		{
			MethodName: "UpdateBountyExpiry",
			Handler:    _Msg_UpdateBountyExpiry_Handler,
		},
		{
			MethodName: "CloseBounty",
			Handler:    _Msg_CloseBounty_Handler,
		},
		{
			MethodName: "DeleteBounty",
			Handler:    _Msg_DeleteBounty_Handler,
		},
		{
			MethodName: "Exercise",
			Handler:    _Msg_Exercise_Handler,
		},
		{
			MethodName: "CreateRelease",
			Handler:    _Msg_CreateRelease_Handler,
		},
		{
			MethodName: "UpdateRelease",
			Handler:    _Msg_UpdateRelease_Handler,
		},
		{
			MethodName: "DeleteRelease",
			Handler:    _Msg_DeleteRelease_Handler,
		},
		{
			MethodName: "CreatePullRequest",
			Handler:    _Msg_CreatePullRequest_Handler,
		},
		{
			MethodName: "UpdatePullRequestTitle",
			Handler:    _Msg_UpdatePullRequestTitle_Handler,
		},
		{
			MethodName: "UpdatePullRequestDescription",
			Handler:    _Msg_UpdatePullRequestDescription_Handler,
		},
		{
			MethodName: "InvokeMergePullRequest",
			Handler:    _Msg_InvokeMergePullRequest_Handler,
		},
		{
			MethodName: "InvokeDaoMergePullRequest",
			Handler:    _Msg_InvokeDaoMergePullRequest_Handler,
		},
		{
			MethodName: "SetPullRequestState",
			Handler:    _Msg_SetPullRequestState_Handler,
		},
		{
			MethodName: "AddPullRequestReviewers",
			Handler:    _Msg_AddPullRequestReviewers_Handler,
		},
		{
			MethodName: "RemovePullRequestReviewers",
			Handler:    _Msg_RemovePullRequestReviewers_Handler,
		},
		{
			MethodName: "AddPullRequestAssignees",
			Handler:    _Msg_AddPullRequestAssignees_Handler,
		},
		{
			MethodName: "RemovePullRequestAssignees",
			Handler:    _Msg_RemovePullRequestAssignees_Handler,
		},
		{
			MethodName: "LinkPullRequestIssueByIid",
			Handler:    _Msg_LinkPullRequestIssueByIid_Handler,
		},
		{
			MethodName: "UnlinkPullRequestIssueByIid",
			Handler:    _Msg_UnlinkPullRequestIssueByIid_Handler,
		},
		{
			MethodName: "AddPullRequestLabels",
			Handler:    _Msg_AddPullRequestLabels_Handler,
		},
		{
			MethodName: "RemovePullRequestLabels",
			Handler:    _Msg_RemovePullRequestLabels_Handler,
		},
		{
			MethodName: "DeletePullRequest",
			Handler:    _Msg_DeletePullRequest_Handler,
		},
		{
			MethodName: "CreateDao",
			Handler:    _Msg_CreateDao_Handler,
		},
		{
			MethodName: "RenameDao",
			Handler:    _Msg_RenameDao_Handler,
		},
		{
			MethodName: "UpdateDaoDescription",
			Handler:    _Msg_UpdateDaoDescription_Handler,
		},
		{
			MethodName: "UpdateDaoWebsite",
			Handler:    _Msg_UpdateDaoWebsite_Handler,
		},
		{
			MethodName: "UpdateDaoLocation",
			Handler:    _Msg_UpdateDaoLocation_Handler,
		},
		{
			MethodName: "UpdateDaoAvatar",
			Handler:    _Msg_UpdateDaoAvatar_Handler,
		},
		{
			MethodName: "UpdateDaoMetadata",
			Handler:    _Msg_UpdateDaoMetadata_Handler,
		},
		{
			MethodName: "DaoTreasurySpend",
			Handler:    _Msg_DaoTreasurySpend_Handler,
		},
		{
			MethodName: "UpdateDaoConfig",
			Handler:    _Msg_UpdateDaoConfig_Handler,
		},
		{
			MethodName: "DaoCreateRelease",
			Handler:    _Msg_DaoCreateRelease_Handler,
		},
		{
			MethodName: "DeleteDao",
			Handler:    _Msg_DeleteDao_Handler,
		},
		{
			MethodName: "CreateComment",
			Handler:    _Msg_CreateComment_Handler,
		},
		{
			MethodName: "UpdateComment",
			Handler:    _Msg_UpdateComment_Handler,
		},
		{
			MethodName: "DeleteComment",
			Handler:    _Msg_DeleteComment_Handler,
		},
		{
			MethodName: "ToggleCommentResolved",
			Handler:    _Msg_ToggleCommentResolved_Handler,
		},
		{
			MethodName: "CreateIssue",
			Handler:    _Msg_CreateIssue_Handler,
		},
		{
			MethodName: "UpdateIssueTitle",
			Handler:    _Msg_UpdateIssueTitle_Handler,
		},
		{
			MethodName: "UpdateIssueDescription",
			Handler:    _Msg_UpdateIssueDescription_Handler,
		},
		{
			MethodName: "ToggleIssueState",
			Handler:    _Msg_ToggleIssueState_Handler,
		},
		{
			MethodName: "AddIssueAssignees",
			Handler:    _Msg_AddIssueAssignees_Handler,
		},
		{
			MethodName: "RemoveIssueAssignees",
			Handler:    _Msg_RemoveIssueAssignees_Handler,
		},
		{
			MethodName: "AddIssueLabels",
			Handler:    _Msg_AddIssueLabels_Handler,
		},
		{
			MethodName: "RemoveIssueLabels",
			Handler:    _Msg_RemoveIssueLabels_Handler,
		},
		{
			MethodName: "DeleteIssue",
			Handler:    _Msg_DeleteIssue_Handler,
		},
		{
			MethodName: "CreateRepository",
			Handler:    _Msg_CreateRepository_Handler,
		},
		{
			MethodName: "ForkRepository",
			Handler:    _Msg_ForkRepository_Handler,
		},
		{
			MethodName: "RenameRepository",
			Handler:    _Msg_RenameRepository_Handler,
		},
		{
			MethodName: "UpdateRepositoryDescription",
			Handler:    _Msg_UpdateRepositoryDescription_Handler,
		},
		{
			MethodName: "ToggleRepositoryArchived",
			Handler:    _Msg_ToggleRepositoryArchived_Handler,
		},
		{
			MethodName: "ChangeOwner",
			Handler:    _Msg_ChangeOwner_Handler,
		},
		{
			MethodName: "UpdateRepositoryCollaborator",
			Handler:    _Msg_UpdateRepositoryCollaborator_Handler,
		},
		{
			MethodName: "UpdateDaoRepositoryCollaborator",
			Handler:    _Msg_UpdateDaoRepositoryCollaborator_Handler,
		},
		{
			MethodName: "RemoveRepositoryCollaborator",
			Handler:    _Msg_RemoveRepositoryCollaborator_Handler,
		},
		{
			MethodName: "RemoveDaoRepositoryCollaborator",
			Handler:    _Msg_RemoveDaoRepositoryCollaborator_Handler,
		},
		{
			MethodName: "CreateRepositoryLabel",
			Handler:    _Msg_CreateRepositoryLabel_Handler,
		},
		{
			MethodName: "UpdateRepositoryLabel",
			Handler:    _Msg_UpdateRepositoryLabel_Handler,
		},
		{
			MethodName: "DeleteRepositoryLabel",
			Handler:    _Msg_DeleteRepositoryLabel_Handler,
		},
		{
			MethodName: "SetDefaultBranch",
			Handler:    _Msg_SetDefaultBranch_Handler,
		},
		{
			MethodName: "ToggleRepositoryForking",
			Handler:    _Msg_ToggleRepositoryForking_Handler,
		},
		{
			MethodName: "ToggleArweaveBackup",
			Handler:    _Msg_ToggleArweaveBackup_Handler,
		},
		{
			MethodName: "DeleteRepository",
			Handler:    _Msg_DeleteRepository_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _Msg_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUserUsername",
			Handler:    _Msg_UpdateUserUsername_Handler,
		},
		{
			MethodName: "UpdateUserName",
			Handler:    _Msg_UpdateUserName_Handler,
		},
		{
			MethodName: "UpdateUserBio",
			Handler:    _Msg_UpdateUserBio_Handler,
		},
		{
			MethodName: "UpdateUserAvatar",
			Handler:    _Msg_UpdateUserAvatar_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _Msg_DeleteUser_Handler,
		},
		{
			MethodName: "UpdateRepositoryBackupRef",
			Handler:    _Msg_UpdateRepositoryBackupRef_Handler,
		},
		{
			MethodName: "AddRepositoryBackupRef",
			Handler:    _Msg_AddRepositoryBackupRef_Handler,
		},
		{
			MethodName: "UpdateUserPinnedRepositories",
			Handler:    _Msg_UpdateUserPinnedRepositories_Handler,
		},
		{
			MethodName: "UpdateDaoPinnedRepositories",
			Handler:    _Msg_UpdateDaoPinnedRepositories_Handler,
		},
		{
			MethodName: "UpdateParams",
			Handler:    _Msg_UpdateParams_Handler,
		},
		{
			MethodName: "DistributePlatformIncentives",
			Handler:    _Msg_DistributePlatformIncentives_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gitopia/gitopia/gitopia/tx.proto",
}

func (m *MsgExercise) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExercise) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExercise) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.To) > 0 {
		i -= len(m.To)
		copy(dAtA[i:], m.To)
		i = encodeVarintTx(dAtA, i, uint64(len(m.To)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgExerciseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgExerciseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgExerciseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgToggleForcePush) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleForcePush) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleForcePush) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.BranchName) > 0 {
		i -= len(m.BranchName)
		copy(dAtA[i:], m.BranchName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BranchName)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleForcePushResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleForcePushResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleForcePushResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateTask) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTask) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTask) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x1a
	}
	if m.TaskType != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TaskType))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateTaskResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateTaskResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateTaskResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTask) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTask) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTask) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Message) > 0 {
		i -= len(m.Message)
		copy(dAtA[i:], m.Message)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Message)))
		i--
		dAtA[i] = 0x22
	}
	if m.State != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateTaskResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateTaskResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateTaskResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTask) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTask) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTask) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryBackupRef) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryBackupRef) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryBackupRef) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Ref) > 0 {
		i -= len(m.Ref)
		copy(dAtA[i:], m.Ref)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Ref)))
		i--
		dAtA[i] = 0x22
	}
	if m.Store != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Store))
		i--
		dAtA[i] = 0x18
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryBackupRefResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryBackupRefResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryBackupRefResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddRepositoryBackupRef) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddRepositoryBackupRef) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddRepositoryBackupRef) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Ref) > 0 {
		i -= len(m.Ref)
		copy(dAtA[i:], m.Ref)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Ref)))
		i--
		dAtA[i] = 0x22
	}
	if m.Store != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Store))
		i--
		dAtA[i] = 0x18
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddRepositoryBackupRefResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddRepositoryBackupRefResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddRepositoryBackupRefResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTaskResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTaskResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTaskResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteStorageProviderResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteStorageProviderResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteStorageProviderResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetBranch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetBranch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetBranch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Branch.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetBranch_Branch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetBranch_Branch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetBranch_Branch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sha) > 0 {
		i -= len(m.Sha)
		copy(dAtA[i:], m.Sha)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sha)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetBranchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetBranchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetBranchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetDefaultBranch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetDefaultBranch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetDefaultBranch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Branch) > 0 {
		i -= len(m.Branch)
		copy(dAtA[i:], m.Branch)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Branch)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetDefaultBranchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetDefaultBranchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetDefaultBranchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMultiSetBranch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiSetBranch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiSetBranch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Branches) > 0 {
		for iNdEx := len(m.Branches) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Branches[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMultiSetBranch_Branch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiSetBranch_Branch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiSetBranch_Branch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sha) > 0 {
		i -= len(m.Sha)
		copy(dAtA[i:], m.Sha)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sha)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMultiSetBranchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiSetBranchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiSetBranchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBranch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBranch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBranch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Branch) > 0 {
		i -= len(m.Branch)
		copy(dAtA[i:], m.Branch)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Branch)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBranchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBranchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBranchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMultiDeleteBranch) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiDeleteBranch) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiDeleteBranch) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Branches) > 0 {
		for iNdEx := len(m.Branches) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Branches[iNdEx])
			copy(dAtA[i:], m.Branches[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Branches[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMultiDeleteBranchResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiDeleteBranchResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiDeleteBranchResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Tag.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetTag_Tag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTag_Tag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTag_Tag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sha) > 0 {
		i -= len(m.Sha)
		copy(dAtA[i:], m.Sha)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sha)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetTagResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetTagResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetTagResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMultiSetTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiSetTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiSetTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Tags) > 0 {
		for iNdEx := len(m.Tags) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tags[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMultiSetTag_Tag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiSetTag_Tag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiSetTag_Tag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Sha) > 0 {
		i -= len(m.Sha)
		copy(dAtA[i:], m.Sha)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Sha)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMultiSetTagResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiSetTagResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiSetTagResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Tag) > 0 {
		i -= len(m.Tag)
		copy(dAtA[i:], m.Tag)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Tag)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteTagResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteTagResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteTagResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgMultiDeleteTag) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiDeleteTag) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiDeleteTag) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Tags) > 0 {
		for iNdEx := len(m.Tags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Tags[iNdEx])
			copy(dAtA[i:], m.Tags[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Tags[iNdEx])))
			i--
			dAtA[i] = 0x1a
		}
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgMultiDeleteTagResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgMultiDeleteTagResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgMultiDeleteTagResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateBounty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBounty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBounty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Parent != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Parent))
		i--
		dAtA[i] = 0x30
	}
	if m.ParentIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ParentIid))
		i--
		dAtA[i] = 0x28
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x20
	}
	if m.Expiry != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Expiry))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateBountyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateBountyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateBountyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBountyExpiry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBountyExpiry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBountyExpiry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Expiry != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Expiry))
		i--
		dAtA[i] = 0x18
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateBountyExpiryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateBountyExpiryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateBountyExpiryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCloseBounty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCloseBounty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCloseBounty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCloseBountyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCloseBountyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCloseBountyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBounty) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBounty) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBounty) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteBountyResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteBountyResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteBountyResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateRelease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRelease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRelease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x5a
	}
	if m.IsTag {
		i--
		if m.IsTag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.PreRelease {
		i--
		if m.PreRelease {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.Draft {
		i--
		if m.Draft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Attachments) > 0 {
		i -= len(m.Attachments)
		copy(dAtA[i:], m.Attachments)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Attachments)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Target) > 0 {
		i -= len(m.Target)
		copy(dAtA[i:], m.Target)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Target)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TagName) > 0 {
		i -= len(m.TagName)
		copy(dAtA[i:], m.TagName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TagName)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateReleaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateReleaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateReleaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRelease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRelease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRelease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x5a
	}
	if m.IsTag {
		i--
		if m.IsTag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.PreRelease {
		i--
		if m.PreRelease {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.Draft {
		i--
		if m.Draft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Attachments) > 0 {
		i -= len(m.Attachments)
		copy(dAtA[i:], m.Attachments)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Attachments)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Target) > 0 {
		i -= len(m.Target)
		copy(dAtA[i:], m.Target)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Target)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TagName) > 0 {
		i -= len(m.TagName)
		copy(dAtA[i:], m.TagName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TagName)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateReleaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateReleaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateReleaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRelease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRelease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRelease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteReleaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteReleaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteReleaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreatePullRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePullRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePullRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.IssueIids) > 0 {
		dAtA18 := make([]byte, len(m.IssueIids)*10)
		var j17 int
		for _, num := range m.IssueIids {
			for num >= 1<<7 {
				dAtA18[j17] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j17++
			}
			dAtA18[j17] = uint8(num)
			j17++
		}
		i -= j17
		copy(dAtA[i:], dAtA18[:j17])
		i = encodeVarintTx(dAtA, i, uint64(j17))
		i--
		dAtA[i] = 0x5a
	}
	if len(m.LabelIds) > 0 {
		dAtA20 := make([]byte, len(m.LabelIds)*10)
		var j19 int
		for _, num := range m.LabelIds {
			for num >= 1<<7 {
				dAtA20[j19] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j19++
			}
			dAtA20[j19] = uint8(num)
			j19++
		}
		i -= j19
		copy(dAtA[i:], dAtA20[:j19])
		i = encodeVarintTx(dAtA, i, uint64(j19))
		i--
		dAtA[i] = 0x52
	}
	if len(m.Assignees) > 0 {
		for iNdEx := len(m.Assignees) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Assignees[iNdEx])
			copy(dAtA[i:], m.Assignees[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Assignees[iNdEx])))
			i--
			dAtA[i] = 0x4a
		}
	}
	if len(m.Reviewers) > 0 {
		for iNdEx := len(m.Reviewers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Reviewers[iNdEx])
			copy(dAtA[i:], m.Reviewers[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Reviewers[iNdEx])))
			i--
			dAtA[i] = 0x42
		}
	}
	{
		size, err := m.BaseRepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x3a
	if len(m.BaseBranch) > 0 {
		i -= len(m.BaseBranch)
		copy(dAtA[i:], m.BaseBranch)
		i = encodeVarintTx(dAtA, i, uint64(len(m.BaseBranch)))
		i--
		dAtA[i] = 0x32
	}
	{
		size, err := m.HeadRepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x2a
	if len(m.HeadBranch) > 0 {
		i -= len(m.HeadBranch)
		copy(dAtA[i:], m.HeadBranch)
		i = encodeVarintTx(dAtA, i, uint64(len(m.HeadBranch)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreatePullRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreatePullRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreatePullRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePullRequestTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePullRequestTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePullRequestTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePullRequestTitleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePullRequestTitleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePullRequestTitleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePullRequestDescription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePullRequestDescription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePullRequestDescription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdatePullRequestDescriptionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdatePullRequestDescriptionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdatePullRequestDescriptionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInvokeMergePullRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInvokeMergePullRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInvokeMergePullRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInvokeMergePullRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInvokeMergePullRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInvokeMergePullRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgInvokeDaoMergePullRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInvokeDaoMergePullRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInvokeDaoMergePullRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgInvokeDaoMergePullRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgInvokeDaoMergePullRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgInvokeDaoMergePullRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgSetPullRequestState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPullRequestState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPullRequestState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.TaskId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.TaskId))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CommentBody) > 0 {
		i -= len(m.CommentBody)
		copy(dAtA[i:], m.CommentBody)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommentBody)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.MergeCommitSha) > 0 {
		i -= len(m.MergeCommitSha)
		copy(dAtA[i:], m.MergeCommitSha)
		i = encodeVarintTx(dAtA, i, uint64(len(m.MergeCommitSha)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgSetPullRequestStateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgSetPullRequestStateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgSetPullRequestStateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddPullRequestReviewers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPullRequestReviewers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPullRequestReviewers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reviewers) > 0 {
		for iNdEx := len(m.Reviewers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Reviewers[iNdEx])
			copy(dAtA[i:], m.Reviewers[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Reviewers[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddPullRequestReviewersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPullRequestReviewersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPullRequestReviewersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemovePullRequestReviewers) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePullRequestReviewers) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePullRequestReviewers) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Reviewers) > 0 {
		for iNdEx := len(m.Reviewers) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Reviewers[iNdEx])
			copy(dAtA[i:], m.Reviewers[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Reviewers[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemovePullRequestReviewersResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePullRequestReviewersResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePullRequestReviewersResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddPullRequestAssignees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPullRequestAssignees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPullRequestAssignees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Assignees) > 0 {
		for iNdEx := len(m.Assignees) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Assignees[iNdEx])
			copy(dAtA[i:], m.Assignees[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Assignees[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddPullRequestAssigneesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPullRequestAssigneesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPullRequestAssigneesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemovePullRequestAssignees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePullRequestAssignees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePullRequestAssignees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Assignees) > 0 {
		for iNdEx := len(m.Assignees) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Assignees[iNdEx])
			copy(dAtA[i:], m.Assignees[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Assignees[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemovePullRequestAssigneesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePullRequestAssigneesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePullRequestAssigneesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgLinkPullRequestIssueByIid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLinkPullRequestIssueByIid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLinkPullRequestIssueByIid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IssueIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.IssueIid))
		i--
		dAtA[i] = 0x20
	}
	if m.PullRequestIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PullRequestIid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgLinkPullRequestIssueByIidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgLinkPullRequestIssueByIidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgLinkPullRequestIssueByIidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUnlinkPullRequestIssueByIid) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnlinkPullRequestIssueByIid) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnlinkPullRequestIssueByIid) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.IssueIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.IssueIid))
		i--
		dAtA[i] = 0x20
	}
	if m.PullRequestIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.PullRequestIid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUnlinkPullRequestIssueByIidResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUnlinkPullRequestIssueByIidResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUnlinkPullRequestIssueByIidResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddPullRequestLabels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPullRequestLabels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPullRequestLabels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LabelIds) > 0 {
		dAtA24 := make([]byte, len(m.LabelIds)*10)
		var j23 int
		for _, num := range m.LabelIds {
			for num >= 1<<7 {
				dAtA24[j23] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j23++
			}
			dAtA24[j23] = uint8(num)
			j23++
		}
		i -= j23
		copy(dAtA[i:], dAtA24[:j23])
		i = encodeVarintTx(dAtA, i, uint64(j23))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddPullRequestLabelsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddPullRequestLabelsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddPullRequestLabelsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemovePullRequestLabels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePullRequestLabels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePullRequestLabels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LabelIds) > 0 {
		dAtA26 := make([]byte, len(m.LabelIds)*10)
		var j25 int
		for _, num := range m.LabelIds {
			for num >= 1<<7 {
				dAtA26[j25] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j25++
			}
			dAtA26[j25] = uint8(num)
			j25++
		}
		i -= j25
		copy(dAtA[i:], dAtA26[:j25])
		i = encodeVarintTx(dAtA, i, uint64(j25))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemovePullRequestLabelsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemovePullRequestLabelsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemovePullRequestLabelsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeletePullRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePullRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePullRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeletePullRequestResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeletePullRequestResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeletePullRequestResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateDao) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDao) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDao) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Config != nil {
		{
			size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintTx(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x52
	}
	if len(m.Percentage) > 0 {
		i -= len(m.Percentage)
		copy(dAtA[i:], m.Percentage)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Percentage)))
		i--
		dAtA[i] = 0x4a
	}
	if len(m.VotingPeriod) > 0 {
		i -= len(m.VotingPeriod)
		copy(dAtA[i:], m.VotingPeriod)
		i = encodeVarintTx(dAtA, i, uint64(len(m.VotingPeriod)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.Members) > 0 {
		for iNdEx := len(m.Members) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Members[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AvatarUrl) > 0 {
		i -= len(m.AvatarUrl)
		copy(dAtA[i:], m.AvatarUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AvatarUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateDaoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateDaoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateDaoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRenameDao) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenameDao) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenameDao) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRenameDaoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenameDaoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenameDaoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoDescription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoDescription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoDescription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoDescriptionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoDescriptionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoDescriptionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoWebsite) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoWebsite) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoWebsite) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoWebsiteResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoWebsiteResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoWebsiteResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoLocation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoLocation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoLocation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoLocationResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoLocationResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoLocationResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoAvatar) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoAvatar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoAvatar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoAvatarResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoAvatarResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoAvatarResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoMetadata) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoMetadata) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoMetadata) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Website) > 0 {
		i -= len(m.Website)
		copy(dAtA[i:], m.Website)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Website)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Location) > 0 {
		i -= len(m.Location)
		copy(dAtA[i:], m.Location)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Location)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.AvatarUrl) > 0 {
		i -= len(m.AvatarUrl)
		copy(dAtA[i:], m.AvatarUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AvatarUrl)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoMetadataResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoMetadataResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoMetadataResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDaoTreasurySpend) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDaoTreasurySpend) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDaoTreasurySpend) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Amount) > 0 {
		for iNdEx := len(m.Amount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Amount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Recipient) > 0 {
		i -= len(m.Recipient)
		copy(dAtA[i:], m.Recipient)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Recipient)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDaoTreasurySpendResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDaoTreasurySpendResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDaoTreasurySpendResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoConfig) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoConfig) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoConfig) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Config.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x1a
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoConfigResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoConfigResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoConfigResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDaoCreateRelease) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDaoCreateRelease) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDaoCreateRelease) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x5a
	}
	if m.IsTag {
		i--
		if m.IsTag {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.PreRelease {
		i--
		if m.PreRelease {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if m.Draft {
		i--
		if m.Draft {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x40
	}
	if len(m.Attachments) > 0 {
		i -= len(m.Attachments)
		copy(dAtA[i:], m.Attachments)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Attachments)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Target) > 0 {
		i -= len(m.Target)
		copy(dAtA[i:], m.Target)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Target)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.TagName) > 0 {
		i -= len(m.TagName)
		copy(dAtA[i:], m.TagName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.TagName)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDaoCreateReleaseResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDaoCreateReleaseResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDaoCreateReleaseResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDao) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDao) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDao) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteDaoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteDaoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteDaoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Position != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Position))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Path) > 0 {
		i -= len(m.Path)
		copy(dAtA[i:], m.Path)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Path)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.DiffHunk) > 0 {
		i -= len(m.DiffHunk)
		copy(dAtA[i:], m.DiffHunk)
		i = encodeVarintTx(dAtA, i, uint64(len(m.DiffHunk)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.Attachments) > 0 {
		for iNdEx := len(m.Attachments) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attachments[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x32
		}
	}
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x2a
	}
	if m.Parent != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Parent))
		i--
		dAtA[i] = 0x20
	}
	if m.ParentIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ParentIid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateCommentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateCommentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateCommentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Attachments) > 0 {
		for iNdEx := len(m.Attachments) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Attachments[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if len(m.Body) > 0 {
		i -= len(m.Body)
		copy(dAtA[i:], m.Body)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Body)))
		i--
		dAtA[i] = 0x32
	}
	if m.CommentIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CommentIid))
		i--
		dAtA[i] = 0x28
	}
	if m.Parent != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Parent))
		i--
		dAtA[i] = 0x20
	}
	if m.ParentIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ParentIid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateCommentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateCommentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateCommentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteComment) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteComment) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteComment) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CommentIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CommentIid))
		i--
		dAtA[i] = 0x28
	}
	if m.Parent != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Parent))
		i--
		dAtA[i] = 0x20
	}
	if m.ParentIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ParentIid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteCommentResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteCommentResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteCommentResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgToggleCommentResolved) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleCommentResolved) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleCommentResolved) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.CommentIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.CommentIid))
		i--
		dAtA[i] = 0x28
	}
	if m.Parent != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Parent))
		i--
		dAtA[i] = 0x20
	}
	if m.ParentIid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.ParentIid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleCommentResolvedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleCommentResolvedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleCommentResolvedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Resolved {
		i--
		if m.Resolved {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateIssue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateIssue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateIssue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.BountyExpiry != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.BountyExpiry))
		i--
		dAtA[i] = 0x48
	}
	if len(m.BountyAmount) > 0 {
		for iNdEx := len(m.BountyAmount) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.BountyAmount[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.Assignees) > 0 {
		for iNdEx := len(m.Assignees) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Assignees[iNdEx])
			copy(dAtA[i:], m.Assignees[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Assignees[iNdEx])))
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.Weight != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Weight))
		i--
		dAtA[i] = 0x30
	}
	if len(m.LabelIds) > 0 {
		dAtA31 := make([]byte, len(m.LabelIds)*10)
		var j30 int
		for _, num := range m.LabelIds {
			for num >= 1<<7 {
				dAtA31[j30] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j30++
			}
			dAtA31[j30] = uint8(num)
			j30++
		}
		i -= j30
		copy(dAtA[i:], dAtA31[:j30])
		i = encodeVarintTx(dAtA, i, uint64(j30))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateIssueResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateIssueResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateIssueResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateIssueTitle) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateIssueTitle) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateIssueTitle) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateIssueTitleResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateIssueTitleResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateIssueTitleResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateIssueDescription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateIssueDescription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateIssueDescription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateIssueDescriptionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateIssueDescriptionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateIssueDescriptionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgToggleIssueState) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleIssueState) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleIssueState) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.CommentBody) > 0 {
		i -= len(m.CommentBody)
		copy(dAtA[i:], m.CommentBody)
		i = encodeVarintTx(dAtA, i, uint64(len(m.CommentBody)))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleIssueStateResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleIssueStateResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleIssueStateResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.State) > 0 {
		i -= len(m.State)
		copy(dAtA[i:], m.State)
		i = encodeVarintTx(dAtA, i, uint64(len(m.State)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddIssueAssignees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddIssueAssignees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddIssueAssignees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Assignees) > 0 {
		for iNdEx := len(m.Assignees) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Assignees[iNdEx])
			copy(dAtA[i:], m.Assignees[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Assignees[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddIssueAssigneesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddIssueAssigneesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddIssueAssigneesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveIssueAssignees) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveIssueAssignees) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveIssueAssignees) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Assignees) > 0 {
		for iNdEx := len(m.Assignees) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Assignees[iNdEx])
			copy(dAtA[i:], m.Assignees[iNdEx])
			i = encodeVarintTx(dAtA, i, uint64(len(m.Assignees[iNdEx])))
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveIssueAssigneesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveIssueAssigneesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveIssueAssigneesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgAddIssueLabels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddIssueLabels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddIssueLabels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LabelIds) > 0 {
		dAtA34 := make([]byte, len(m.LabelIds)*10)
		var j33 int
		for _, num := range m.LabelIds {
			for num >= 1<<7 {
				dAtA34[j33] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j33++
			}
			dAtA34[j33] = uint8(num)
			j33++
		}
		i -= j33
		copy(dAtA[i:], dAtA34[:j33])
		i = encodeVarintTx(dAtA, i, uint64(j33))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgAddIssueLabelsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgAddIssueLabelsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgAddIssueLabelsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveIssueLabels) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveIssueLabels) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveIssueLabels) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.LabelIds) > 0 {
		dAtA36 := make([]byte, len(m.LabelIds)*10)
		var j35 int
		for _, num := range m.LabelIds {
			for num >= 1<<7 {
				dAtA36[j35] = uint8(uint64(num)&0x7f | 0x80)
				num >>= 7
				j35++
			}
			dAtA36[j35] = uint8(num)
			j35++
		}
		i -= j35
		copy(dAtA[i:], dAtA36[:j35])
		i = encodeVarintTx(dAtA, i, uint64(j35))
		i--
		dAtA[i] = 0x22
	}
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveIssueLabelsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveIssueLabelsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveIssueLabelsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteIssue) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteIssue) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteIssue) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Iid != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Iid))
		i--
		dAtA[i] = 0x18
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteIssueResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteIssueResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteIssueResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateRepository) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRepository) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRepository) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateRepositoryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRepositoryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRepositoryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	return len(dAtA) - i, nil
}

func (m *MsgForkRepository) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgForkRepository) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgForkRepository) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Branch) > 0 {
		i -= len(m.Branch)
		copy(dAtA[i:], m.Branch)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Branch)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.ForkRepositoryDescription) > 0 {
		i -= len(m.ForkRepositoryDescription)
		copy(dAtA[i:], m.ForkRepositoryDescription)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ForkRepositoryDescription)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ForkRepositoryName) > 0 {
		i -= len(m.ForkRepositoryName)
		copy(dAtA[i:], m.ForkRepositoryName)
		i = encodeVarintTx(dAtA, i, uint64(len(m.ForkRepositoryName)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgForkRepositoryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgForkRepositoryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgForkRepositoryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgRenameRepository) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenameRepository) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenameRepository) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRenameRepositoryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRenameRepositoryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRenameRepositoryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryDescription) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryDescription) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryDescription) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryDescriptionResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryDescriptionResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryDescriptionResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgToggleRepositoryArchived) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleRepositoryArchived) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleRepositoryArchived) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleRepositoryArchivedResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleRepositoryArchivedResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleRepositoryArchivedResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgChangeOwner) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangeOwner) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangeOwner) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Owner) > 0 {
		i -= len(m.Owner)
		copy(dAtA[i:], m.Owner)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Owner)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgChangeOwnerResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgChangeOwnerResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgChangeOwnerResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryCollaborator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryCollaborator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryCollaborator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryCollaboratorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryCollaboratorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryCollaboratorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoRepositoryCollaborator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoRepositoryCollaborator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoRepositoryCollaborator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Role) > 0 {
		i -= len(m.Role)
		copy(dAtA[i:], m.Role)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Role)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoRepositoryCollaboratorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoRepositoryCollaboratorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoRepositoryCollaboratorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveRepositoryCollaborator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveRepositoryCollaborator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveRepositoryCollaborator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveRepositoryCollaboratorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveRepositoryCollaboratorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveRepositoryCollaboratorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgRemoveDaoRepositoryCollaborator) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveDaoRepositoryCollaborator) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveDaoRepositoryCollaborator) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.User) > 0 {
		i -= len(m.User)
		copy(dAtA[i:], m.User)
		i = encodeVarintTx(dAtA, i, uint64(len(m.User)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgRemoveDaoRepositoryCollaboratorResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgRemoveDaoRepositoryCollaboratorResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgRemoveDaoRepositoryCollaboratorResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateRepositoryLabel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRepositoryLabel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRepositoryLabel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Color) > 0 {
		i -= len(m.Color)
		copy(dAtA[i:], m.Color)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Color)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateRepositoryLabelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateRepositoryLabelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateRepositoryLabelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryLabel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryLabel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryLabel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.Color) > 0 {
		i -= len(m.Color)
		copy(dAtA[i:], m.Color)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Color)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x22
	}
	if m.LabelId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LabelId))
		i--
		dAtA[i] = 0x18
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateRepositoryLabelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateRepositoryLabelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateRepositoryLabelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRepositoryLabel) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRepositoryLabel) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRepositoryLabel) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.LabelId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.LabelId))
		i--
		dAtA[i] = 0x18
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRepositoryLabelResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRepositoryLabelResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRepositoryLabelResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgToggleRepositoryForking) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleRepositoryForking) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleRepositoryForking) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleRepositoryForkingResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleRepositoryForkingResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleRepositoryForkingResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.AllowForking {
		i--
		if m.AllowForking {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleArweaveBackup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleArweaveBackup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleArweaveBackup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgToggleArweaveBackupResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgToggleArweaveBackupResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgToggleArweaveBackupResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.EnableArweaveBackup {
		i--
		if m.EnableArweaveBackup {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRepository) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRepository) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRepository) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Provider) > 0 {
		i -= len(m.Provider)
		copy(dAtA[i:], m.Provider)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Provider)))
		i--
		dAtA[i] = 0x1a
	}
	{
		size, err := m.RepositoryId.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteRepositoryResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteRepositoryResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteRepositoryResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgCreateUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Bio) > 0 {
		i -= len(m.Bio)
		copy(dAtA[i:], m.Bio)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bio)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.AvatarUrl) > 0 {
		i -= len(m.AvatarUrl)
		copy(dAtA[i:], m.AvatarUrl)
		i = encodeVarintTx(dAtA, i, uint64(len(m.AvatarUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgCreateUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgCreateUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgCreateUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserUsername) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserUsername) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserUsername) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Username) > 0 {
		i -= len(m.Username)
		copy(dAtA[i:], m.Username)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Username)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserUsernameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserUsernameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserUsernameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserName) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserName) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserName) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserNameResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserNameResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserNameResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserBio) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserBio) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserBio) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Bio) > 0 {
		i -= len(m.Bio)
		copy(dAtA[i:], m.Bio)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Bio)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserBioResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserBioResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserBioResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserAvatar) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserAvatar) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserAvatar) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserAvatarResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserAvatarResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserAvatarResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDeleteUser) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteUser) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteUser) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDeleteUserResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDeleteUserResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDeleteUserResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserPinnedRepositories) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserPinnedRepositories) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserPinnedRepositories) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateUserPinnedRepositoriesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateUserPinnedRepositoriesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateUserPinnedRepositoriesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoPinnedRepositories) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoPinnedRepositories) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoPinnedRepositories) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x1a
	}
	if m.RepositoryId != 0 {
		i = encodeVarintTx(dAtA, i, uint64(m.RepositoryId))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Admin) > 0 {
		i -= len(m.Admin)
		copy(dAtA[i:], m.Admin)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Admin)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateDaoPinnedRepositoriesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateDaoPinnedRepositoriesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateDaoPinnedRepositoriesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParams) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParams) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParams) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Params.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgUpdateParamsResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgUpdateParamsResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgUpdateParamsResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func (m *MsgDistributePlatformIncentives) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDistributePlatformIncentives) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDistributePlatformIncentives) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Addresses) > 0 {
		for iNdEx := len(m.Addresses) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Addresses[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintTx(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Authority) > 0 {
		i -= len(m.Authority)
		copy(dAtA[i:], m.Authority)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Authority)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDistributePlatformIncentives_Address) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDistributePlatformIncentives_Address) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDistributePlatformIncentives_Address) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Amount.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintTx(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x12
	if len(m.Address) > 0 {
		i -= len(m.Address)
		copy(dAtA[i:], m.Address)
		i = encodeVarintTx(dAtA, i, uint64(len(m.Address)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *MsgDistributePlatformIncentivesResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *MsgDistributePlatformIncentivesResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *MsgDistributePlatformIncentivesResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	return len(dAtA) - i, nil
}

func encodeVarintTx(dAtA []byte, offset int, v uint64) int {
	offset -= sovTx(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *MsgExercise) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.To)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgExerciseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgToggleForcePush) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.BranchName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgToggleForcePushResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateTask) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TaskType != 0 {
		n += 1 + sovTx(uint64(m.TaskType))
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateTaskResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateTask) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.State != 0 {
		n += 1 + sovTx(uint64(m.State))
	}
	l = len(m.Message)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateTaskResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTask) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateRepositoryBackupRef) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.Store != 0 {
		n += 1 + sovTx(uint64(m.Store))
	}
	l = len(m.Ref)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateRepositoryBackupRefResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddRepositoryBackupRef) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.Store != 0 {
		n += 1 + sovTx(uint64(m.Store))
	}
	l = len(m.Ref)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddRepositoryBackupRefResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTaskResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteStorageProviderResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetBranch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.Branch.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetBranch_Branch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sha)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetBranchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetDefaultBranch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Branch)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetDefaultBranchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMultiSetBranch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if len(m.Branches) > 0 {
		for _, e := range m.Branches {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgMultiSetBranch_Branch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sha)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMultiSetBranchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteBranch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Branch)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteBranchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMultiDeleteBranch) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if len(m.Branches) > 0 {
		for _, s := range m.Branches {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgMultiDeleteBranchResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = m.Tag.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgSetTag_Tag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sha)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgSetTagResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMultiSetTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if len(m.Tags) > 0 {
		for _, e := range m.Tags {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgMultiSetTag_Tag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Sha)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgMultiSetTagResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Tag)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteTagResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgMultiDeleteTag) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if len(m.Tags) > 0 {
		for _, s := range m.Tags {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgMultiDeleteTagResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateBounty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.Expiry != 0 {
		n += 1 + sovTx(uint64(m.Expiry))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.ParentIid != 0 {
		n += 1 + sovTx(uint64(m.ParentIid))
	}
	if m.Parent != 0 {
		n += 1 + sovTx(uint64(m.Parent))
	}
	return n
}

func (m *MsgCreateBountyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateBountyExpiry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Expiry != 0 {
		n += 1 + sovTx(uint64(m.Expiry))
	}
	return n
}

func (m *MsgUpdateBountyExpiryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCloseBounty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgCloseBountyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteBounty) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteBountyResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateRelease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.TagName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Target)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Attachments)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Draft {
		n += 2
	}
	if m.PreRelease {
		n += 2
	}
	if m.IsTag {
		n += 2
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateReleaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateRelease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.TagName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Target)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Attachments)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Draft {
		n += 2
	}
	if m.PreRelease {
		n += 2
	}
	if m.IsTag {
		n += 2
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateReleaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteRelease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteReleaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreatePullRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.HeadBranch)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.HeadRepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.BaseBranch)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.BaseRepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if len(m.Reviewers) > 0 {
		for _, s := range m.Reviewers {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.Assignees) > 0 {
		for _, s := range m.Assignees {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.LabelIds) > 0 {
		l = 0
		for _, e := range m.LabelIds {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if len(m.IssueIids) > 0 {
		l = 0
		for _, e := range m.IssueIids {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	return n
}

func (m *MsgCreatePullRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	return n
}

func (m *MsgUpdatePullRequestTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePullRequestTitleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdatePullRequestDescription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdatePullRequestDescriptionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInvokeMergePullRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInvokeMergePullRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgInvokeDaoMergePullRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgInvokeDaoMergePullRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgSetPullRequestState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.MergeCommitSha)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.CommentBody)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.TaskId != 0 {
		n += 1 + sovTx(uint64(m.TaskId))
	}
	return n
}

func (m *MsgSetPullRequestStateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddPullRequestReviewers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.Reviewers) > 0 {
		for _, s := range m.Reviewers {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAddPullRequestReviewersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemovePullRequestReviewers) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.Reviewers) > 0 {
		for _, s := range m.Reviewers {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgRemovePullRequestReviewersResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddPullRequestAssignees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.Assignees) > 0 {
		for _, s := range m.Assignees {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAddPullRequestAssigneesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemovePullRequestAssignees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.Assignees) > 0 {
		for _, s := range m.Assignees {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgRemovePullRequestAssigneesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgLinkPullRequestIssueByIid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.PullRequestIid != 0 {
		n += 1 + sovTx(uint64(m.PullRequestIid))
	}
	if m.IssueIid != 0 {
		n += 1 + sovTx(uint64(m.IssueIid))
	}
	return n
}

func (m *MsgLinkPullRequestIssueByIidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUnlinkPullRequestIssueByIid) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.PullRequestIid != 0 {
		n += 1 + sovTx(uint64(m.PullRequestIid))
	}
	if m.IssueIid != 0 {
		n += 1 + sovTx(uint64(m.IssueIid))
	}
	return n
}

func (m *MsgUnlinkPullRequestIssueByIidResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddPullRequestLabels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.LabelIds) > 0 {
		l = 0
		for _, e := range m.LabelIds {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	return n
}

func (m *MsgAddPullRequestLabelsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemovePullRequestLabels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.LabelIds) > 0 {
		l = 0
		for _, e := range m.LabelIds {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	return n
}

func (m *MsgRemovePullRequestLabelsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeletePullRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	return n
}

func (m *MsgDeletePullRequestResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateDao) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AvatarUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Members) > 0 {
		for _, e := range m.Members {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.VotingPeriod)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Percentage)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Config != nil {
		l = m.Config.Size()
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateDaoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRenameDao) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRenameDaoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDaoDescription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDaoDescriptionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDaoWebsite) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDaoWebsiteResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDaoLocation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDaoLocationResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDaoAvatar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDaoAvatarResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDaoMetadata) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AvatarUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Location)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Website)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDaoMetadataResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDaoTreasurySpend) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Recipient)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Amount) > 0 {
		for _, e := range m.Amount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgDaoTreasurySpendResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDaoConfig) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Config.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateDaoConfigResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDaoCreateRelease) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.TagName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Target)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Attachments)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Draft {
		n += 2
	}
	if m.PreRelease {
		n += 2
	}
	if m.IsTag {
		n += 2
	}
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDaoCreateReleaseResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgDeleteDao) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteDaoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.ParentIid != 0 {
		n += 1 + sovTx(uint64(m.ParentIid))
	}
	if m.Parent != 0 {
		n += 1 + sovTx(uint64(m.Parent))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Attachments) > 0 {
		for _, e := range m.Attachments {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	l = len(m.DiffHunk)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Path)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.Position != 0 {
		n += 1 + sovTx(uint64(m.Position))
	}
	return n
}

func (m *MsgCreateCommentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.ParentIid != 0 {
		n += 1 + sovTx(uint64(m.ParentIid))
	}
	if m.Parent != 0 {
		n += 1 + sovTx(uint64(m.Parent))
	}
	if m.CommentIid != 0 {
		n += 1 + sovTx(uint64(m.CommentIid))
	}
	l = len(m.Body)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Attachments) > 0 {
		for _, e := range m.Attachments {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgUpdateCommentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteComment) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.ParentIid != 0 {
		n += 1 + sovTx(uint64(m.ParentIid))
	}
	if m.Parent != 0 {
		n += 1 + sovTx(uint64(m.Parent))
	}
	if m.CommentIid != 0 {
		n += 1 + sovTx(uint64(m.CommentIid))
	}
	return n
}

func (m *MsgDeleteCommentResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgToggleCommentResolved) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.ParentIid != 0 {
		n += 1 + sovTx(uint64(m.ParentIid))
	}
	if m.Parent != 0 {
		n += 1 + sovTx(uint64(m.Parent))
	}
	if m.CommentIid != 0 {
		n += 1 + sovTx(uint64(m.CommentIid))
	}
	return n
}

func (m *MsgToggleCommentResolvedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Resolved {
		n += 2
	}
	return n
}

func (m *MsgCreateIssue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.LabelIds) > 0 {
		l = 0
		for _, e := range m.LabelIds {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	if m.Weight != 0 {
		n += 1 + sovTx(uint64(m.Weight))
	}
	if len(m.Assignees) > 0 {
		for _, s := range m.Assignees {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if len(m.BountyAmount) > 0 {
		for _, e := range m.BountyAmount {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	if m.BountyExpiry != 0 {
		n += 1 + sovTx(uint64(m.BountyExpiry))
	}
	return n
}

func (m *MsgCreateIssueResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	return n
}

func (m *MsgUpdateIssueTitle) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateIssueTitleResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateIssueDescription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateIssueDescriptionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgToggleIssueState) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	l = len(m.CommentBody)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgToggleIssueStateResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.State)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgAddIssueAssignees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.Assignees) > 0 {
		for _, s := range m.Assignees {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgAddIssueAssigneesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveIssueAssignees) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.Assignees) > 0 {
		for _, s := range m.Assignees {
			l = len(s)
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgRemoveIssueAssigneesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgAddIssueLabels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.LabelIds) > 0 {
		l = 0
		for _, e := range m.LabelIds {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	return n
}

func (m *MsgAddIssueLabelsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveIssueLabels) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	if len(m.LabelIds) > 0 {
		l = 0
		for _, e := range m.LabelIds {
			l += sovTx(uint64(e))
		}
		n += 1 + sovTx(uint64(l)) + l
	}
	return n
}

func (m *MsgRemoveIssueLabelsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteIssue) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	if m.Iid != 0 {
		n += 1 + sovTx(uint64(m.Iid))
	}
	return n
}

func (m *MsgDeleteIssueResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateRepository) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateRepositoryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgForkRepository) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.ForkRepositoryName)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.ForkRepositoryDescription)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Branch)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgForkRepositoryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgRenameRepository) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRenameRepositoryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateRepositoryDescription) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateRepositoryDescriptionResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgToggleRepositoryArchived) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgToggleRepositoryArchivedResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgChangeOwner) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Owner)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgChangeOwnerResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateRepositoryCollaborator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateRepositoryCollaboratorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDaoRepositoryCollaborator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Role)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDaoRepositoryCollaboratorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveRepositoryCollaborator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveRepositoryCollaboratorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgRemoveDaoRepositoryCollaborator) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.User)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgRemoveDaoRepositoryCollaboratorResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateRepositoryLabel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateRepositoryLabelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTx(uint64(m.Id))
	}
	return n
}

func (m *MsgUpdateRepositoryLabel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.LabelId != 0 {
		n += 1 + sovTx(uint64(m.LabelId))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Color)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateRepositoryLabelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteRepositoryLabel) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	if m.LabelId != 0 {
		n += 1 + sovTx(uint64(m.LabelId))
	}
	return n
}

func (m *MsgDeleteRepositoryLabelResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgToggleRepositoryForking) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgToggleRepositoryForkingResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.AllowForking {
		n += 2
	}
	return n
}

func (m *MsgToggleArweaveBackup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgToggleArweaveBackupResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.EnableArweaveBackup {
		n += 2
	}
	return n
}

func (m *MsgDeleteRepository) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.RepositoryId.Size()
	n += 1 + l + sovTx(uint64(l))
	l = len(m.Provider)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteRepositoryResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgCreateUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.AvatarUrl)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bio)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgCreateUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateUserUsername) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Username)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateUserUsernameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateUserName) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateUserNameResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateUserBio) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Bio)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateUserBioResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateUserAvatar) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateUserAvatarResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDeleteUser) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgDeleteUserResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateUserPinnedRepositories) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	return n
}

func (m *MsgUpdateUserPinnedRepositoriesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateDaoPinnedRepositories) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Admin)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if m.RepositoryId != 0 {
		n += 1 + sovTx(uint64(m.RepositoryId))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	return n
}

func (m *MsgUpdateDaoPinnedRepositoriesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgUpdateParams) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Params.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgUpdateParamsResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func (m *MsgDistributePlatformIncentives) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Authority)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	if len(m.Addresses) > 0 {
		for _, e := range m.Addresses {
			l = e.Size()
			n += 1 + l + sovTx(uint64(l))
		}
	}
	return n
}

func (m *MsgDistributePlatformIncentives_Address) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Address)
	if l > 0 {
		n += 1 + l + sovTx(uint64(l))
	}
	l = m.Amount.Size()
	n += 1 + l + sovTx(uint64(l))
	return n
}

func (m *MsgDistributePlatformIncentivesResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	return n
}

func sovTx(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTx(x uint64) (n int) {
	return sovTx(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *MsgExercise) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExercise: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExercise: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field To", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.To = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgExerciseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgExerciseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgExerciseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleForcePush) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleForcePush: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleForcePush: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BranchName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BranchName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleForcePushResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleForcePushResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleForcePushResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTask) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTask: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTask: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskType", wireType)
			}
			m.TaskType = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TaskType |= TaskType(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateTaskResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateTaskResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateTaskResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTask) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTask: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTask: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= TaskState(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Message", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Message = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateTaskResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateTaskResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateTaskResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTask) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTask: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTask: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryBackupRef) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryBackupRef: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryBackupRef: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Store", wireType)
			}
			m.Store = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Store |= RepositoryBackup_Store(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ref", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ref = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryBackupRefResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryBackupRefResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryBackupRefResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddRepositoryBackupRef) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddRepositoryBackupRef: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddRepositoryBackupRef: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Store", wireType)
			}
			m.Store = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Store |= RepositoryBackup_Store(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ref", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ref = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddRepositoryBackupRefResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddRepositoryBackupRefResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddRepositoryBackupRefResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTaskResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTaskResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTaskResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteStorageProviderResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteStorageProviderResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteStorageProviderResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetBranch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetBranch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetBranch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branch", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Branch.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetBranch_Branch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Branch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Branch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetBranchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetBranchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetBranchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetDefaultBranch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetDefaultBranch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetDefaultBranch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetDefaultBranchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetDefaultBranchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetDefaultBranchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiSetBranch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiSetBranch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiSetBranch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branches", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branches = append(m.Branches, MsgMultiSetBranch_Branch{})
			if err := m.Branches[len(m.Branches)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiSetBranch_Branch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Branch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Branch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiSetBranchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiSetBranchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiSetBranchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBranch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBranch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBranch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBranchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBranchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBranchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiDeleteBranch) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiDeleteBranch: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiDeleteBranch: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branches", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branches = append(m.Branches, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiDeleteBranchResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiDeleteBranchResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiDeleteBranchResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Tag.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTag_Tag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Tag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Tag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetTagResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetTagResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetTagResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiSetTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiSetTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiSetTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tags = append(m.Tags, MsgMultiSetTag_Tag{})
			if err := m.Tags[len(m.Tags)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiSetTag_Tag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Tag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Tag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Sha", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Sha = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiSetTagResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiSetTagResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiSetTagResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteTagResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteTagResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteTagResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiDeleteTag) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiDeleteTag: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiDeleteTag: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tags = append(m.Tags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgMultiDeleteTagResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgMultiDeleteTagResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgMultiDeleteTagResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBounty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBounty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBounty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expiry", wireType)
			}
			m.Expiry = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Expiry |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentIid", wireType)
			}
			m.ParentIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parent", wireType)
			}
			m.Parent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Parent |= BountyParent(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateBountyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateBountyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateBountyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBountyExpiry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBountyExpiry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBountyExpiry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Expiry", wireType)
			}
			m.Expiry = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Expiry |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateBountyExpiryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateBountyExpiryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateBountyExpiryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCloseBounty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCloseBounty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCloseBounty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCloseBountyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCloseBountyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCloseBountyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBounty) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBounty: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBounty: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteBountyResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteBountyResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteBountyResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRelease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRelease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRelease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Target = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attachments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attachments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Draft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Draft = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreRelease", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PreRelease = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsTag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsTag = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateReleaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateReleaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateReleaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRelease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRelease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRelease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Target = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attachments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attachments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Draft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Draft = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreRelease", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PreRelease = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsTag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsTag = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateReleaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateReleaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateReleaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRelease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRelease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRelease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteReleaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteReleaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteReleaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePullRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePullRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePullRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadBranch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.HeadBranch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field HeadRepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.HeadRepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseBranch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BaseBranch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BaseRepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.BaseRepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reviewers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reviewers = append(m.Reviewers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assignees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assignees = append(m.Assignees, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 10:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.LabelIds = append(m.LabelIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.LabelIds) == 0 {
					m.LabelIds = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.LabelIds = append(m.LabelIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelIds", wireType)
			}
		case 11:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.IssueIids = append(m.IssueIids, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.IssueIids) == 0 {
					m.IssueIids = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.IssueIids = append(m.IssueIids, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field IssueIids", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreatePullRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreatePullRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreatePullRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePullRequestTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePullRequestTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePullRequestTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePullRequestTitleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePullRequestTitleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePullRequestTitleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePullRequestDescription) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePullRequestDescription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePullRequestDescription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdatePullRequestDescriptionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdatePullRequestDescriptionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdatePullRequestDescriptionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInvokeMergePullRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInvokeMergePullRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInvokeMergePullRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInvokeMergePullRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInvokeMergePullRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInvokeMergePullRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInvokeDaoMergePullRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInvokeDaoMergePullRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInvokeDaoMergePullRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgInvokeDaoMergePullRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgInvokeDaoMergePullRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgInvokeDaoMergePullRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPullRequestState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPullRequestState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPullRequestState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field MergeCommitSha", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.MergeCommitSha = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentBody", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommentBody = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TaskId", wireType)
			}
			m.TaskId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TaskId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgSetPullRequestStateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgSetPullRequestStateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgSetPullRequestStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPullRequestReviewers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPullRequestReviewers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPullRequestReviewers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reviewers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reviewers = append(m.Reviewers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPullRequestReviewersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPullRequestReviewersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPullRequestReviewersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePullRequestReviewers) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePullRequestReviewers: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePullRequestReviewers: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reviewers", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Reviewers = append(m.Reviewers, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePullRequestReviewersResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePullRequestReviewersResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePullRequestReviewersResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPullRequestAssignees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPullRequestAssignees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPullRequestAssignees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assignees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assignees = append(m.Assignees, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPullRequestAssigneesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPullRequestAssigneesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPullRequestAssigneesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePullRequestAssignees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePullRequestAssignees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePullRequestAssignees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assignees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assignees = append(m.Assignees, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePullRequestAssigneesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePullRequestAssigneesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePullRequestAssigneesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLinkPullRequestIssueByIid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLinkPullRequestIssueByIid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLinkPullRequestIssueByIid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullRequestIid", wireType)
			}
			m.PullRequestIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PullRequestIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IssueIid", wireType)
			}
			m.IssueIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IssueIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgLinkPullRequestIssueByIidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgLinkPullRequestIssueByIidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgLinkPullRequestIssueByIidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnlinkPullRequestIssueByIid) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnlinkPullRequestIssueByIid: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnlinkPullRequestIssueByIid: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PullRequestIid", wireType)
			}
			m.PullRequestIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PullRequestIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IssueIid", wireType)
			}
			m.IssueIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.IssueIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUnlinkPullRequestIssueByIidResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUnlinkPullRequestIssueByIidResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUnlinkPullRequestIssueByIidResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPullRequestLabels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPullRequestLabels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPullRequestLabels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.LabelIds = append(m.LabelIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.LabelIds) == 0 {
					m.LabelIds = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.LabelIds = append(m.LabelIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddPullRequestLabelsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddPullRequestLabelsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddPullRequestLabelsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePullRequestLabels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePullRequestLabels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePullRequestLabels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.LabelIds = append(m.LabelIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.LabelIds) == 0 {
					m.LabelIds = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.LabelIds = append(m.LabelIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemovePullRequestLabelsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemovePullRequestLabelsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemovePullRequestLabelsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePullRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePullRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePullRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeletePullRequestResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeletePullRequestResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeletePullRequestResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDao) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDao: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDao: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Members", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Members = append(m.Members, group.MemberRequest{})
			if err := m.Members[len(m.Members)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VotingPeriod", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VotingPeriod = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Percentage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Percentage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 10:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Config == nil {
				m.Config = &DaoConfig{}
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateDaoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateDaoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateDaoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenameDao) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenameDao: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenameDao: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenameDaoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenameDaoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenameDaoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoDescription) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoDescription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoDescription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoDescriptionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoDescriptionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoDescriptionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoWebsite) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoWebsite: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoWebsite: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoWebsiteResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoWebsiteResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoWebsiteResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoLocation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoLocation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoLocation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoLocationResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoLocationResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoLocationResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoAvatar) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoAvatar: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoAvatar: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoAvatarResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoAvatarResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoAvatarResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoMetadata) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoMetadata: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoMetadata: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Location", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Location = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Website", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Website = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoMetadataResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoMetadataResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoMetadataResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDaoTreasurySpend) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDaoTreasurySpend: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDaoTreasurySpend: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Recipient", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Recipient = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Amount = append(m.Amount, types.Coin{})
			if err := m.Amount[len(m.Amount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDaoTreasurySpendResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDaoTreasurySpendResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDaoTreasurySpendResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoConfig) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoConfig: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoConfig: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Config", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Config.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoConfigResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoConfigResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoConfigResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDaoCreateRelease) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDaoCreateRelease: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDaoCreateRelease: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field TagName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.TagName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Target", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Target = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attachments", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attachments = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Draft", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Draft = bool(v != 0)
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PreRelease", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.PreRelease = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field IsTag", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.IsTag = bool(v != 0)
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDaoCreateReleaseResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDaoCreateReleaseResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDaoCreateReleaseResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDao) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDao: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDao: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteDaoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteDaoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteDaoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentIid", wireType)
			}
			m.ParentIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parent", wireType)
			}
			m.Parent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Parent |= CommentParent(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attachments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attachments = append(m.Attachments, &Attachment{})
			if err := m.Attachments[len(m.Attachments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DiffHunk", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DiffHunk = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Path", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Path = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Position", wireType)
			}
			m.Position = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Position |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateCommentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateCommentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateCommentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentIid", wireType)
			}
			m.ParentIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parent", wireType)
			}
			m.Parent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Parent |= CommentParent(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentIid", wireType)
			}
			m.CommentIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Body", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Body = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Attachments", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Attachments = append(m.Attachments, &Attachment{})
			if err := m.Attachments[len(m.Attachments)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateCommentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateCommentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateCommentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteComment) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteComment: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteComment: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentIid", wireType)
			}
			m.ParentIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parent", wireType)
			}
			m.Parent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Parent |= CommentParent(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentIid", wireType)
			}
			m.CommentIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteCommentResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteCommentResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteCommentResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleCommentResolved) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleCommentResolved: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleCommentResolved: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ParentIid", wireType)
			}
			m.ParentIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ParentIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Parent", wireType)
			}
			m.Parent = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Parent |= CommentParent(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentIid", wireType)
			}
			m.CommentIid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CommentIid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleCommentResolvedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleCommentResolvedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleCommentResolvedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Resolved", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Resolved = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateIssue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateIssue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateIssue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.LabelIds = append(m.LabelIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.LabelIds) == 0 {
					m.LabelIds = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.LabelIds = append(m.LabelIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelIds", wireType)
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Weight", wireType)
			}
			m.Weight = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Weight |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assignees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assignees = append(m.Assignees, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field BountyAmount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.BountyAmount = append(m.BountyAmount, types.Coin{})
			if err := m.BountyAmount[len(m.BountyAmount)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field BountyExpiry", wireType)
			}
			m.BountyExpiry = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.BountyExpiry |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateIssueResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateIssueResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateIssueResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateIssueTitle) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateIssueTitle: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateIssueTitle: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateIssueTitleResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateIssueTitleResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateIssueTitleResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateIssueDescription) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateIssueDescription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateIssueDescription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateIssueDescriptionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateIssueDescriptionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateIssueDescriptionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleIssueState) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleIssueState: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleIssueState: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommentBody", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommentBody = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleIssueStateResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleIssueStateResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleIssueStateResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.State = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddIssueAssignees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddIssueAssignees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddIssueAssignees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assignees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assignees = append(m.Assignees, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddIssueAssigneesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddIssueAssigneesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddIssueAssigneesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveIssueAssignees) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveIssueAssignees: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveIssueAssignees: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Assignees", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Assignees = append(m.Assignees, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveIssueAssigneesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveIssueAssigneesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveIssueAssigneesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddIssueLabels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddIssueLabels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddIssueLabels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.LabelIds = append(m.LabelIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.LabelIds) == 0 {
					m.LabelIds = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.LabelIds = append(m.LabelIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgAddIssueLabelsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgAddIssueLabelsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgAddIssueLabelsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveIssueLabels) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveIssueLabels: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveIssueLabels: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType == 0 {
				var v uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					v |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				m.LabelIds = append(m.LabelIds, v)
			} else if wireType == 2 {
				var packedLen int
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowTx
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					packedLen |= int(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				if packedLen < 0 {
					return ErrInvalidLengthTx
				}
				postIndex := iNdEx + packedLen
				if postIndex < 0 {
					return ErrInvalidLengthTx
				}
				if postIndex > l {
					return io.ErrUnexpectedEOF
				}
				var elementCount int
				var count int
				for _, integer := range dAtA[iNdEx:postIndex] {
					if integer < 128 {
						count++
					}
				}
				elementCount = count
				if elementCount != 0 && len(m.LabelIds) == 0 {
					m.LabelIds = make([]uint64, 0, elementCount)
				}
				for iNdEx < postIndex {
					var v uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowTx
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						v |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					m.LabelIds = append(m.LabelIds, v)
				}
			} else {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelIds", wireType)
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveIssueLabelsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveIssueLabelsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveIssueLabelsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteIssue) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteIssue: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteIssue: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Iid", wireType)
			}
			m.Iid = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Iid |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteIssueResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteIssueResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteIssueResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRepository) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRepository: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRepository: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRepositoryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRepositoryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRepositoryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgForkRepository) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgForkRepository: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgForkRepository: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForkRepositoryName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForkRepositoryName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ForkRepositoryDescription", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ForkRepositoryDescription = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Branch", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Branch = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgForkRepositoryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgForkRepositoryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgForkRepositoryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenameRepository) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenameRepository: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenameRepository: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRenameRepositoryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRenameRepositoryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRenameRepositoryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryDescription) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryDescription: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryDescription: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryDescriptionResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryDescriptionResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryDescriptionResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleRepositoryArchived) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleRepositoryArchived: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleRepositoryArchived: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleRepositoryArchivedResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleRepositoryArchivedResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleRepositoryArchivedResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangeOwner) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangeOwner: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangeOwner: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Owner", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Owner = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgChangeOwnerResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgChangeOwnerResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgChangeOwnerResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryCollaborator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryCollaborator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryCollaborator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryCollaboratorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryCollaboratorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryCollaboratorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoRepositoryCollaborator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoRepositoryCollaborator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoRepositoryCollaborator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Role", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Role = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoRepositoryCollaboratorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoRepositoryCollaboratorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoRepositoryCollaboratorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveRepositoryCollaborator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveRepositoryCollaborator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveRepositoryCollaborator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveRepositoryCollaboratorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveRepositoryCollaboratorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveRepositoryCollaboratorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveDaoRepositoryCollaborator) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveDaoRepositoryCollaborator: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveDaoRepositoryCollaborator: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field User", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.User = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgRemoveDaoRepositoryCollaboratorResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgRemoveDaoRepositoryCollaboratorResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgRemoveDaoRepositoryCollaboratorResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRepositoryLabel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRepositoryLabel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRepositoryLabel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateRepositoryLabelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateRepositoryLabelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateRepositoryLabelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryLabel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryLabel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryLabel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelId", wireType)
			}
			m.LabelId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LabelId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Color", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Color = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateRepositoryLabelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateRepositoryLabelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateRepositoryLabelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRepositoryLabel) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRepositoryLabel: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRepositoryLabel: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LabelId", wireType)
			}
			m.LabelId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LabelId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRepositoryLabelResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRepositoryLabelResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRepositoryLabelResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleRepositoryForking) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleRepositoryForking: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleRepositoryForking: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleRepositoryForkingResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleRepositoryForkingResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleRepositoryForkingResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AllowForking", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.AllowForking = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleArweaveBackup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleArweaveBackup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleArweaveBackup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgToggleArweaveBackupResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgToggleArweaveBackupResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgToggleArweaveBackupResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnableArweaveBackup", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.EnableArweaveBackup = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRepository) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRepository: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRepository: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.RepositoryId.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Provider", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Provider = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteRepositoryResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteRepositoryResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteRepositoryResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field AvatarUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.AvatarUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgCreateUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgCreateUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgCreateUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserUsername) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserUsername: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserUsername: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Username", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Username = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserUsernameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserUsernameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserUsernameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserName) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserName: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserName: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserNameResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserNameResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserNameResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserBio) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserBio: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserBio: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Bio", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Bio = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserBioResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserBioResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserBioResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserAvatar) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserAvatar: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserAvatar: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserAvatarResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserAvatarResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserAvatarResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteUser) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteUser: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteUser: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDeleteUserResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDeleteUserResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDeleteUserResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserPinnedRepositories) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserPinnedRepositories: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserPinnedRepositories: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateUserPinnedRepositoriesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateUserPinnedRepositoriesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateUserPinnedRepositoriesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoPinnedRepositories) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoPinnedRepositories: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoPinnedRepositories: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Admin", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Admin = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field RepositoryId", wireType)
			}
			m.RepositoryId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.RepositoryId |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateDaoPinnedRepositoriesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateDaoPinnedRepositoriesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateDaoPinnedRepositoriesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParams) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParams: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParams: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Params", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Params.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgUpdateParamsResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgUpdateParamsResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDistributePlatformIncentives) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDistributePlatformIncentives: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDistributePlatformIncentives: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authority", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authority = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Addresses", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Addresses = append(m.Addresses, MsgDistributePlatformIncentives_Address{})
			if err := m.Addresses[len(m.Addresses)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDistributePlatformIncentives_Address) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Address: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Address: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Address", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Address = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Amount", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTx
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthTx
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthTx
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Amount.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *MsgDistributePlatformIncentivesResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTx
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: MsgDistributePlatformIncentivesResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: MsgDistributePlatformIncentivesResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipTx(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTx
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTx(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTx
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTx
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTx
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTx
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTx
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTx        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTx          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTx = fmt.Errorf("proto: unexpected end of group")
)
