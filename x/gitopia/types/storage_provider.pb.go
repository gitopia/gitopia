// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: gitopia/storage_provider.proto

package types

import (
	fmt "fmt"
	proto "github.com/cosmos/gogoproto/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type StorageProvider_Store int32

const (
	StorageProvider_IPFS    StorageProvider_Store = 0
	StorageProvider_ARWEAVE StorageProvider_Store = 1
)

var StorageProvider_Store_name = map[int32]string{
	0: "IPFS",
	1: "ARWEAVE",
}

var StorageProvider_Store_value = map[string]int32{
	"IPFS":    0,
	"ARWEAVE": 1,
}

func (x StorageProvider_Store) String() string {
	return proto.EnumName(StorageProvider_Store_name, int32(x))
}

func (StorageProvider_Store) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9bc6bebbb912b6af, []int{0, 0}
}

type StorageProvider struct {
	Id      uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Store   StorageProvider_Store `protobuf:"varint,2,opt,name=store,proto3,enum=gitopia.gitopia.gitopia.StorageProvider_Store" json:"store,omitempty"`
	Creator string                `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
}

func (m *StorageProvider) Reset()         { *m = StorageProvider{} }
func (m *StorageProvider) String() string { return proto.CompactTextString(m) }
func (*StorageProvider) ProtoMessage()    {}
func (*StorageProvider) Descriptor() ([]byte, []int) {
	return fileDescriptor_9bc6bebbb912b6af, []int{0}
}
func (m *StorageProvider) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *StorageProvider) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_StorageProvider.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *StorageProvider) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StorageProvider.Merge(m, src)
}
func (m *StorageProvider) XXX_Size() int {
	return m.Size()
}
func (m *StorageProvider) XXX_DiscardUnknown() {
	xxx_messageInfo_StorageProvider.DiscardUnknown(m)
}

var xxx_messageInfo_StorageProvider proto.InternalMessageInfo

func (m *StorageProvider) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *StorageProvider) GetStore() StorageProvider_Store {
	if m != nil {
		return m.Store
	}
	return StorageProvider_IPFS
}

func (m *StorageProvider) GetCreator() string {
	if m != nil {
		return m.Creator
	}
	return ""
}

func init() {
	proto.RegisterEnum("gitopia.gitopia.gitopia.StorageProvider_Store", StorageProvider_Store_name, StorageProvider_Store_value)
	proto.RegisterType((*StorageProvider)(nil), "gitopia.gitopia.gitopia.StorageProvider")
}

func init() { proto.RegisterFile("gitopia/storage_provider.proto", fileDescriptor_9bc6bebbb912b6af) }

var fileDescriptor_9bc6bebbb912b6af = []byte{
	// 224 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4b, 0xcf, 0x2c, 0xc9,
	0x2f, 0xc8, 0x4c, 0xd4, 0x2f, 0x2e, 0xc9, 0x2f, 0x4a, 0x4c, 0x4f, 0x8d, 0x2f, 0x28, 0xca, 0x2f,
	0xcb, 0x4c, 0x49, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0x87, 0xca, 0xeb, 0xa1,
	0xd1, 0x4a, 0x0b, 0x19, 0xb9, 0xf8, 0x83, 0x21, 0x7a, 0x02, 0xa0, 0x5a, 0x84, 0xf8, 0xb8, 0x98,
	0x32, 0x53, 0x24, 0x18, 0x15, 0x18, 0x35, 0x58, 0x82, 0x98, 0x32, 0x53, 0x84, 0x5c, 0xb8, 0x58,
	0x41, 0xc6, 0xa6, 0x4a, 0x30, 0x29, 0x30, 0x6a, 0xf0, 0x19, 0xe9, 0xe9, 0xe1, 0x30, 0x4c, 0x0f,
	0xcd, 0x20, 0x30, 0x3f, 0x35, 0x08, 0xa2, 0x59, 0x48, 0x82, 0x8b, 0x3d, 0xb9, 0x28, 0x35, 0xb1,
	0x24, 0xbf, 0x48, 0x82, 0x59, 0x81, 0x51, 0x83, 0x33, 0x08, 0xc6, 0x55, 0x92, 0xe3, 0x62, 0x05,
	0xab, 0x14, 0xe2, 0xe0, 0x62, 0xf1, 0x0c, 0x70, 0x0b, 0x16, 0x60, 0x10, 0xe2, 0xe6, 0x62, 0x77,
	0x0c, 0x0a, 0x77, 0x75, 0x0c, 0x73, 0x15, 0x60, 0x74, 0x72, 0x39, 0xf1, 0x48, 0x8e, 0xf1, 0xc2,
	0x23, 0x39, 0xc6, 0x07, 0x8f, 0xe4, 0x18, 0x27, 0x3c, 0x96, 0x63, 0xb8, 0xf0, 0x58, 0x8e, 0xe1,
	0xc6, 0x63, 0x39, 0x86, 0x28, 0xad, 0xf4, 0xcc, 0x92, 0x8c, 0xd2, 0x24, 0xbd, 0xe4, 0xfc, 0x5c,
	0x7d, 0x58, 0x08, 0xc0, 0xe8, 0x0a, 0x38, 0xab, 0xa4, 0xb2, 0x20, 0xb5, 0x38, 0x89, 0x0d, 0x1c,
	0x12, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x24, 0x44, 0x79, 0x12, 0x2b, 0x01, 0x00, 0x00,
}

func (m *StorageProvider) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *StorageProvider) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *StorageProvider) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Creator) > 0 {
		i -= len(m.Creator)
		copy(dAtA[i:], m.Creator)
		i = encodeVarintStorageProvider(dAtA, i, uint64(len(m.Creator)))
		i--
		dAtA[i] = 0x1a
	}
	if m.Store != 0 {
		i = encodeVarintStorageProvider(dAtA, i, uint64(m.Store))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintStorageProvider(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintStorageProvider(dAtA []byte, offset int, v uint64) int {
	offset -= sovStorageProvider(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *StorageProvider) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovStorageProvider(uint64(m.Id))
	}
	if m.Store != 0 {
		n += 1 + sovStorageProvider(uint64(m.Store))
	}
	l = len(m.Creator)
	if l > 0 {
		n += 1 + l + sovStorageProvider(uint64(l))
	}
	return n
}

func sovStorageProvider(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozStorageProvider(x uint64) (n int) {
	return sovStorageProvider(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *StorageProvider) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowStorageProvider
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: StorageProvider: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: StorageProvider: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorageProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Store", wireType)
			}
			m.Store = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorageProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Store |= StorageProvider_Store(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Creator", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowStorageProvider
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthStorageProvider
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthStorageProvider
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Creator = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipStorageProvider(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthStorageProvider
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipStorageProvider(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowStorageProvider
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStorageProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowStorageProvider
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthStorageProvider
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupStorageProvider
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthStorageProvider
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthStorageProvider        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowStorageProvider          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupStorageProvider = fmt.Errorf("proto: unexpected end of group")
)
